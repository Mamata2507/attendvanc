{"version":3,"sources":["globalData/actionTypes/index.js","globalData/customModalItems/index.js","globalData/facePhoto/index.js","globalData/webcamResolutionType/index.js","globalData/attendanceMode/index.js","context/attendance.js","context/auth.js","context/course.js","context/enrolment.js","context/facePhoto.js","context/navbar.js","globalData/navbar/index.js","context/faceThresholdDistance.js","globalData/faceAPI/index.js","context/notification.js","components/common/customModal/index.js","components/common/sharedLayout/Footer.js","utils/ErrorHandling.js","graphql/query/course/courseQuery.js","graphql/query/facePhoto/facePhotosQuery.js","graphql/query/notification/notificationsQuery.js","graphql/query/attendance/attendanceQuery.js","graphql/query/warning/getWarningCountQuery.js","graphql/query/trx/trxListInAttendanceQuery.js","components/lecturerComponent/LecturerDrawerMenu.js","components/lecturerComponent/LecturerMenu.js","assets/index.js","components/lecturerComponent/LecturerSiderNavbar.js","components/studentComponent/StudentDrawerMenu.js","components/studentComponent/StudentMenu.js","components/studentComponent/StudentSiderNavbar.js","components/common/sharedLayout/ProfileNavbar.js","components/common/sharedLayout/Greeting.js","components/common/sharedLayout/Navbar.js","components/common/sharedLayout/PageTitleBreadcrumb.js","graphql/mutation/attendance/createAttendanceMutation.js","graphql/mutation/attendance/editAttendanceModeMutation.js","graphql/mutation/attendance/editAttendanceOnOffMutation.js","graphql/mutation/attendance/deleteAttendanceMutation.js","graphql/mutation/course/addCourseMutation.js","graphql/mutation/course/deleteCourseMutation.js","graphql/mutation/course/enrolCourseMutation.js","graphql/mutation/course/withdrawCourseMutation.js","graphql/mutation/facePhoto/addFacePhotoMutation.js","graphql/mutation/enrolment/enrolmentMutation.js","graphql/mutation/facePhoto/deleteFacePhotoMutation.js","graphql/mutation/login_register/loginUserMutation.js","graphql/mutation/login_register/registerUserMutation.js","graphql/mutation/participant/participantMutation.js","graphql/mutation/user/editProfileMutation.js","graphql/mutation/user/editCardIDAndUserLevel.js","graphql/mutation/trx/createTrxMutation.js","graphql/mutation/warning/obtainStudentWarningMutation.js","pages/common/courseDetails/CourseDetailCard.js","pages/common/courseDetails/CourseDetails.js","utils/hooks.js","components/common/course/AddCourseForm.js","components/common/course/EnrolCourseInput.js","pages/common/dashboard/Dashboard.js","globalData/limitFetch/index.js","components/common/mainMenu/HeaderNavbar.js","pages/common/mainMenu/MainMenu.js","config/index.js","pages/common/mainMenu/SignIn.js","pages/common/mainMenu/SignUp.js","pages/common/noFound/NoFound.js","components/common/notification/Notification.js","utils/FetchChecker.js","utils/LoadingSpin.js","pages/common/notification/Notifications.js","pages/common/profile/Profile.js","pages/common/attendance/inCourseHistory.js","pages/common/attendance/HistoryViz.js","pages/common/attendance/singleHistory.js","faceUtil/index.js","utils/ModelLoading.js","utils/ModelLoadStatus.js","pages/common/attendanceRoom/ProcessFaceRecognition.js","utils/drawRectAndLabelFace.js","pages/common/attendanceRoom/ListView.js","pages/common/attendanceRoom/TrxDashboard.js","pages/common/attendanceRoom/index.js","pages/common/undefinedCardIDAndRole/index.js","pages/common/privacyPolicy/PrivacyPolicy.js","pages/common/termCondition/TermCondition.js","pages/common/userGuidelines/UserGuidelines.js","pages/lecturerPage/attendanceForm/index.js","pages/studentPage/faceGallery/UploadFromDisk.js","pages/studentPage/faceGallery/UploadFromWebcam.js","utils/drawFaceRect.js","pages/studentPage/faceGallery/addFacePhoto.js","pages/studentPage/faceGallery/index.js","routes/AuthRoute.js","routes/LecturerRoute.js","routes/ProtectedRoute.js","routes/StudentRoute.js","routes/UndefinedCardIDAndRoleRoute.js","Testing/index.js","App.js","ApolloProvider.js","serviceWorker.js","index.js"],"names":["actionTypes","modalItems","name","action","delete","withdraw","kick","approve","reject","UPLOAD_OPTION","DEFAULT_WEBCAM_RESOLUTION","webcamResolutionType","label","width","height","attendanceMode","initialState","attendances","newAttendances","initialAccess","AttendanceContext","createContext","attendanceReducer","state","type","attendance","AttendanceProvider","props","useReducer","dispatch","Provider","value","loadAttendances","addAttendance","resetState","user","avatarColor","backgroundColor","Math","random","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","login","userData","logout","authReducer","payload","updated","AuthProvider","setItem","token","window","location","reload","editProfile","courses","newCourses","fetchedDone","CourseContext","courseReducer","done","course","CourseProvider","setFetchedDone","loadCourses","addCourse","enrolments","newEnrolments","initialCountDone","enrolCount","EnrolmentContext","enrolmentReducer","count","updatedEnrolments","enrolment","EnrolmentProvider","getEnrolCount","setEnrolCount","loadEnrolments","enrolCourse","facePhotos","notifyAddPhoto","FacePhotoContext","facePhotoReducer","updatedFacePhotos","length","FacePhotoProvider","loadFacePhotos","NavbarContext","NavbarProvider","useState","collapsed","SetCollapsed","toggleCollapsed","FaceThresholdDistanceContext","FaceThresholdDistanceProvider","threshold","SetThreshold","setFaceThresholdDistance","notifications","uncheckedNotificationCount","pressedNotification","NotificationContext","notificationReducer","NotificationProvider","setPressedNotification","loadNotifications","setUncheckedNotificationCount","title","itemType","visible","loading","handleOk","handleCancel","template","shortID","code","session","student","firstName","lastName","cardID","shape","src","photoURL","size","icon","FileImageOutlined","matricNumber","key","date","time","stats","onOk","onCancel","okButtonProps","disabled","cancelButtonProps","okText","tip","style","fontSize","Footer","Layout","textAlign","getFullYear","to","CheckError","err","message","error","msg","replace","FETCH_COURSES_COUNT_QUERY","gql","FETCH_COURSE_QUERY","FETCH_PARTICIPANTS_QUERY","FETCH_COURSES_QUERY","FETCH_FACE_PHOTOS_COUNT_QUERY","FETCH_FACE_PHOTOS_QUERY","FETCH_FACE_MATCHER_IN_COURSE_QUERY","FETCH_UNCHECKED_NOTIFICATIONS_QUERY","FETCH_NOTIFICATIONS_QUERY","FETCH_ATTENDANCE_LIST_COUNT_IN_COURSE_QUERY","FETCH_ATTENDANCE_QUERY","FETCH_ATTENDANCE_LIST_IN_COURSE_QUERY","FETCH_TRX_LIST_IN_ATTENDANCE","isCollapseMenuOpen","setIsCollapseMenuOpen","pathname","substr","useContext","className","placement","onClose","HomeOutlined","path","theme","mode","defaultSelectedKeys","Item","APP_LOGO_URL","link","process","alt","onError","console","log","LecturerMenu","PictureOutlined","StudentMenu","menuVisible","setMenuVisible","overlay","UserOutlined","LogoutOutlined","onClick","profilePictureURL","Header","Title","Typography","useQuery","onCompleted","data","getUncheckedNotificationsCount","level","UnorderedListOutlined","userLevel","StudentDrawerMenu","LecturerDrawerMenu","h","getHours","greetMode","BellOutlined","Sider","collapsible","onCollapse","titleList","map","CREATE_ATTENDANCE_MUTATION","EDIT_ATTENDANCE_MODE_MUTATION","EDIT_ATTENDANCE_ON_OFF_MUTATION","DELETE_ATTENDANCE_MUTATION","ADD_COURSE_MUTATION","DELETE_COURSE_MUTATION","ENROL_COURSE_MUTATION","WITHDRAW_COURSE_MUTATION","ADD_FACE_PHOTO_MUTATION","DELETE_FACE_PHOTO_MUTATION","LOGIN_USER","LOGIN_GOOGLE_USER","REGISTER_USER","KICK_PARTICIPANT_MUTATION","EDIT_PROFILE_MUTATION","EDIT_CARDID_AND_ROLE_MUTATION","CREATE_TRX_MUTATION","Content","columns","dataIndex","render","imgURL","record","displayedName","align","sorter","a","b","localeCompare","index","danger","setVisible","setSelectedParticipant","selectedParticipant","kickParticipantStatus","participants","setParticipants","splice","fetchCourseGQLQuery","variables","id","match","params","notifyOnNetworkStatusChange","fetchParticipantGQLQuery","useEffect","getParticipants","useMutation","success","kickParticipant","kickParticipantCallback","profilePicture","PageTitleBreadcrumb","CourseDetailCard","getCourse","orientation","color","fontWeight","scroll","x","dataSource","currUser","find","par","_id","filter","parsedParticipants","float","RedoOutlined","refetch","participantID","courseID","update","updatedParticipant","participant","useForm","callback","values","setValues","onChange","event","target","onSubmit","refetchTableTotal","refetchTable","addCourseCallback","courseName","courseCode","courseSession","onFinish","rules","required","placeholder","htmlType","setCourseID","enrolCourseCallback","enrolCourseStatus","display","e","marginLeft","text","active","compare","bil","multiple","_","handleAccess","margin","ArrowRightOutlined","handleDelete","selectedCourse","withdrawCourseStatus","DeleteFilled","pageSize","current","total","tablePagination","setTablePagination","SetSelectedCourse","SetVisible","totalCoursesQuery","getCoursesCount","getEnrolledCoursesCount","prevState","currPage","fetchMore","withdrawCourse","withdrawCourseCallback","deleteCourseCallback","deleteCourseStatus","getCourses","history","push","EnrolCourseInput","AddCourseForm","direction","pagination","parsedData","c","tmp","owner","creator","parseCourseData","class","fill","stroke","stroke-linecap","stroke-linejoin","stroke-width","viewBox","d","border","background","backgroundImage","GOOGLE_CLIENT_ID","context","loginUser","email","password","pressedGoogleLogin","setPressedGoogleLogin","googleSignIn","loginGoogleUser","loginGoogleUserStatus","alignItems","justifyContent","flexDirection","initialValues","remember","prefix","MailOutlined","Password","LockOutlined","clientId","buttonText","onSuccess","res","googleID","profileObj","googleId","googleEmail","googleFirstName","givenName","googleLastName","familyName","googleProfilePicture","imageUrl","onFailure","cookiePolicy","onRequest","LoadingOutlined","addUser","confirmPassword","register","info","pattern","min","whitespace","getFieldValue","validator","rule","Promise","resolve","valuePropName","Group","span","marginBottom","notification","checked","content","CheckOutlined","moment","updatedAt","fromNow","FetchChecker","allLoadedMessage","noItemMessage","handleFetchMore","LoadingSpin","limit","networkStatus","getNotifications","n","setTimeout","hasNextPage","cursor","updateQuery","pv","fetchMoreResult","__typename","previewSource","setPreviewSource","editProfileMutation","htmlFor","file","reader","FileReader","readAsDataURL","onloadend","result","previewFile","files","accept","defaultValue","attendanceList","setAttendanceList","ClockCircleFilled","StopOutlined","open","handleAccessRoom","RightCircleFilled","handleAccessHistory","ProfileOutlined","selectedAttendance","deleteAttendanceListtatus","setSelectedAttendance","totalAttendanceListCountInCourse","getAttendanceListCountInCourse","attendanceID","deleteAttendanceCallback","getAttendanceListInCourse","att","format","room","isOn","parseAttendanceData","attendeesLength","absenteesLength","setData","activeIndex","setActiveIndex","innerWidth","innerHeight","pieSize","setPieSize","PIECOLORS","addEventListener","activeShape","RADIAN","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","y","dy","r","toFixed","dataKey","onMouseEnter","entry","status","checkin_date","checkin_time","attendees","setAttendees","absentees","setAbsentees","setStats","attendanceGQLQuery","courseAndParticipantsGQLQuery","trxListInAttendanceGQLQuery","currAbsentees","attend_at","getTrxListInAttendance","attendee","studentID","currAttendees","Object","assign","createdAt","getAttendance","HistoryViz","avatar","abs","parseParticipantData","loadModels","setLoadingMessage","setLoadingMessageError","MODEL_URL","faceapi","getFullFaceDescription","blob","inputSize","scoreThreshold","OPTION","useTinyModel","img","withFaceLandmarks","withFaceDescriptors","fullDesc","createMatcher","faceProfile","maxDescriptorDistance","labeledDescriptors","profile","photo","Float32Array","faceDescriptor","Number","faceMatcher","isFaceDetectionModelLoaded","ssdMobilenetv1","isFeatureExtractionModelLoaded","faceRecognitionNet","isFacialLandmarkDetectionModelLoaded","faceLandmark68TinyNet","loadingMessage","minHeight","indicator","marginRight","errorMessage","opacity","Option","Select","webcamRef","useRef","canvasRef","selectedWebcam","setSelectedWebcam","inputDevices","setInputDevices","camWidth","setCamWidth","camHeight","setCamHeight","isAllModelLoaded","setIsAllModelLoaded","loadingMessageError","setFullDesc","waitText","setWaitText","createTrx","createTrxCallback","loadingtheModel","navigator","mediaDevices","enumerateDevices","then","devices","device","kind","inputDevice","capture","video","readyState","videoWidth","videoHeight","getScreenshot","catch","ctx","getContext","descriptions","faceDB","forEach","desc","detection","box","landmarksPoint","landmarks","_positions","bestMatch","findBestMatch","descriptor","_label","filterParticipants","font","lineWidth","strokeStyle","point","beginPath","fillText","fillStyle","arc","_x","_y","closePath","rect","distance","drawRectAndLabelFace","interval","setInterval","clearInterval","deviceId","ModelLoadStatus","ModelLoading","muted","ref","audio","screenshotFormat","videoConstraints","mirrored","position","zindex","studentList","isPhotoVisible","setIsPhotoVisible","itemLayout","renderItem","item","Meta","description","flexWrap","data-src","trxGQLQuery","pollInterval","sort","ListView","setMode","setIsOn","setFacePhotos","setFaceMatcher","setCourse","getFaceMatcherInCourse","matcher","validMatcher","m","profileList","editAttendanceMode","editAttendanceModeCallback","editAttendanceModeStatus","editAttendanceOnOff","editAttendanceOnOffCallback","editAttendanceOnOffStatus","ProcessFaceRecognition","TrxDashboard","editCardIDAndRoleCallback","editCardIDAndUserLevel","editCardIDAndRoleStatus","role","href","toISOString","selectedDate","setSelectedDate","selectedTime","setSelectedTime","courseGQLQuery","createAttendance","submitAttendanceCallback","submitAttendanceStatus","_d","getBase64","onload","onerror","UploadFromDisk","addFacePhotoCallback","galleryRefetch","countRefetch","previewVisible","setPreviewVisible","setFaceDescriptor","previewImage","setPreviewImage","previewTitle","setPreviewTitle","isRunningFaceDetector","setIsRunningFaceDetector","detectionCount","setDetectionCount","fileList","setFileList","handlePreview","url","substring","lastIndexOf","handleChange","preview","test","alert","originFileObj","beforeUpload","listType","onPreview","progress","PlusOutlined","marginTop","photoData","toString","wordBreak","footer","UploadFromWebcam","drawFaceRect","selectedUploadOption","setSelectedUploadOption","op","isDescriptorVisible","setIsDescriptorVisible","isDeleteModalVisible","setIsDeleteModalVisible","selectedPhoto","setSelectedPhoto","getFacePhotos","facePhotosCountQuery","deleteFacePhotoCallback","deleteFacePhotoStatus","getFacePhotosCount","deleteFacePhoto","photoID","AuthRoute","Component","component","rest","LecturerRoute","ProtectedRoute","StudentRoute","App","exact","MainMenu","SignIn","SignUp","UndefinedCardIDAndRoleRoute","UndefinedCardIDAndRole","Dashboard","Profile","Notifications","CourseDetails","AttendanceForm","AttendanceRoom","InCourseAttendanceHistory","SingleAttendanceHistory","FaceGallery","TermCondition","PrivacyPolicy","UserGuidelines","NoFound","httpLink","createHttpLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","concat","cache","InMemoryCache","dataIdFromObject","responseObject","defaultDataIdFromObject","Boolean","hostname","ReactDOM","ApolloProvider","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.897e2a20.chunk.js","sourcesContent":["export const actionTypes = {\n  //auth\n  LOGIN_ACTION: 'LOGIN',\n  EDIT_PROFILE_ACTION: 'EDIT_PROFILE',\n  LOGOUT_ACTION: 'LOGOUT',\n\n  //commom fetch done\n  FETCH_DONE_ACTION: 'FETCH_DONE',\n\n  //course\n  LOAD_COURSES_ACTION: 'LOAD_COURSES',\n  ADD_COURSE_ACTION: 'ADD_COURSE',\n\n  //enrolment\n  LOAD_ENROLMENTS_ACTION: 'LOAD_ENROLMENTS',\n  ENROL_COURSE_ACTION: 'ENROL_COURSE',\n  SET_ENROLCOUNT_ACTION: 'SET_ENROLCOUNT',\n  GET_ENROLCOUNT_ACTION: 'FETCH_ENROLCOUNT',\n\n  //notification\n  PRESSED_NOTIFICATION_ACTION: 'PRESSED_NOTIFICATION',\n  LOAD_NOTIFICATIONS_ACTION: 'LOAD_NOTIFICATIONS',\n  SET_UNCHECKED_NOTIFICATION_COUNT_ACTION: 'SET_UNCHECKED_NOTIFICATION_COUNT',\n\n  //face photo\n  LOAD_FACE_PHOTOS_ACTION: 'LOAD_FACE_PHOTOS',\n\n  //attendace\n  LOAD_ATTENDANCES_ACTION: 'LOAD_ATTENDANCES',\n  ADD_ATTENDANCE_ACTION: 'ADD_ATTENDANCE',\n  RESET_STATE_ACTION: 'RESET_STATE',\n};\n","export const modalItems = {\n  course: {\n    name: 'course',\n    action: { delete: 'Delete', withdraw: 'Withdraw' },\n  },\n  participant: {\n    name: 'student',\n    action: { kick: 'Kick' },\n  },\n  enrolment: {\n    name: 'enrolment',\n    action: { approve: 'Approve', reject: 'Reject' },\n  },\n  facePhoto: { name: 'photo', action: { delete: 'Delete' } },\n  attendance: { name: 'attendance', action: { delete: 'Delete' } },\n};\n","export const DEFAULT_UPLOAD_OPTION = 'From Disk';\n\nexport const UPLOAD_OPTION = ['From Disk', 'From Webcam'];\n","export const DEFAULT_WEBCAM_RESOLUTION = {\n  label: '640x480',\n  width: 640,\n  height: 480,\n};\n\nexport const webcamResolutionType = [\n  {\n    label: '300x250',\n    width: 300,\n    height: 250,\n  },\n  {\n    label: '500x350',\n    width: 500,\n    height: 350,\n  },\n  {\n    label: '640x480',\n    width: 640,\n    height: 480,\n  },\n  {\n    label: '960x720',\n    width: 960,\n    height: 720,\n  },\n  {\n    label: '1024x768',\n    width: 1024,\n    height: 768,\n  },\n  {\n    label: '1280x960',\n    width: 1280,\n    height: 960,\n  }\n];\n","export const DEFAULT_ATTENDANCE_MODE = \"Remote\";\n\nexport const attendanceMode = [\n  \"Remote\",\n  \"Offline\"\n];\n","import React, { createContext, useReducer } from 'react';\nimport { actionTypes } from '../globalData';\n\nconst initialState = {\n  attendances: [],\n  newAttendances: [],\n  initialAccess: true,\n};\n\nconst AttendanceContext = createContext({});\n\nfunction attendanceReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.LOAD_ATTENDANCES_ACTION:\n      return {\n        ...state,\n        attendances: [...state.newAttendances, ...action.attendances],\n        initialAccess: false,\n      };\n\n    case actionTypes.ADD_ATTENDANCE_ACTION:\n      //here we check whether the attendances is not fully loaded, mean the attendance should be included in the fetch\n      if (state.initialAccess) {\n        return {\n          ...state,\n        };\n      }\n      return {\n        ...state,\n        newAttendances: [action.attendance, ...state.newAttendances],\n      };\n\n    case actionTypes.RESET_STATE_ACTION:\n      return {\n        ...state,\n        attendances: [],\n        newAttendances: []\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction AttendanceProvider(props) {\n  const [state, dispatch] = useReducer(attendanceReducer, initialState);\n\n  function loadAttendances(attendances) {\n    dispatch({ type: actionTypes.LOAD_ATTENDANCES_ACTION, attendances });\n  }\n\n  function addAttendance(attendance) {\n    dispatch({\n      type: actionTypes.ADD_ATTENDANCE_ACTION,\n      attendance,\n    });\n  }\n\n  function resetState(attendance) {\n    dispatch({\n      type: actionTypes.RESET_STATE_ACTION,\n      attendance,\n    });\n  }\n\n  return (\n    <AttendanceContext.Provider\n      value={{\n        attendances: state.attendances,\n        loadAttendances,\n        addAttendance,\n        resetState\n      }}\n      {...props}\n    />\n  );\n}\n\nexport { AttendanceContext, AttendanceProvider };\n","import jwtDecode from 'jwt-decode';\nimport React, { createContext, useReducer } from 'react';\nimport { actionTypes } from '../globalData';\n\nconst initialState = {\n  user: null,\n  avatarColor: {\n    backgroundColor: `rgb(${Math.random() * 150 + 30}, ${\n      Math.random() * 150 + 30\n    }, ${Math.random() * 150 + 30})`,\n  },\n};\n\nif (localStorage.getItem('jwtToken')) {\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem('jwtToken');\n  } else {\n    initialState.user = decodedToken;\n  }\n}\n\nconst AuthContext = createContext({\n  user: null,\n  login: (userData) => {},\n  logout: () => {},\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.LOGIN_ACTION:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case actionTypes.EDIT_PROFILE_ACTION:\n      return {\n        ...state,\n        user: action.updated,\n      };\n    case actionTypes.LOGOUT_ACTION:\n      return {\n        ...state,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    localStorage.setItem('jwtToken', userData.token);\n    dispatch({\n      type: actionTypes.LOGIN_ACTION,\n      payload: userData,\n    });\n  }\n\n  function editProfile(updated) {\n    localStorage.setItem('jwtToken', updated.token);\n    dispatch({ type: actionTypes.EDIT_PROFILE_ACTION, updated });\n  }\n\n  function logout() {\n    localStorage.removeItem('jwtToken');\n    dispatch({ type: actionTypes.LOGOUT_ACTION });\n    window.location.reload();\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        avatarColor: state.avatarColor,\n        login,\n        logout,\n        editProfile,\n      }}\n      {...props}\n    />\n  );\n}\n\nexport { AuthContext, AuthProvider };\n","import React, { createContext, useReducer } from 'react';\nimport { actionTypes } from '../globalData';\n\nconst initialState = {\n  courses: [],\n  newCourses: [],\n  fetchedDone: false,\n  initialAccess: true\n};\n\nconst CourseContext = createContext({});\n\nfunction courseReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.FETCH_DONE_ACTION:\n      return {\n        ...state,\n        fetchedDone: action.done,\n      };\n\n    case actionTypes.LOAD_COURSES_ACTION:\n      return {\n        ...state,\n        courses: [...state.newCourses, ...action.courses],\n        initialAccess: false\n      };\n\n    case actionTypes.ADD_COURSE_ACTION:\n      //here we check whether the courses is not fully loaded, mean the course should be included in the fetch\n      if (state.initialAccess) {\n        return {\n          ...state,\n        };\n      }\n      return {\n        ...state,\n        newCourses: [action.course, ...state.newCourses],\n      };\n  }\n}\n\nfunction CourseProvider(props) {\n  const [state, dispatch] = useReducer(courseReducer, initialState);\n\n  function loadCourses(courses) {\n    dispatch({ type: actionTypes.LOAD_COURSES_ACTION, courses });\n  }\n\n  function setFetchedDone(done) {\n    dispatch({ type: actionTypes.FETCH_DONE_ACTION, done });\n  }\n\n  function addCourse(course) {\n    dispatch({\n      type: actionTypes.ADD_COURSE_ACTION,\n      course,\n    });\n  }\n\n  return (\n    <CourseContext.Provider\n      value={{\n        courses: state.courses,\n        fetchedDone: state.fetchedDone,\n        setFetchedDone,\n        loadCourses,\n        addCourse,\n      }}\n      {...props}\n    />\n  );\n}\n\nexport { CourseContext, CourseProvider };\n","import React, { createContext, useReducer } from 'react';\nimport { actionTypes } from '../globalData';\n\nconst initialState = {\n  enrolments: [],\n  newEnrolments: [],\n  initialCountDone: false,\n  enrolCount: 0,\n  fetchedDone: false,\n  initialAccess: true,\n};\n\nconst EnrolmentContext = createContext({});\n\nfunction enrolmentReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.GET_ENROLCOUNT_ACTION:\n      if (!state.initialCountDone) {\n        return {\n          ...state,\n          enrolCount: action.count,\n          initialCountDone: true,\n        };\n      }\n      return {\n        ...state,\n      };\n    case actionTypes.SET_ENROLCOUNT_ACTION:\n      return {\n        ...state,\n        enrolCount: action.count,\n      };\n\n    case actionTypes.FETCH_DONE_ACTION:\n      return {\n        ...state,\n        fetchedDone: action.done,\n      };\n    case actionTypes.LOAD_ENROLMENTS_ACTION:\n      var updatedEnrolments = [...state.newEnrolments, ...action.enrolments];\n      return {\n        ...state,\n        enrolments: updatedEnrolments,\n        initialAccess: false,\n      };\n\n    case actionTypes.ENROL_COURSE_ACTION:\n      if (state.initialAccess) return { ...state };\n      return {\n        ...state,\n        newEnrolments: [action.enrolment, ...state.newEnrolments],\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction EnrolmentProvider(props) {\n  const [state, dispatch] = useReducer(enrolmentReducer, initialState);\n\n  function getEnrolCount(count) {\n    dispatch({ type: actionTypes.GET_ENROLCOUNT_ACTION, count });\n  }\n\n  function setEnrolCount(count) {\n    dispatch({ type: actionTypes.SET_ENROLCOUNT_ACTION, count });\n  }\n\n  function setFetchedDone(done) {\n    dispatch({ type: actionTypes.FETCH_DONE_ACTION, done });\n  }\n\n  function loadEnrolments(enrolments) {\n    dispatch({ type: actionTypes.LOAD_ENROLMENTS_ACTION, enrolments });\n  }\n\n  function enrolCourse(enrolment) {\n    dispatch({ type: actionTypes.ENROL_COURSE_ACTION, enrolment });\n  }\n\n  return (\n    <EnrolmentContext.Provider\n      value={{\n        enrolments: state.enrolments,\n        enrolCount: state.enrolCount,\n        fetchedDone: state.fetchedDone,\n        initialCountDone: state.initialCountDone,\n        getEnrolCount,\n        setEnrolCount,\n        loadEnrolments,\n        setFetchedDone,\n        enrolCourse,\n      }}\n      {...props}\n    />\n  );\n}\n\nexport { EnrolmentContext, EnrolmentProvider };\n","import React, { createContext, useReducer } from 'react';\nimport { actionTypes } from '../globalData';\n\nconst initialState = {\n  facePhotos: [],\n  fetchedDone: false,\n  notifyAddPhoto: false,\n};\n\nconst FacePhotoContext = createContext({});\n\nfunction facePhotoReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.FETCH_DONE_ACTION:\n      return {\n        ...state,\n        fetchedDone: action.done,\n      };\n    case actionTypes.LOAD_FACE_PHOTOS_ACTION:\n      var updatedFacePhotos = [...action.facePhotos];\n      if (updatedFacePhotos.length < 2)\n        return {\n          ...state,\n          facePhotos: updatedFacePhotos,\n          notifyAddPhoto: true,\n        };\n      return {\n        ...state,\n        facePhotos: updatedFacePhotos,\n        notifyAddPhoto: false,\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction FacePhotoProvider(props) {\n  const [state, dispatch] = useReducer(facePhotoReducer, initialState);\n\n  function setFetchedDone(done) {\n    dispatch({ type: actionTypes.FETCH_DONE_ACTION, done });\n  }\n\n  function loadFacePhotos(facePhotos) {\n    dispatch({ type: actionTypes.LOAD_FACE_PHOTOS_ACTION, facePhotos });\n  }\n\n  return (\n    <FacePhotoContext.Provider\n      value={{\n        facePhotos: state.facePhotos,\n        fetchedDone: state.fetchedDone,\n        notifyAddPhoto: state.notifyAddPhoto,\n        loadFacePhotos,\n        setFetchedDone,\n      }}\n      {...props}\n    />\n  );\n}\n\nexport { FacePhotoContext, FacePhotoProvider };\n","import React, { createContext, useState } from 'react';\nimport { INITIAL_COLLAPSE } from '../globalData';\n\nconst NavbarContext = createContext();\n\nconst NavbarProvider = (props) => {\n  const [collapsed, SetCollapsed] = useState(INITIAL_COLLAPSE);\n  function toggleCollapsed() {\n    SetCollapsed((collapsed) => !collapsed);\n  }\n  return (\n    <NavbarContext.Provider value={{ collapsed, toggleCollapsed }} {...props} />\n  );\n};\nexport { NavbarContext, NavbarProvider };\n","export const INITIAL_COLLAPSE = false;\n","import React, { createContext, useState } from 'react';\nimport {maxDescriptorDistance} from \"../globalData\";\n\nconst FaceThresholdDistanceContext = createContext();\n\nconst FaceThresholdDistanceProvider = (props) => {\n  const [threshold, SetThreshold] = useState(maxDescriptorDistance);\n  function setFaceThresholdDistance(value) {\n    SetThreshold(value);\n  }\n  return (\n    <FaceThresholdDistanceContext.Provider value={{ threshold, setFaceThresholdDistance }} {...props} />\n  );\n};\nexport { FaceThresholdDistanceContext, FaceThresholdDistanceProvider };\n","export const inputSize = 160;\nexport const maxDescriptorDistance = 0.45;","import React, { createContext, useReducer } from 'react';\nimport { actionTypes } from '../globalData';\n\nconst initialState = {\n  notifications: [],\n  uncheckedNotificationCount: 0,\n  fetchedDone: false,\n  pressedNotification: false,\n};\n\nconst NotificationContext = createContext({});\n\nfunction notificationReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.FETCH_DONE_ACTION:\n      return {\n        ...state,\n        fetchedDone: action.done,\n      };\n\n    case actionTypes.PRESSED_NOTIFICATION_ACTION:\n      return {\n        ...state,\n        pressedNotification: action.done,\n      };\n\n    case actionTypes.LOAD_NOTIFICATIONS_ACTION:\n      return {\n        ...state,\n        notifications: [...action.notifications],\n      };\n    case actionTypes.SET_UNCHECKED_NOTIFICATION_COUNT_ACTION:\n      return {\n        ...state,\n        uncheckedNotificationCount: action.value,\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction NotificationProvider(props) {\n  const [state, dispatch] = useReducer(notificationReducer, initialState);\n\n  function setFetchedDone(done) {\n    dispatch({ type: actionTypes.FETCH_DONE_ACTION, done });\n  }\n\n  function setPressedNotification(done) {\n    dispatch({ type: actionTypes.PRESSED_NOTIFICATION_ACTION, done });\n  }\n\n  function setUncheckedNotificationCount(value) {\n    dispatch({\n      type: actionTypes.SET_UNCHECKED_NOTIFICATION_COUNT_ACTION,\n      value,\n    });\n  }\n\n  function loadNotifications(notifications) {\n    dispatch({ type: actionTypes.LOAD_NOTIFICATIONS_ACTION, notifications });\n  }\n\n  return (\n    <NotificationContext.Provider\n      value={{\n        notifications: state.notifications,\n        uncheckedNotificationCount: state.uncheckedNotificationCount,\n        fetchedDone: state.fetchedDone,\n        pressedNotification: state.pressedNotification,\n        setPressedNotification,\n        loadNotifications,\n        setUncheckedNotificationCount,\n        setFetchedDone,\n      }}\n      {...props}\n    />\n  );\n}\n\nexport { NotificationContext, NotificationProvider };\n","import { Modal, Spin, Avatar } from 'antd';\nimport { FileImageOutlined } from '@ant-design/icons';\nimport React from 'react';\nimport { modalItems } from '../../../globalData';\nexport default ({\n  title,\n  action,\n  itemType,\n  visible,\n  loading,\n  handleOk,\n  handleCancel,\n  payload,\n}) => {\n  const template = (type, payload) => {\n    switch (type) {\n      case modalItems.course.name:\n        return (\n          <>\n            <p>\n              <strong>Course ID</strong>: {payload.shortID}\n            </p>\n            <p>\n              <strong>Particular</strong>:{' '}\n              {payload.code + '-' + payload.name + ' (' + payload.session + ')'}\n            </p>\n          </>\n        );\n      case modalItems.enrolment.name:\n        return (\n          <>\n            <strong>Student: </strong>\n            {payload.student?.firstName} {payload.student?.lastName} (\n            {payload.student?.cardID})\n            <br />\n            <br />\n            <strong>Course (ID: {payload.course?.shortID}): </strong>\n            {payload.course?.code} {payload.course?.name} (\n            {payload.course?.session})\n          </>\n        );\n      case modalItems.facePhoto.name:\n        return (\n          <>\n            <Avatar\n              shape='square'\n              src={payload?.photoURL}\n              size={200}\n              icon={<FileImageOutlined />}\n            />\n          </>\n        );\n      case modalItems.participant.name:\n        return (\n          <div>\n            <strong>Particular</strong>:{' '}\n            {payload.firstName +\n              '-' +\n              payload.lastName +\n              ' (' +\n              (payload.cardID||payload.matricNumber) +\n              ')'} {/* in case table and other stuff mess with cardID */}\n        </div>\n        );\n      case modalItems.attendance.name:\n        return (\n          <>\n            <p>\n              <strong>Attendance ID: </strong>\n              {payload.key}\n            </p>\n            <br />\n            <p>\n              <strong>Course: </strong>\n              {payload.course}\n            </p>\n            <p>\n              <strong>Date: </strong>\n              {payload.date}\n            </p>\n            <p>\n              <strong>Time: </strong>\n              {payload.time}\n            </p>\n            <p>\n              <strong>Stats: </strong>\n              {payload.stats}\n            </p>\n          </>\n        );\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Modal\n      title={title}\n      visible={visible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      okButtonProps={{ disabled: loading }}\n      cancelButtonProps={{ disabled: loading }}\n      okText={action}\n    >\n      {!loading ? (\n        <div>\n          <p>\n            Are you sure to{' '}\n            <strong style={{ fontSize: '15px' }}>{action}</strong> the following{' '}\n            {itemType}?\n          </p>\n          {template(itemType, payload)}\n        </div>\n      ) : (\n        <Spin tip={'Loading, please wait...'}>\n          <p>\n            Are you sure to {action} the following {itemType}?\n          </p>\n          {template(itemType, payload)}\n        </Spin>\n      )}\n    </Modal>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst { Footer } = Layout;\nexport default () => (\n  <Footer style={{ textAlign: 'center' }}>\n    <span>&copy; Attendvanced {new Date().getFullYear()}</span>\n    <span>&nbsp;&nbsp;&nbsp; <Link to=\"/userguidelines\">User Guidelines</Link></span>\n  </Footer>\n);\n","import { message } from \"antd\";\n\nexport const CheckError = (err) => {\n  switch (err.message) {\n    case \"GraphQL error: Invalid/Expired token\":\n      if (err.message === \"GraphQL error: Invalid/Expired token\") {\n        message.error(\"Please re-login!\");\n        localStorage.removeItem(\"jwtToken\");\n        window.location.reload();\n      }\n    default:\n      let msg = err.message.replace(\"GraphQL error: \", \"\");\n      message.error(msg);\n  }\n};\n","import gql from 'graphql-tag';\n\n\nexport const FETCH_COURSES_COUNT_QUERY = gql`\n  query getCoursesCount {\n    getCoursesCount\n  }\n`;\n\nexport const FETCH_COURSE_QUERY = gql`\n  query getCourse($id: ID!) {\n    getCourse(courseID: $id) {\n        _id\n        shortID\n        name\n        code\n        session\n    }\n  }\n`;\n\nexport const FETCH_PARTICIPANTS_QUERY = gql`\n  query getParticipants($id: ID!) {\n    getParticipants(courseID: $id) {\n      _id\n      firstName\n      lastName\n      profilePictureURL\n      cardID\n    }\n  }\n`;\n\nexport const FETCH_COURSES_QUERY = gql`\n  query getCourses($currPage: Int!, $pageSize: Int!) {\n    getCourses(currPage: $currPage, pageSize: $pageSize) {\n      courses {\n        _id\n        shortID\n        creator {\n          firstName\n          lastName\n          cardID\n        }\n        name\n        code\n        session\n        createdAt\n      }\n    }\n  }\n`;","import gql from 'graphql-tag';\n\nexport const FETCH_FACE_PHOTOS_COUNT_QUERY = gql`\n  query getFacePhotosCount {\n    getFacePhotosCount\n  }\n`;\n\nexport const FETCH_FACE_PHOTOS_QUERY = gql`\n  query getFacePhotos($cursor: ID, $limit: Int!) {\n    getFacePhotos(cursor: $cursor, limit: $limit) {\n      facePhotos {\n        _id\n        faceDescriptor\n        photoURL\n        createdAt\n      }\n      hasNextPage\n    }\n  }\n`;\n\nexport const FETCH_FACE_MATCHER_IN_COURSE_QUERY = gql`\n  query getFaceMatcherInCourse($courseID: String!) {\n    getFaceMatcherInCourse(courseID: $courseID) {\n      course {\n        _id\n        code\n        name\n        session\n        shortID\n      }\n      matcher {\n        student {\n          _id\n          firstName\n          lastName\n          cardID\n          profilePictureURL\n        }\n        facePhotos {\n          faceDescriptor\n          photoURL\n        }\n      }\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const FETCH_UNCHECKED_NOTIFICATIONS_QUERY = gql`\n  query getUncheckedNotificationsCount {\n    getUncheckedNotificationsCount\n  }\n`;\n\nexport const FETCH_NOTIFICATIONS_QUERY = gql`\n  query getNotifications($cursor: ID, $limit: Int!) {\n    getNotifications(cursor: $cursor, limit: $limit) {\n      notifications {\n        _id\n        title\n        content\n        checked\n        createdAt\n        updatedAt\n      }\n      hasNextPage\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\nexport const FETCH_ATTENDANCE_LIST_COUNT_IN_COURSE_QUERY = gql`\n  query getAttendanceListCountInCourse($courseID: String!) {\n    getAttendanceListCountInCourse(courseID: $courseID)\n  }\n`;\n\nexport const FETCH_ATTENDANCE_QUERY = gql`\n  query getAttendance($attendanceID: ID!) {\n    getAttendance(attendanceID: $attendanceID) {\n      _id\n      course {\n        _id\n        name\n        code\n        session\n        shortID\n      }\n      time\n      date\n      mode\n      isOn\n    }\n  }\n`;\n\nexport const FETCH_ATTENDANCE_LIST_IN_COURSE_QUERY = gql`\n  query getAttendanceListInCourse(\n    $courseID: String!\n    $currPage: Int!\n    $pageSize: Int!\n  ) {\n    getAttendanceListInCourse(\n      courseID: $courseID\n      currPage: $currPage\n      pageSize: $pageSize\n    ) {\n      course{\n        _id\n        shortID\n        code\n        name\n        session\n      }\n      attendanceList{\n        _id\n        time\n        date\n        mode\n        isOn\n      }\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const GET_WARNING_COUNT_QUERY = gql`\n  query getWarningCount($courseID: ID!) {\n    getWarningCount(courseID: $courseID)\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const FETCH_TRX_LIST_IN_ATTENDANCE = gql`\n  query getTrxListInAttendance($attendanceID: ID!) {\n    getTrxListInAttendance(attendanceID: $attendanceID){\n        studentID\n        createdAt\n    }\n  }\n`;\n","import {\n  HomeOutlined,\n} from '@ant-design/icons';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Drawer } from 'antd';\nimport React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { EnrolmentContext } from '../../context';\nimport { CheckError } from '../../utils/ErrorHandling';\nimport { FETCH_ENROLREQUEST_COUNT_QUERY } from '../../graphql/query';\n\nexport default ({ isCollapseMenuOpen, setIsCollapseMenuOpen }) => {\n  const pathname = window.location.pathname;\n  const path = pathname === '/' ? 'home' : pathname.substr(1);\n\n  const { enrolCount, getEnrolCount } = useContext(EnrolmentContext);\n\n\n  return (\n    <Drawer\n      title='Menu'\n      className='drawerMenu'\n      visible={isCollapseMenuOpen}\n      placement='top'\n      onClose={() => {\n        setIsCollapseMenuOpen(false);\n      }}\n    >\n      <p>\n        <Link to={'/dashboard'}>\n          <HomeOutlined />\n          &nbsp; Courses\n        </Link>\n      </p>\n    </Drawer>\n  );\n};\n","import {\n  HomeOutlined\n} from '@ant-design/icons';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Menu } from 'antd';\nimport React, { useContext, useEffect } from 'react';\nimport { FpsView } from 'react-fps';\nimport { Link } from 'react-router-dom';\nimport { EnrolmentContext, NavbarContext } from '../../context';\nimport { CheckError } from '../../utils/ErrorHandling';\n\nexport default () => {\n  const pathname = window.location.pathname;\n  const path = pathname === '/' ? 'home' : pathname.substr(1);\n\n  const { enrolCount, getEnrolCount } = useContext(EnrolmentContext);\n  const { collapsed } = useContext(NavbarContext);\n\n  return (\n    <Menu theme='dark' mode='vertical' defaultSelectedKeys={[path]}>\n      <Menu.Item key={'dashboard'} icon={<HomeOutlined />}>\n        <Link to={'/dashboard'}>Courses</Link>\n      </Menu.Item>\n    </Menu>\n  );\n};\n","export const APP_LOGO_URL = {\n  link: process.env.PUBLIC_URL + '/img/logo.png',\n  width: '30px',\n  height: '30px',\n};","import { Avatar } from 'antd';\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { NavbarContext } from '../../context';\nimport { LecturerMenu } from './';\nimport './LecturerSiderNavbar.css';\nimport { APP_LOGO_URL } from '../../assets';\n\nexport default () => {\n  const { collapsed } = useContext(NavbarContext);\n\n  return (\n    <div className='lecturerSiderNavbar'>\n      <Link to='/dashboard'>\n        <div className='lecturerSiderNavbar__logo'>\n          <Avatar\n            shape=\"square\"\n            className='avatar'\n            size='large'\n            alt='Face In'\n            src={APP_LOGO_URL.link}\n            onError={(err) => {\n              console.log(err);\n            }}\n          />\n          <div\n            className={\n              !collapsed\n                ? 'lecturerSiderNavbar__text'\n                : 'lecturerSiderNavbar__text__hidden'\n            }\n          >\n            <span className='lecturerSiderNavbar__text__item'>Professor</span>\n            <span className='lecturerSiderNavbar__text__item'>Version</span>\n          </div>\n        </div>\n      </Link>\n\n      <div className='lecturerSiderNavbar__menu'>\n        <LecturerMenu />\n      </div>\n    </div>\n  );\n};\n","import {\n\n  HomeOutlined,\n  PictureOutlined,\n} from '@ant-design/icons';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Drawer } from 'antd';\nimport React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { EnrolmentContext } from '../../context';\nimport { CheckError } from '../../utils/ErrorHandling';\n\nexport default ({ isCollapseMenuOpen, setIsCollapseMenuOpen }) => {\n  const pathname = window.location.pathname;\n  const path = pathname === '/' ? 'home' : pathname.substr(1);\n\n  const { enrolCount, getEnrolCount } = useContext(EnrolmentContext);\n\n\n  return (\n    <Drawer\n      title='Menu'\n      className='drawerMenu'\n      visible={isCollapseMenuOpen}\n      placement='top'\n      onClose={() => {\n        setIsCollapseMenuOpen(false);\n      }}\n    >\n      <p>\n        <Link to={'/dashboard'}>\n          <HomeOutlined />\n          &nbsp; Home\n        </Link>\n      </p>\n      <p>\n        <Link to={'/facegallery'}>\n          <PictureOutlined />\n          &nbsp; Face Gallery\n        </Link>\n      </p>\n    </Drawer>\n  );\n};\n","import {\n  HomeOutlined,\n  PictureOutlined,\n} from '@ant-design/icons';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Menu } from 'antd';\nimport React, { useContext, useEffect } from 'react';\nimport { FpsView } from 'react-fps';\nimport { Link } from 'react-router-dom';\nimport { EnrolmentContext, NavbarContext } from '../../context';\nimport { CheckError } from '../../utils/ErrorHandling';\n\nexport default () => {\n  const pathname = window.location.pathname;\n  const path = pathname === '/' ? 'home' : pathname.substr(1);\n\n  const { enrolCount, getEnrolCount } = useContext(EnrolmentContext);\n\n  const { collapsed } = useContext(NavbarContext);\n\n  return (\n    <Menu theme='dark' mode='vertical' defaultSelectedKeys={[path]}>\n      <Menu.Item key={'dashboard'} icon={<HomeOutlined />}>\n        <Link to={'/dashboard'}>Courses</Link>\n      </Menu.Item>\n      <Menu.Item key={'facegallery'} icon={<PictureOutlined />}>\n        <Link to={'/facegallery'}>Face Gallery</Link>\n      </Menu.Item>\n    </Menu>\n  );\n};\n","import { Avatar } from 'antd';\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { NavbarContext } from '../../context';\nimport { StudentMenu } from './';\nimport './StudentSiderNavbar.css';\nimport { APP_LOGO_URL } from '../../assets';\n\nexport default () => {\n  const { collapsed } = useContext(NavbarContext);\n  return (\n    <div className='studentSiderNavbar'>\n      <Link to='/dashboard'>\n        <div className='studentSiderNavbar__logo'>\n          <Avatar\n            shape=\"square\"\n            className='avatar'\n            size='large'\n            alt='Face In'\n            title='Face in (Student Version)'\n            src={APP_LOGO_URL.link}\n            onError={(err) => {\n              console.log(err);\n            }}\n          />\n          <div\n            className={\n              !collapsed\n                ? 'studentSiderNavbar__text'\n                : 'studentSiderNavbar__text__hidden'\n            }\n          >\n            <span className='studentSiderNavbar__text__item'>Student</span>\n            <span className='studentSiderNavbar__text__item'>Version</span>\n          </div>\n        </div>\n      </Link>\n\n      <div className='studentSiderNavbar__menu'>\n        <StudentMenu />\n      </div>\n    </div>\n  );\n};\n","import { LogoutOutlined, UserOutlined } from '@ant-design/icons';\nimport { Avatar, Dropdown, Menu } from 'antd';\nimport React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../../../context/auth';\nimport './ProfileNavbar.css';\n\nexport default () => {\n  const { user, avatarColor, logout } = useContext(AuthContext);\n\n  const [menuVisible, setMenuVisible] = useState(false);\n  const menu = () => (\n    <Menu theme='dark'>\n      <Menu.Item key={'profile'} icon={<UserOutlined />}>\n        <Link to='/profile'>Profile</Link>\n      </Menu.Item>\n      <Menu.Item key={'logout'} icon={<LogoutOutlined />} onClick={logout}>\n        Log Out\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <div className='profileNavbar'>\n      <Dropdown\n        overlay={menu}\n        visible={menuVisible}\n        \n        onClick={() => setMenuVisible(!menuVisible)}\n        placement='bottomCenter'\n      >\n        <Avatar\n          className='avatar'\n          size='large'\n          alt='Face In Profile'\n          src={user.profilePictureURL}\n          onError={(err) => {\n            console.log(err);\n          }}\n          style={!user.profilePictureURL&&avatarColor}\n        >\n          {user.firstName[0]}\n        </Avatar>\n      </Dropdown>\n    </div>\n  );\n};\n","import {\n  BellOutlined,\n  LoadingOutlined,\n  UnorderedListOutlined,\n} from '@ant-design/icons';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Button, Layout, Typography, Badge, Avatar } from 'antd';\nimport React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AuthContext, NotificationContext } from '../../../context';\nimport { CheckError } from '../../../utils/ErrorHandling';\nimport { FETCH_UNCHECKED_NOTIFICATIONS_QUERY } from '../../../graphql/query';\nimport { LecturerDrawerMenu } from '../../lecturerComponent';\nimport { StudentDrawerMenu } from '../../studentComponent';\nimport ProfileNavbar from './ProfileNavbar';\nimport './Greeting.css';\n\nconst { Header } = Layout;\nconst { Title } = Typography;\n\nexport default () => {\n  const { user } = useContext(AuthContext);\n  const [isCollapseMenuOpen, setIsCollapseMenuOpen] = useState(false);\n  const {\n    uncheckedNotificationCount,\n    setUncheckedNotificationCount,\n    pressedNotification,\n    setPressedNotification,\n  } = useContext(NotificationContext);\n  \n  useQuery(FETCH_UNCHECKED_NOTIFICATIONS_QUERY, {\n    onCompleted: (data) => {\n      if (!pressedNotification) {\n        setUncheckedNotificationCount(data.getUncheckedNotificationsCount);\n        setPressedNotification(true);\n      }\n    },\n    onError(err) {\n      CheckError(err);\n    },\n  });\n\n  const greetMode = () => {\n    let h = new Date().getHours();\n    if (h >= 0 && h < 12) return 'Morning';\n    else if (h >= 12 && h <= 18) return 'Afternoon';\n    else return 'Evening';\n  };\n\n  return (\n    <Header className='greeting__header'>\n      <Title className='greeting__title' level={4}>\n        <div className='siderNavbar__collapse'>\n          <Button\n            icon={<UnorderedListOutlined />}\n            onClick={() => {\n              setIsCollapseMenuOpen(true);\n            }}\n          ></Button>\n        </div>\n        {user ? (\n          user?.userLevel === 0 ? (\n            <StudentDrawerMenu\n              isCollapseMenuOpen={isCollapseMenuOpen}\n              setIsCollapseMenuOpen={setIsCollapseMenuOpen}\n            />\n          ) : (\n            <LecturerDrawerMenu\n              isCollapseMenuOpen={isCollapseMenuOpen}\n              setIsCollapseMenuOpen={setIsCollapseMenuOpen}\n            />\n          )\n        ) : (\n          'error'\n        )}\n\n        <span>\n          Good {greetMode()}, {user.firstName}\n        </span>\n        <div className='greeting__profileNavbar'>\n          <ProfileNavbar />\n        </div>\n        <Link\n          to='/notification'\n          title={`Notification (${uncheckedNotificationCount})`}\n        >\n          <div className='greeting__notification'>\n            <Badge count={uncheckedNotificationCount}>\n              <Avatar\n                icon={<BellOutlined />}\n                style={{ backgroundColor: 'orange' }}\n              />\n            </Badge>\n          </div>\n        </Link>\n      </Title>\n    </Header>\n  );\n};\n","import { Layout } from 'antd';\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AuthContext, NavbarContext } from '../../../context';\nimport { LecturerSiderNavbar } from '../../lecturerComponent';\nimport { StudentSiderNavbar } from '../../studentComponent';\nimport './Navbar.css';\n\nconst { Sider } = Layout;\n\nexport default () => {\n  const { user } = useContext(AuthContext);\n  const { collapsed, toggleCollapsed } = useContext(NavbarContext);\n\n  return (\n    <>\n      <Sider\n        className='siderNavbar'\n        collapsible\n        collapsed={collapsed}\n        onCollapse={toggleCollapsed}\n      >\n        {user.userLevel == 0 ? <StudentSiderNavbar /> : <LecturerSiderNavbar />}\n      </Sider>\n    </>\n  );\n};\n","import { Breadcrumb } from 'antd';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default ({ titleList }) => (\n  <Breadcrumb className='breadcrumb'>\n    {titleList.map((title) => (\n      <Breadcrumb.Item key={title.name} className='breadcrumb__item'>\n        <Link to={title.link}>{title.name}</Link>\n      </Breadcrumb.Item>\n    ))}\n  </Breadcrumb>\n);\n","import gql from 'graphql-tag';\n\nexport const CREATE_ATTENDANCE_MUTATION = gql`\n  mutation createAttendance(\n    $courseID: String!\n    $date: String!\n    $time: String!\n  ) {\n    createAttendance(\n      attendanceInput: {\n        courseID: $courseID\n        date: $date\n        time: $time\n      }\n    ) {\n      _id\n      course {\n        _id\n        shortID\n        name\n        code\n        session\n      }\n      date\n      time\n      mode\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\nexport const EDIT_ATTENDANCE_MODE_MUTATION = gql`\n  mutation editAttendanceMode($attendanceID: ID!, $mode: String!) {\n    editAttendanceMode(attendanceID: $attendanceID, mode: $mode) {\n      _id\n      course {\n        _id\n        shortID\n        name\n        code\n        session\n      }\n      date\n      time\n      mode\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\nexport const EDIT_ATTENDANCE_ON_OFF_MUTATION = gql`\n  mutation editAttendanceOnOff($attendanceID: ID!, $isOn: Boolean!) {\n    editAttendanceOnOff(attendanceID: $attendanceID, isOn: $isOn) {\n      _id\n      course {\n        _id\n        shortID\n        name\n        code\n        session\n      }\n      date\n      time\n      mode\n      isOn\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const DELETE_ATTENDANCE_MUTATION = gql`\n  mutation deleteAttendance($attendanceID: ID!) {\n    deleteAttendance(attendanceID: $attendanceID) {\n      _id\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const ADD_COURSE_MUTATION = gql`\n  mutation createCourse($code: String!, $name: String!, $session: String!) {\n    createCourse(courseInput: { code: $code, name: $name, session: $session }) {\n      _id\n      shortID\n      code\n      name\n      session\n      createdAt\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const DELETE_COURSE_MUTATION = gql`\n  mutation deleteCourse($id: ID!) {\n    deleteCourse(courseID: $id) {\n      _id\n      name\n      code\n      session\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const ENROL_COURSE_MUTATION = gql`\n  mutation enrolCourse($id: ID!) {\n    enrolCourse(courseID: $id)\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const WITHDRAW_COURSE_MUTATION = gql`\n  mutation withdrawCourse($id: ID!) {\n    withdrawCourse(courseID: $id)\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const ADD_FACE_PHOTO_MUTATION = gql`\n  mutation addFacePhoto(\n    $photoData: String!\n    $faceDescriptor: String!\n  ) {\n    addFacePhoto(\n      photoData: $photoData\n      faceDescriptor: $faceDescriptor\n    ) {\n      faceDescriptor\n      photoURL\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const APPROVE_ENROLMENT_MUTATION = gql`\n  mutation approveEnrolment($id: ID!) {\n    approveEnrolment(enrolmentID: $id)\n  }\n`;\n\nexport const REJECT_ENROLMENT_MUTATION = gql`\n  mutation approveEnrolment($id: ID!) {\n    rejectEnrolment(enrolmentID: $id)\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const DELETE_FACE_PHOTO_MUTATION = gql`\n  mutation deleteFacePhoto($photoID: ID!) {\n    deleteFacePhoto(photoID: $photoID)\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      _id\n      email\n      firstName\n      lastName\n      cardID\n      profilePictureURL\n      userLevel\n      token\n    }\n  }\n`;\n\nexport const LOGIN_GOOGLE_USER = gql`\n  mutation googleSignIn(\n    $googleID: String!\n    $googleEmail: String!\n    $googleFirstName: String!\n    $googleLastName: String!\n    $googleProfilePicture: String!\n  ) {\n    googleSignIn(\n      googlePersonInput: {\n        googleID: $googleID\n        googleEmail: $googleEmail\n        googleFirstName: $googleFirstName\n        googleLastName: $googleLastName\n        googleProfilePicture: $googleProfilePicture\n      }\n    ) {\n      _id\n      email\n      firstName\n      lastName\n      cardID\n      profilePictureURL\n      userLevel\n      token\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const REGISTER_USER = gql`\n  mutation register(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $cardID: String!\n    $password: String!\n    $confirmPassword: String!\n    $userLevel: Int!\n  ) {\n    register(\n      personInput: {\n        firstName: $firstName\n        lastName: $lastName\n        email: $email\n        cardID: $cardID\n        password: $password\n        confirmPassword: $confirmPassword\n        userLevel: $userLevel\n      }\n    ) {\n      _id\n      email\n      firstName\n      lastName\n      cardID\n      profilePictureURL\n      userLevel\n      token\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const KICK_PARTICIPANT_MUTATION = gql`\n  mutation kickParticipant($participantID: ID!, $courseID: String!) {\n    kickParticipant(participantID: $participantID, courseID: $courseID)\n  }\n`;\n\nexport const WARN_PARTICIPANT_MUTATION = gql`\n  mutation warnParticipant($participantID: ID!, $courseID: String!) {\n    warnParticipant(participantID: $participantID, courseID: $courseID)\n  }\n`;\n\nexport const ADD_PARTICIPANT_MUTATION = gql`\n  mutation addParticipant($email: String!, $courseID: String!) {\n    addParticipant(email: $email, courseID: $courseID) {\n      _id\n      firstName\n      lastName\n      cardID\n      profilePictureURL\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const EDIT_PROFILE_MUTATION = gql`\n  mutation editProfile(\n    $firstName: String!\n    $lastName: String!\n    $cardID: String!\n    $profilePicture: String\n  ) {\n    editProfile(\n      firstName: $firstName\n      lastName: $lastName\n      cardID: $cardID\n      profilePicture: $profilePicture\n    ) {\n      _id\n      email\n      firstName\n      lastName\n      cardID\n      profilePictureURL\n      userLevel\n      createdAt\n      token\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const EDIT_CARDID_AND_ROLE_MUTATION = gql`\n  mutation editCardIDAndUserLevel($cardID: String!, $userLevel: Int!) {\n    editCardIDAndUserLevel(cardID: $cardID, userLevel: $userLevel) {\n      _id\n      email\n      firstName\n      lastName\n      cardID\n      profilePictureURL\n      userLevel\n      createdAt\n      token\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\nexport const CREATE_TRX_MUTATION = gql`\n  mutation createTrx($attendanceID: ID!, $studentID: ID!) {\n    createTrx(\n      trxInput: { attendanceID: $attendanceID, studentID: $studentID }\n    )\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const OBTAIN_STUDENT_WARNING_MUTATION = gql`\n  mutation obtainStudentWarning($participantID: ID!, $courseID: String!) {\n    obtainStudentWarning(participantID: $participantID, courseID: $courseID)\n  }\n`;\n","import { Button, Card, Col, Row } from 'antd';\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../../../context';\n\nexport default ({ course }) => {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Row className='courseDetails__row'>\n      <Col>\n        <Card className='courseDetails__info'>\n          <p className='courseDetails__shortID'>ID: {course.shortID}</p>\n          <p>\n            <strong>Code:</strong> {course.code}\n          </p>\n          <p>\n            <strong>Name:</strong> {course.name}\n          </p>\n          <p>\n            <strong>Session:</strong> {course.session}\n          </p>\n          {user.userLevel === 1 && (\n            <>\n              <Button type='primary' className='courseDetails__takeAttendance btn'>\n                <Link to={`/course/${course.shortID}/attendanceForm`}>\n                  Create Attendance\n                </Link>\n              </Button>\n\n              <br />\n              <br />\n            </>\n          )}\n          <br />\n          <Link to={`/course/${course.shortID}/attendanceList`}>\n            Attendance List\n          </Link>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n","import { RedoOutlined } from \"@ant-design/icons\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  Divider,\n  Layout,\n  message,\n  Space,\n  Table,\n} from \"antd\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Modal from \"../../../components/common/customModal\";\nimport {\n  Footer,\n  Greeting,\n  Navbar,\n  PageTitleBreadcrumb,\n} from \"../../../components/common/sharedLayout\";\nimport { AuthContext } from \"../../../context\";\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { modalItems } from \"../../../globalData\";\nimport {\n  KICK_PARTICIPANT_MUTATION,\n} from \"../../../graphql/mutation\";\nimport { FETCH_COURSE_QUERY, FETCH_PARTICIPANTS_QUERY } from \"../../../graphql/query\";\nimport CourseDetailCard from \"./CourseDetailCard\";\nimport \"./CourseDetails.css\";\nconst { Content } = Layout;\n\nexport default (props) => {\n  const columns = [\n    {\n      title: <strong>Avatar</strong>,\n      dataIndex: \"profilePictureURL\",\n      key: \"profilePictureURL\",\n      render: (imgURL, record) => (\n        <Avatar\n          src={imgURL}\n          size={50}\n          style={{\n            backgroundColor: `rgb(${Math.random() * 150 + 30}, ${Math.random() * 150 + 30\n              }, ${Math.random() * 150 + 30})`,\n          }}\n        >\n          {record.displayedName[0]}\n        </Avatar>\n      ),\n      align: \"center\",\n    },\n    {\n      title: <strong>Matric Number</strong>,\n      dataIndex: \"cardID\",\n      key: \"cardID\",\n      align: \"center\",\n      sorter: (a, b) => a.cardID.localeCompare(b.cardID),\n    },\n    {\n      title: <strong>Name</strong>,\n      dataIndex: \"displayedName\",\n      key: \"displayedName\",\n      align: \"center\",\n      sorter: (a, b) => a.displayedName.localeCompare(b.displayedName),\n    },\n    {\n      title: <strong>Action</strong>,\n      key: \"action\",\n      render: (index) => (\n        <Space size=\"middle\">\n          <Button\n            danger\n            className=\"courseDetails__kickBtn\"\n            onClick={() => {\n              setVisible(true);\n              setSelectedParticipant(index);\n            }}\n            loading={\n              index.key === selectedParticipant.key &&\n              kickParticipantStatus.loading\n            }\n          >\n            Remove\n          </Button>\n        </Space>\n      ),\n      align: \"center\",\n    },\n  ];\n\n  const { user } = useContext(AuthContext);\n\n  const [participants, setParticipants] = useState([]);\n  const [selectedParticipant, setSelectedParticipant] = useState({});\n\n  const [visible, setVisible] = useState(false);\n  if (user.userLevel == 0) {\n    columns.splice(-1, 1);\n  }\n\n  const fetchCourseGQLQuery = useQuery(\n    FETCH_COURSE_QUERY,\n    {\n      onError(err) {\n        CheckError(err);\n      },\n      variables: {\n        id: props.match.params.id,\n      },\n      notifyOnNetworkStatusChange: true,\n    }\n  );\n\n  const fetchParticipantGQLQuery = useQuery(\n    FETCH_PARTICIPANTS_QUERY,\n    {\n      onError(err) {\n        CheckError(err);\n      },\n      variables: {\n        id: props.match.params.id,\n      },\n      notifyOnNetworkStatusChange: true,\n    }\n  );\n\n  useEffect(() => {\n    if (fetchParticipantGQLQuery.data) {\n      setParticipants(fetchParticipantGQLQuery.data.getParticipants);\n    }\n  }, [fetchParticipantGQLQuery.data]);\n\n  const [kickParticipantCallback, kickParticipantStatus] = useMutation(\n    KICK_PARTICIPANT_MUTATION,\n    {\n      onCompleted: (data) => {\n        message.success(data.kickParticipant);\n      },\n      onError(err) {\n        CheckError(err);\n      },\n    }\n  );\n\n  const handleKickParticipant = (participantID, courseID) => {\n    kickParticipantCallback({\n      update() {\n        const updatedParticipant = participants.filter(\n          (participant) => participant.key !== participantID\n        );\n        setParticipants(updatedParticipant);\n        //refetch the participant after kicked\n        fetchParticipantGQLQuery.refetch();\n        setVisible(false);\n      },\n      variables: { participantID, courseID },\n    });\n  };\n\n  const titleList = [\n    { name: \"Home\", link: \"/dashboard\" },\n    {\n      name: `Course: ${props.match.params.id}`,\n      link: `/course/${props.match.params.id}`,\n    },\n  ];\n\n  const parsedParticipants = (participants) => {\n    const currUser = participants.find((par) => par._id === user._id);\n    if (currUser)\n      participants = [\n        currUser,\n        ...participants.filter((par) => par._id !== user._id),\n      ];\n    return participants.map((par) => {\n      return {\n        key: par._id,\n        profilePictureURL: par.profilePictureURL,\n        firstName: par.firstName,\n        lastName: par.lastName,\n        displayedName: par.firstName + \" \" + par.lastName,\n        cardID: par.cardID,\n      };\n    });\n  };\n\n  return (\n    <Layout className=\"courseDetails layout\">\n      <Navbar />\n      <Layout>\n        <Greeting\n          firstName={user.firstName}\n          profilePicture={user.profilePicture}\n        />\n        <PageTitleBreadcrumb titleList={titleList} />\n        <Content>\n          <Card className=\"courseDetails__card\">\n            {fetchCourseGQLQuery.data && (\n              <CourseDetailCard\n                course={fetchCourseGQLQuery.data.getCourse}\n              />\n            )}\n          </Card>\n          <Divider\n            orientation=\"left\"\n            style={{ color: \"#333\", fontWeight: \"normal\" }}\n          >\n            Participants\n          </Divider>\n          <Table\n            scroll={{ x: \"max-content\" }}\n            columns={columns}\n            dataSource={parsedParticipants(participants)}\n            loading={fetchParticipantGQLQuery.loading}\n          />\n\n          <Button\n            style={{ float: \"right\" }}\n            icon={<RedoOutlined />}\n            disabled={fetchParticipantGQLQuery.loading}\n            loading={fetchParticipantGQLQuery.loading}\n            onClick={() => fetchParticipantGQLQuery.refetch()}\n          >\n            Refresh Table\n          </Button>\n          <Modal\n            title=\"Delete Course\"\n            action={modalItems.participant.action.kick}\n            itemType={modalItems.participant.name}\n            visible={visible}\n            loading={kickParticipantStatus.loading}\n            handleOk={() =>\n              handleKickParticipant(\n                selectedParticipant.key,\n                props.match.params.id\n              )\n            }\n            handleCancel={() => setVisible(false)}\n            payload={selectedParticipant}\n          />\n        </Content>\n        <Footer />\n      </Layout>\n    </Layout>\n  );\n};\n","import { useState } from 'react';\n\nexport const useForm = (callback, initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const onChange = (event) => {\n    setValues({ ...values, [event.target.name]: event.target.value });\n  };\n\n  const onSubmit = (event) => {\n    //event.preventDefault();\n    callback();\n  };\n\n  return {\n    onChange,\n    onSubmit,\n    values,\n  };\n};\n","import { useMutation } from \"@apollo/react-hooks\";\nimport { Button, Card, Form, Input, Layout, message } from \"antd\";\nimport React, { useContext } from \"react\";\nimport { Footer, Greeting, Navbar, PageTitleBreadcrumb } from \"../sharedLayout\";\nimport { AuthContext, CourseContext } from \"../../../context\";\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { ADD_COURSE_MUTATION } from \"../../../graphql/mutation\";\nimport { useForm } from \"../../../utils/hooks\";\n\nconst { Content } = Layout;\n\nexport default ({ refetchTableTotal, refetchTable }) => {\n  const { user } = useContext(AuthContext);\n  const { addCourse } = useContext(CourseContext);\n  const { onSubmit, onChange, values } = useForm(submitCallback);\n\n  const [addCourseCallback, { loading }] = useMutation(ADD_COURSE_MUTATION, {\n    update() {\n      message.success(\"Create course successfully.\");\n      refetchTableTotal();\n      refetchTable();\n    },\n    onError(err) {\n      CheckError(err);\n    },\n    variables: {\n      name: values.courseName,\n      code: values.courseCode,\n      session: values.courseSession,\n    },\n  });\n\n  function submitCallback() {\n    addCourseCallback();\n  }\n\n  return (\n    <Content>\n      <Card title=\"Add Course Form\" className=\"addCourse__card\">\n        <br />\n        <Form className=\"addCourse__form\" name=\"basic\" onFinish={onSubmit}>\n          <Form.Item\n            label=\"Course Code\"\n            name=\"courseCode\"\n            rules={[{ required: true, message: \"Please input course code!\" }]}\n          >\n            <Input\n              name=\"courseCode\"\n              placeholder=\"Enter course code\"\n              onChange={onChange}\n            />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Course Name\"\n            name=\"courseName\"\n            rules={[{ required: true, message: \"Please input course name!\" }]}\n          >\n            <Input\n              name=\"courseName\"\n              placeholder=\"Enter course name\"\n              onChange={onChange}\n            />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Course Session\"\n            name=\"courseSession\"\n            rules={[\n              { required: true, message: \"Please input course session!\" },\n            ]}\n          >\n            <Input\n              name=\"courseSession\"\n              placeholder=\"Enter course session\"\n              onChange={onChange}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button className='btn' type=\"primary\" htmlType=\"submit\" loading={loading}>\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    </Content>\n  );\n};\n","import { Layout, Form, Card, Button, Input, message } from 'antd';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ENROL_COURSE_MUTATION } from '../../../graphql/mutation';\nimport React, { useState } from 'react';\n\nimport { CheckError } from \"../../../utils/ErrorHandling\";\n\nexport default () => {\n  const [courseID, setCourseID] = useState('');\n  const [enrolCourseCallback, enrolCourseStatus] = useMutation(\n    ENROL_COURSE_MUTATION,\n    {\n      onCompleted(data) {\n        message.success(\n          'Enrol success'\n        );\n      },\n      onError(err) {\n        CheckError(err);\n      },\n      variables: { id: courseID },\n    }\n  );\n  return (\n    <div>\n      <p className='alert'>🢃 Enter Course ID for new enrolment</p>\n\n      <Form style={{ display: 'flex' }} onFinish={() => enrolCourseCallback()}>\n        <Form.Item\n          label='Course ID'\n          name='courseID'\n          rules={[{ required: true, message: 'Please input course ID!' }]}\n        >\n          <Input\n            name='courseCode'\n            placeholder='Enter course ID to enrol'\n            onChange={(e) => setCourseID(e.target.value)}\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            className='btn'\n            type='primary'\n            loading={enrolCourseStatus.loading}\n            style={{ marginLeft: '10px' }}\n            htmlType='submit'\n          >\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","import {\n  ArrowRightOutlined,\n  EditFilled,\n  DeleteFilled,\n  RedoOutlined,\n} from \"@ant-design/icons\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { Card, Button, Layout, message, Skeleton, Space, Table } from \"antd\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport AddCourseForm from \"../../../components/common/course/AddCourseForm\";\nimport EnrolCourseInput from \"../../../components/common/course/EnrolCourseInput\";\nimport Modal from \"../../../components/common/customModal\";\nimport {\n  Footer,\n  Greeting,\n  Navbar,\n  PageTitleBreadcrumb,\n} from \"../../../components/common/sharedLayout\";\nimport { AuthContext, CourseContext } from \"../../../context\";\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { FETCH_COURSE_LIMIT, modalItems } from \"../../../globalData\";\nimport {\n  WITHDRAW_COURSE_MUTATION,\n  DELETE_COURSE_MUTATION,\n} from \"../../../graphql/mutation\";\nimport {\n  FETCH_COURSES_COUNT_QUERY,\n  FETCH_COURSES_QUERY,\n} from \"../../../graphql/query\";\nimport \"./Dashboard.css\";\n\nconst { Content } = Layout;\n\nexport default (props) => {\n  const { user } = useContext(AuthContext);\n  const titleList = [{ name: \"Home\", link: \"/dashboard\" }];\n\n  const columns = [\n    {\n      title: <strong>Bil</strong>,\n      dataIndex: \"bil\",\n      key: \"bil\",\n      align: \"center\",\n      render: (text) => (\n        <Skeleton active loading={loading}>\n          {text}\n        </Skeleton>\n      ),\n      sorter: {\n        compare: (a, b) => a.bil - b.bil,\n        multiple: 2,\n      },\n    },\n    {\n      title: <strong>ID</strong>,\n      dataIndex: \"shortID\",\n      key: \"shortID\",\n      align: \"center\",\n      render: (text) => (\n        <Skeleton active loading={loading}>\n          {text}\n        </Skeleton>\n      ),\n      sorter: (a, b) => a.code.localeCompare(b.date),\n    },\n    {\n      title: <strong>Code</strong>,\n      dataIndex: \"code\",\n      key: \"code\",\n      align: \"center\",\n\n      render: (text) => (\n        <Skeleton active loading={loading}>\n          {text}\n        </Skeleton>\n      ),\n      sorter: (a, b) => a.code.localeCompare(b.date),\n    },\n    {\n      title: <strong>Name</strong>,\n      key: \"name\",\n      dataIndex: \"name\",\n      render: (text) => (\n        <Skeleton active loading={loading}>\n          {text}\n        </Skeleton>\n      ),\n      align: \"center\",\n      sorter: (a, b) => a.name.localeCompare(b.date),\n    },\n    {\n      title: <strong>Session</strong>,\n      key: \"session\",\n      dataIndex: \"session\",\n      render: (text) => (\n        <Skeleton active loading={loading}>\n          {text}\n        </Skeleton>\n      ),\n      align: \"center\",\n      sorter: (a, b) => a.name.localeCompare(b.date),\n    },\n    {\n      title: <strong>Owner</strong>,\n      key: \"owner\",\n      dataIndex: \"owner\",\n      render: (text) => (\n        <Skeleton active loading={loading}>\n          {text}\n        </Skeleton>\n      ),\n      align: \"center\",\n      sorter: (a, b) => a.name.localeCompare(b.date),\n    },\n    {\n      title: <strong>Action</strong>,\n      dataIndex: \"action\",\n      render: (_, record) => (\n        <Skeleton active loading={loading}>\n          <Button\n            onClick={() => handleAccess(record)}\n            style={{ margin: \"10px\" }}\n            icon={<ArrowRightOutlined />}\n          ></Button>\n          <Button\n            onClick={() => handleDelete(record)}\n            loading={\n              selectedCourse.key == record.key && withdrawCourseStatus.loading\n            }\n            disabled={\n              selectedCourse.key == record.key && withdrawCourseStatus.loading\n            }\n            style={{ margin: \"10px\" }}\n            type=\"danger\"\n            icon={<DeleteFilled />}\n          ></Button>\n        </Skeleton>\n      ),\n      align: \"center\",\n    },\n  ];\n\n  const parseCourseData = (courses) => {\n    let parsedData = [];\n    courses.map((c, index) => {\n      const tmp = {\n        _id: c._id,\n        key: c._id,\n        bil:\n          !loading &&\n          tablePagination.pageSize * (tablePagination.current - 1) + index + 1,\n        shortID: c.shortID,\n        code: c.code,\n        name: c.name,\n        session: c.session,\n        owner: c.creator.firstName+\" \"+c.creator.lastName+\" (\"+c.creator.cardID+\")\"\n      };\n      parsedData.push(tmp);\n    });\n\n    return parsedData;\n  };\n\n  const { courses, loadCourses } = useContext(CourseContext);\n\n  const [tablePagination, setTablePagination] = useState({\n    pageSize: FETCH_COURSE_LIMIT,\n    current: 1,\n    total: 0,\n  });\n\n  const [selectedCourse, SetSelectedCourse] = useState({});\n\n  //modal visible boolean\n  const [visible, SetVisible] = useState(false);\n\n  //get total courses count query\n  const totalCoursesQuery = useQuery(FETCH_COURSES_COUNT_QUERY, {\n    onCompleted(data) {\n      // totalAttendancesCount.refetch();\n      setTablePagination({\n        ...tablePagination,\n        total: data.getCoursesCount,\n      });\n    },\n    onError(err) {\n      CheckError(err);\n    },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  //get list of couse query\n  const { data, loading, refetch, fetchMore } = useQuery(FETCH_COURSES_QUERY, {\n    onCompleted(data) {\n      setTablePagination({\n        ...tablePagination,\n        total: totalCoursesQuery.data?.getCoursesCount,\n      });\n\n      if (\n        totalCoursesQuery.data?.getEnrolledCoursesCount -\n          (tablePagination.current - 1) * tablePagination.pageSize <=\n          0 &&\n        tablePagination.current !== 1\n      ) {\n        setTablePagination((prevState) => {\n          return {\n            ...prevState,\n            current: prevState.current - 1,\n          };\n        });\n      }\n    },\n    onError(err) {\n      CheckError(err);\n    },\n    variables: {\n      currPage: tablePagination.current,\n      pageSize: tablePagination.pageSize,\n    },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  //withdrawCourse mutation\n  const [withdrawCourseCallback, withdrawCourseStatus] = useMutation(\n    WITHDRAW_COURSE_MUTATION,\n    {\n      onCompleted(data) {\n        message.success(data.withdrawCourse);\n      },\n      update() {\n        SetVisible(false);\n        refetch();\n        totalCoursesQuery.refetch();\n      },\n      onError(err) {\n        CheckError(err);\n      },\n      variables: {\n        id: selectedCourse._id,\n      },\n    }\n  );\n\n  const [deleteCourseCallback, deleteCourseStatus] = useMutation(\n    DELETE_COURSE_MUTATION,\n    {\n      update() {\n        SetVisible(false);\n        refetch();\n        totalCoursesQuery.refetch();\n      },\n      onError(err) {\n        CheckError(err);\n      },\n      variables: {\n        id: selectedCourse._id,\n      },\n    }\n  );\n\n  //load courses as long as data is fetched\n  useEffect(() => {\n    if (data) {\n      console.log(data);\n      loadCourses(data.getCourses.courses);\n    }\n  }, [data]);\n\n  //-> icon is pressed, navigate to course detail page\n  const handleAccess = (course) => {\n    props.history.push(`/course/${course.shortID}`);\n  };\n\n  //delete icon pressed, show modal\n  const handleDelete = (course) => {\n    SetSelectedCourse(course);\n    SetVisible(true);\n  };\n\n  //modal open\n  const handleOk = (e) => {\n    if (user.userLevel == 0) withdrawCourseCallback();\n    else deleteCourseCallback();\n  };\n\n  //modal close\n  const handleCancel = (e) => {\n    SetVisible(false);\n  };\n\n  const handleTableChange = (value) => {\n    setTablePagination(value);\n  };\n\n  return (\n    <Layout className=\"dashboard layout\">\n      <Navbar />\n      <Layout>\n        <Greeting />\n        <PageTitleBreadcrumb titleList={titleList} />\n        <Card>\n          {user.userLevel == 0 && <EnrolCourseInput />}\n          {user.userLevel == 1 && (\n            <AddCourseForm\n              refetchTableTotal={totalCoursesQuery.refetch}\n              refetchTable={refetch}\n            />\n          )}\n\n          <Space direction=\"vertical\" className=\"width100\">\n            <h1>\n              Total {user.userLevel == 0 ? \"Enrolled\" : \"Created\"} Course:\n              {totalCoursesQuery.data?.getCoursesCount || 0}\n            </h1>\n            <Button\n              style={{ float: \"right\" }}\n              icon={<RedoOutlined />}\n              disabled={loading}\n              loading={loading}\n              onClick={() => refetch()}\n            >\n              Refresh Table\n            </Button>\n            <Table\n              scroll={{ x: \"max-content\" }}\n              loading={loading}\n              pagination={tablePagination}\n              onChange={handleTableChange}\n              dataSource={parseCourseData(courses)}\n              columns={columns}\n            />\n            {console.log(courses)}\n\n            {/*modal backdrop*/}\n            <Modal\n              title={user.userLevel == 0 ? \"Withdraw Course\" : \"Delete Course\"}\n              action={\n                user.userLevel == 0\n                  ? modalItems.course.action.withdraw\n                  : modalItems.course.action.delete\n              }\n              itemType={modalItems.course.name}\n              visible={visible}\n              loading={\n                user.userLevel == 0\n                  ? withdrawCourseStatus.loading\n                  : deleteCourseStatus.loading\n              }\n              handleOk={handleOk}\n              handleCancel={handleCancel}\n              payload={selectedCourse}\n            />\n          </Space>\n        </Card>\n        <Footer />\n      </Layout>\n    </Layout>\n  );\n};\n","export const FETCH_ATTENDANCE_LIMIT = 5;\nexport const FETCH_COURSE_LIMIT = 5;\nexport const FETCH_ENROLMENT_LIMIT = 10;\nexport const FETCH_FACE_PHOTOS_LIMIT = 10;\nexport const FETCH_NOTIFICATION_LIMIT = 10;","import { Avatar, Layout, Menu } from 'antd';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { APP_LOGO_URL } from '../../../assets';\nimport './HeaderNavbar.css';\n\nconst { Header } = Layout;\n\nexport default () => {\n  const pathname =\n    window.location.pathname; /* e.g: pathname=\"/signin\" or \"/\" or \"/signup\" */\n  const path = pathname.substr(1); //skip '/' character\n  return (\n    <div className='headerNavbar' >\n      <Header className='sameco'>\n        <Link to='/'>\n          <div className='headerNavbar__logo'>\n            <Avatar\n              shape=\"square\"\n              className='avatar'\n              size='large'\n              alt='Attendlytics'\n              src={APP_LOGO_URL.link}\n              onError={(err) => {\n                console.log(err);\n              }}\n            />\n            <div className='headerNavbar__text'>\n              <span className='headerNavbar__text__item' style={{ color: \"white\" }}>Attendvanced</span>\n            </div>\n          </div>\n        </Link>\n        <div className='headerNavbar__menu'>\n          <Menu theme='dark' mode='horizontal' defaultSelectedKeys={[path]}>\n            <Menu.Item key='signin' className='sameco'>\n              <Link to='/signin'>Sign in</Link>\n            </Menu.Item>\n            <Menu.Item key='signup' className='sameco'>\n              <Link to='/signup'>Sign up</Link>\n            </Menu.Item>\n          </Menu>\n        </div>\n      </Header>\n    </div>\n  );\n};\n","import { Button, Col, Divider, Layout, Row, Typography } from 'antd';\nimport Texty from 'rc-texty';\nimport 'rc-texty/assets/index.css';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { HeaderNavbar } from '../../../components/common/mainMenu';\nimport { Footer } from '../../../components/common/sharedLayout';\n\nconst { Content } = Layout;\nconst { Title } = Typography;\n\nexport default () => {\n  return (\n    <Layout className='home layout'>\n      <HeaderNavbar />\n\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container mx-auto flex px-5 py-24 md:flex-row flex-col items-center\">\n          <div className=\"lg:flex-grow md:w-1/2 lg:pr-24 md:pr-16 flex flex-col md:items-start md:text-left mb-16 md:mb-0 items-center text-center\">\n            <h1 className=\"title-font sm:text-4xl text-3xl mb-4 font-medium text-gray-900\">Welcome to\n              <br className=\"hidden lg:inline-block\" /> Attendvanced 👋\n            </h1>\n            <p className=\"mb-8 leading-relaxed\">A facial recognition based attendance monitoring system. For professors to automatically manage and track attendance of the course that he is taking.If you are a first time user, Please visit <Link to='/userguidelines'> User Guidelines</Link></p>\n            <div className=\"flex justify-center\">\n              <button className=\"inline-flex text-white bg-blue-500 border-0 py-2 px-6 focus:outline-none hover:bg-blue-600 rounded text-lg\"><Link to='/signup'>Get Started</Link></button>\n              <button className=\"ml-4 inline-flex text-gray-700 bg-gray-100 border-0 py-2 px-6 focus:outline-none hover:bg-gray-200 rounded text-lg\"><Link to='/userguidelines'> User Guidelines</Link></button>\n            </div>\n          </div>\n          <div className=\"lg:max-w-lg lg:w-full md:w-1/2 w-5/6\">\n            <img className=\"object-cover object-center rounded\" alt=\"hero\" src=\"https://i.ibb.co/47TYX2v/main.png\" />\n          </div>\n        </div>\n      </section>\n\n      <section class=\"text-gray-600 body-font\">\n        <div class=\"container px-5 py-24 mx-auto\">\n          <div class=\"text-center mb-20\">\n            <h1 class=\"sm:text-3xl text-2xl font-medium text-center title-font text-gray-900 mb-4\">Features ⭐</h1>\n            <p class=\"text-base leading-relaxed xl:w-2/4 lg:w-3/4 mx-auto\">Below listed are some of the features that makes us best in the Industry.</p>\n          </div>\n          <div class=\"flex flex-wrap lg:w-4/5 sm:mx-auto sm:mb-2 -mx-2\">\n            <div class=\"p-2 sm:w-1/2 w-full\">\n              <div class=\"bg-gray-100 rounded flex p-4 h-full items-center\">\n                <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"3\" class=\"text-blue-500 w-6 h-6 flex-shrink-0 mr-4\" viewBox=\"0 0 24 24\">\n                  <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\"></path>\n                  <path d=\"M22 4L12 14.01l-3-3\"></path>\n                </svg>\n                <span class=\"title-font font-medium\">Separate teams for separate courses.</span>\n              </div>\n            </div>\n            <div class=\"p-2 sm:w-1/2 w-full\">\n              <div class=\"bg-gray-100 rounded flex p-4 h-full items-center\">\n                <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"3\" class=\"text-blue-500 w-6 h-6 flex-shrink-0 mr-4\" viewBox=\"0 0 24 24\">\n                  <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\"></path>\n                  <path d=\"M22 4L12 14.01l-3-3\"></path>\n                </svg>\n                <span class=\"title-font font-medium\">Graphical visualisation of attendance strength.</span>\n              </div>\n            </div>\n            <div class=\"p-2 sm:w-1/2 w-full\">\n              <div class=\"bg-gray-100 rounded flex p-4 h-full items-center\">\n                <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"3\" class=\"text-blue-500 w-6 h-6 flex-shrink-0 mr-4\" viewBox=\"0 0 24 24\">\n                  <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\"></path>\n                  <path d=\"M22 4L12 14.01l-3-3\"></path>\n                </svg>\n                <span class=\"title-font font-medium\">Notification System for students.</span>\n              </div>\n            </div>\n            <div class=\"p-2 sm:w-1/2 w-full\">\n              <div class=\"bg-gray-100 rounded flex p-4 h-full items-center\">\n                <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"3\" class=\"text-blue-500 w-6 h-6 flex-shrink-0 mr-4\" viewBox=\"0 0 24 24\">\n                  <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\"></path>\n                  <path d=\"M22 4L12 14.01l-3-3\"></path>\n                </svg>\n                <span class=\"title-font font-medium\">Can train model through both images and video.</span>\n              </div>\n            </div>\n            <div class=\"p-2 sm:w-1/2 w-full\">\n              <div class=\"bg-gray-100 rounded flex p-4 h-full items-center\">\n                <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"3\" class=\"text-blue-500 w-6 h-6 flex-shrink-0 mr-4\" viewBox=\"0 0 24 24\">\n                  <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\"></path>\n                  <path d=\"M22 4L12 14.01l-3-3\"></path>\n                </svg>\n                <span class=\"title-font font-medium\">Professors can download attendance offline.</span>\n              </div>\n            </div>\n            <div class=\"p-2 sm:w-1/2 w-full\">\n              <div class=\"bg-gray-100 rounded flex p-4 h-full items-center\">\n                <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"3\" class=\"text-blue-500 w-6 h-6 flex-shrink-0 mr-4\" viewBox=\"0 0 24 24\">\n                  <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\"></path>\n                  <path d=\"M22 4L12 14.01l-3-3\"></path>\n                </svg>\n                <span class=\"title-font font-medium\">Students can edit their profile.</span>\n              </div>\n            </div>\n          </div>\n          <button class=\"flex mx-auto mt-16 text-white bg-blue-500 border-0 py-2 px-8 focus:outline-none hover:bg-blue-600 rounded text-lg\"><Link to='/signup'>Get Started</Link></button>\n        </div>\n      </section>\n      <hr style={{ border: \"0\", height: \"1px\", background: \"#333\", backgroundImage: \"linear-gradient(to right, #ccc, #333, #ccc)\" }} />\n\n      <Footer />\n    </Layout>\n  );\n};\n","export const GOOGLE_CLIENT_ID=\"405467209701-eouj6ehmlle59vl4im2jr4fot0ceg5g1.apps.googleusercontent.com\"\n","import { LoadingOutlined, LockOutlined, MailOutlined } from '@ant-design/icons';\nimport { useMutation } from '@apollo/react-hooks';\nimport {\n  Button,\n  Card,\n  Divider,\n  Form,\n  Input,\n  Layout,\n  Space\n} from 'antd';\nimport React, { useContext, useState } from 'react';\nimport GoogleLogin from 'react-google-login';\nimport HeaderNavbar from '../../../components/common/mainMenu/HeaderNavbar';\nimport Footer from '../../../components/common/sharedLayout/Footer';\nimport { GOOGLE_CLIENT_ID } from \"../../../config\";\nimport { AuthContext } from '../../../context';\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { LOGIN_GOOGLE_USER, LOGIN_USER } from '../../../graphql/mutation';\nimport { useForm } from '../../../utils/hooks';\nconst { Content } = Layout;\n\nexport default (props) => {\n  const context = useContext(AuthContext);\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n    email: '',\n    password: '',\n  });\n\n  const [pressedGoogleLogin, setPressedGoogleLogin] = useState(false);\n\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    update(_, { data: { login: userData } }) {\n      context.login(userData);\n      props.history.push('/dashboard');\n    },\n    onError(err) {\n      CheckError(err);\n    },\n    variables: values,\n  });\n\n  const [loginGoogleUser, loginGoogleUserStatus] = useMutation(\n    LOGIN_GOOGLE_USER,\n    {\n      update(_, { data: { googleSignIn: userData } }) {\n        context.login(userData);\n        props.history.push('/dashboard');\n      },\n      onError(err) {\n        CheckError(err);\n      },\n    }\n  );\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  const handleGoogleResponse = (res) => {\n    setPressedGoogleLogin(false);\n    loginGoogleUser({\n      variables: {\n        googleID: res.profileObj.googleId,\n        googleEmail: res.profileObj.email,\n        googleFirstName: res.profileObj.givenName,\n        googleLastName: res.profileObj.familyName,\n        googleProfilePicture: res.profileObj.imageUrl,\n      },\n    });\n  };\n\n  return (\n    <Layout className='signin layout'>\n      <HeaderNavbar />\n\n      <Content\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexDirection: 'column',\n        }}\n      >\n        <Card\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Form\n            name='basic'\n            initialValues={{ remember: true }}\n            onFinish={onSubmit}\n          >\n            <br />\n            <Form.Item\n              label='Email'\n              name='email'\n              rules={[{ required: true, message: 'Please input your email!' }]}\n            >\n              <Input\n                name='email'\n                placeholder='Enter your email'\n                prefix={<MailOutlined />}\n                onChange={onChange}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label='Password'\n              name='password'\n              rules={[\n                { required: true, message: 'Please input your password!' },\n              ]}\n            >\n              <Input.Password\n                name='password'\n                placeholder='Enter your password'\n                prefix={<LockOutlined />}\n                onChange={onChange}\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                className='btn'\n                type='primary'\n                htmlType='submit'\n                loading={loading}\n                disabled={pressedGoogleLogin || loginGoogleUserStatus.loading}\n              >\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n        <Divider />\n        <Space>\n          <GoogleLogin\n            clientId={GOOGLE_CLIENT_ID}\n            buttonText='Continue With Google'\n            onSuccess={handleGoogleResponse}\n            onFailure={(error) => {\n              setPressedGoogleLogin(false);\n              console.error(error);\n            }}\n            cookiePolicy={'single_host_origin'}\n            onRequest={() => setPressedGoogleLogin(true)}\n            disabled={pressedGoogleLogin}\n          />\n        </Space>\n        {loginGoogleUserStatus.loading && (\n          <Space>\n            <Divider />\n            Redirecting, please wait...\n            <LoadingOutlined />\n          </Space>\n        )}\n      </Content>\n      <Footer />\n    </Layout>\n  );\n};\n","import { LockOutlined, MailOutlined, UserOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Button, Card, Form, Input, Layout, message, Radio, Checkbox, Divider, Space } from 'antd';\nimport FormItem from 'antd/lib/form/FormItem';\nimport React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { HeaderNavbar } from '../../../components/common/mainMenu';\nimport { Footer } from '../../../components/common/sharedLayout';\nimport { AuthContext } from '../../../context';\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { REGISTER_USER } from '../../../graphql/mutation';\nimport { useForm } from '../../../utils/hooks';\n\nimport { LOGIN_GOOGLE_USER } from '../../../graphql/mutation';\nimport GoogleLogin from 'react-google-login';\nimport { GOOGLE_CLIENT_ID } from \"../../../config\";\n\nconst { Content } = Layout;\n\nexport default (props) => {\n  const context = useContext(AuthContext);\n\n  const { onChange, onSubmit, values } = useForm(registerUser, {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    userLevel: 0,\n  });\n\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\n    update(_, { data: { register: userData } }) {\n      context.login(userData);\n      props.history.push('/dashboard');\n      message.info('Welcome To Face In!');\n    },\n    onError(err) {\n      CheckError(err);\n    },\n    variables: values,\n  });\n\n  const [loginGoogleUser, loginGoogleUserStatus] = useMutation(\n    LOGIN_GOOGLE_USER,\n    {\n      update(_, { data: { googleSignIn: userData } }) {\n        context.login(userData);\n        props.history.push('/dashboard');\n      },\n      onError(err) {\n        CheckError(err);\n      },\n    }\n  );\n  const handleGoogleResponse = (res) => {\n    setPressedGoogleLogin(false);\n    loginGoogleUser({\n      variables: {\n        googleID: res.profileObj.googleId,\n        googleEmail: res.profileObj.email,\n        googleFirstName: res.profileObj.givenName,\n        googleLastName: res.profileObj.familyName,\n        googleProfilePicture: res.profileObj.imageUrl,\n      },\n    });\n  };\n\n  const [isAgreementChecked, setIsAgreementChecked] = useState(false);\n  const [pressedGoogleLogin, setPressedGoogleLogin] = useState(false);\n\n  function registerUser() {\n    addUser();\n  }\n\n  return (\n    <Layout className='signin layout'>\n      <HeaderNavbar />\n\n      <Content style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\n        <Card style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <Form\n            name='basic'\n            initialValues={{ remember: true }}\n            onFinish={onSubmit}\n          >\n            <br />\n            <Form.Item\n              label='Email'\n              name='email'\n              rules={[\n                { required: true, message: 'Please input your email!' },\n                {\n                  pattern: /^([0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$/,\n                  message: 'Please enter valid email!',\n                },\n              ]}\n            >\n              <Input\n                name='email'\n                placeholder='Enter your email'\n                prefix={<MailOutlined />}\n                onChange={onChange}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label='First Name'\n              name='firstName'\n              rules={[\n                { required: true, message: 'Please input your first name!' },\n                { min: 1, message: 'Please enter more than 3 character' },\n                {\n                  whitespace: true,\n                  message: 'Please do not insert whitespace only!',\n                },\n              ]}\n            >\n              <Input\n                name='firstName'\n                placeholder='Enter your first name'\n                prefix={<UserOutlined />}\n                onChange={onChange}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label='Last Name'\n              name='lastName'\n              rules={[\n                { required: true, message: 'Please input your last name!' },\n\n                { min: 1, message: 'Please enter more than 3 character' },\n                {\n                  whitespace: true,\n                  message: 'Please do not insert whitespace only!',\n                },\n              ]}\n            >\n              <Input\n                name='lastName'\n                placeholder='Enter your last name'\n                prefix={<UserOutlined />}\n                onChange={onChange}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label='Staff ID'\n              name='cardID'\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your staff ID',\n                },\n              ]}\n            >\n              <Input\n                name='cardID'\n                placeholder='Enter your staff ID'\n                onChange={onChange}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label='Password'\n              name='password'\n              rules={[\n                { required: true, message: 'Please input your password!' },\n                { min: 6, message: 'Please enter more than 6 character' },\n                {\n                  whitespace: true,\n                  message: 'Please do not insert whitespace only!',\n                },\n              ]}\n            >\n              <Input.Password\n                name='password'\n                placeholder='Enter your password'\n                prefix={<LockOutlined />}\n                onChange={onChange}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label='Confirm Password'\n              name='confirmPassword'\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your confirm password!',\n                },\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    if (!value || getFieldValue('password') === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      'The two passwords that you entered do not match!'\n                    );\n                  },\n                }),\n              ]}\n            >\n              <Input.Password\n                name='confirmPassword'\n                placeholder='Enter your confirm password'\n                prefix={<LockOutlined />}\n                onChange={onChange}\n              />\n            </Form.Item>\n            <Form.Item label='Role' name='userLevel' valuePropName='checked'>\n              <Radio.Group\n                name='userLevel'\n                value={values.userLevel}\n                onChange={onChange}\n              >\n                <Radio value={0}>Student</Radio>\n                <Radio value={1}>Professor</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Divider />\n\n            <Form.Item>\n              <Button className='btn' type='primary' htmlType='submit' loading={loading} disabled={pressedGoogleLogin || loginGoogleUserStatus.loading}>\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n\n        <Divider />\n        <Space>\n          <GoogleLogin\n            clientId={GOOGLE_CLIENT_ID}\n            buttonText='Continue With Google'\n            onSuccess={handleGoogleResponse}\n            onFailure={(error) => {\n              setPressedGoogleLogin(false);\n              console.error(error);\n            }}\n            cookiePolicy={'single_host_origin'}\n            onRequest={() => setPressedGoogleLogin(true)}\n            disabled={pressedGoogleLogin}\n          />\n        </Space>\n        {loginGoogleUserStatus.loading && (\n\n          <Space>\n            <Divider />\n\n            Redirecting, please wait...\n            <LoadingOutlined />\n          </Space>\n        )}\n      </Content>\n\n      <Footer />\n    </Layout>\n  );\n};\n","import { Button, Col, Layout, Row } from 'antd';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Footer,\n  Greeting,\n  Navbar\n} from '../../../components/common/sharedLayout';\nimport './NoFound.css';\n\nconst { Content } = Layout;\n\nexport default () => {\n  return (\n    <Layout className='nofound layout'>\n      <Navbar />\n      <Layout>\n        <Greeting />\n        <Content className='nofound__content'>\n          <Row className='nofound__panel'>\n            <Col span={24} style={{ marginBottom: '20px' }}>\n              Page Not Found: \"{window.location.pathname}\"\n            </Col>\n\n            <Col span={24}>\n              <Button type='primary' className='btn'>\n                <Link to='/dashboard'>Home Page</Link>\n              </Button>\n            </Col>\n          </Row>\n        </Content>\n        <Footer />\n      </Layout>\n    </Layout>\n  );\n};\n","/*\n  Single notification\n*/\nimport { CheckOutlined } from '@ant-design/icons';\nimport { Card } from 'antd';\nimport moment from 'moment';\nimport React from 'react';\nimport './Notification.css';\n\nexport default ({ notification }) => {\n  return (\n    <Card\n      className={\n        notification.checked ? 'notification' : 'unchecked_notification'\n      }\n    >\n      <h1 className='notification__title'>{notification.title}</h1>\n      <hr />\n      <p className='notification__content'>{notification.content}</p>\n      <div className='notification__seen'>\n        {notification.checked ? (\n          <>\n            <CheckOutlined /> seen\n          </>\n        ) : (\n          <>new</>\n        )}\n      </div>\n      <div className='notification__createdAt'>\n        {moment(notification.updatedAt).fromNow(true)}\n      </div>\n    </Card>\n  );\n};\n","//This is a helper function to conditionally determine the fetch status\n\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport React from 'react';\n\nexport const FetchChecker = ({\n  loading,\n  payload,\n  fetchedDone,\n  allLoadedMessage,\n  noItemMessage,\n  handleFetchMore,\n}) => {\n  return (\n    <div>\n      {payload.length > 0 && !fetchedDone && (\n        <Button onClick={handleFetchMore} disabled={loading}>\n          Load More\n          {loading ? <LoadingOutlined /> : null}\n        </Button>\n      )}\n\n      {!loading && payload?.length !== 0 && fetchedDone && (\n        <div className='allLoadedCard'>\n          <h3>{allLoadedMessage}</h3>\n        </div>\n      )}\n\n      {!loading && payload?.length === 0 && <p>{noItemMessage}</p>}\n    </div>\n  );\n};\n","import { Spin } from 'antd';\nimport React from 'react';\n\nexport const LoadingSpin = ({ loading }) => {\n  return (\n    loading && (\n      <div style={{ textAlign: 'center' }}>\n        <Spin tip='Loading...' />\n      </div>\n    )\n  );\n};\n","import { useQuery } from '@apollo/react-hooks';\nimport { Button, Card, Layout, Spin } from 'antd';\nimport React, { useContext, useState, useEffect } from 'react';\nimport Notification from '../../../components/common/notification/Notification';\nimport {\n  Footer,\n  Greeting,\n  Navbar,\n  PageTitleBreadcrumb,\n} from '../../../components/common/sharedLayout';\nimport { NotificationContext } from '../../../context';\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { FETCH_NOTIFICATION_LIMIT } from '../../../globalData';\nimport { FETCH_NOTIFICATIONS_QUERY } from '../../../graphql/query';\nimport './Notifications.css';\nimport { FetchChecker } from '../../../utils/FetchChecker';\nimport { LoadingSpin } from '../../../utils/LoadingSpin';\n\nconst { Content } = Layout;\n\nexport default () => {\n  const {\n    notifications,\n    fetchedDone,\n    setFetchedDone,\n    loadNotifications,\n    uncheckedNotificationCount,\n    setUncheckedNotificationCount,\n  } = useContext(NotificationContext);\n\n  const { data, loading, error, fetchMore, networkStatus } = useQuery(\n    FETCH_NOTIFICATIONS_QUERY,\n    {\n      onError(err) {\n        CheckError(err);\n      },\n      variables: {\n        limit: FETCH_NOTIFICATION_LIMIT,\n      },\n      notifyOnNetworkStatusChange: true,\n    }\n  );\n\n  useEffect(() => {\n    if (data) {\n      loadNotifications(data.getNotifications.notifications);\n\n      let count = 0;\n      data.getNotifications.notifications.map((n) => {\n        if (!n.checked) count++;\n        setTimeout(() => (n.checked = true), 2000);\n      });\n\n      if (uncheckedNotificationCount >= count)\n        setUncheckedNotificationCount(uncheckedNotificationCount - count);\n\n      if (!data.getNotifications.hasNextPage) setFetchedDone(true);\n      else setFetchedDone(false);\n    }\n  }, [data]);\n\n  const handleFetchMore = () => {\n    fetchMore({\n      variables: {\n        limit: FETCH_NOTIFICATION_LIMIT,\n        cursor: notifications[notifications.length - 1]._id,\n      },\n      onError(err) {\n        CheckError(err);\n      },\n      updateQuery: (pv, { fetchMoreResult }) => {\n        if (!fetchMoreResult.getNotifications.hasNextPage) {\n          setFetchedDone(true);\n        }\n        let count = 0;\n\n        fetchMoreResult.getNotifications.notifications.map((n) => {\n          if (!n.checked) count++;\n          return null;\n        });\n        if (uncheckedNotificationCount >= count)\n          setUncheckedNotificationCount(uncheckedNotificationCount - count);\n        return {\n          getNotifications: {\n            __typename: 'Notifications',\n            notifications: [\n              ...pv.getNotifications.notifications,\n              ...fetchMoreResult.getNotifications.notifications,\n            ],\n            hasNextPage: fetchMoreResult.getNotifications.hasNextPage,\n          },\n        };\n      },\n    });\n  };\n  return (\n    <div className='notifications'>\n      <Layout className='notifications layout'>\n        <Navbar />\n\n        <Layout>\n          <Greeting />\n          <PageTitleBreadcrumb\n            titleList={[{ name: 'Notification', link: '/notification' }]}\n          />\n          <Content className='notifications__content'>\n\n            <Card>\n              {notifications &&\n                notifications.map((notification) => (\n                  <Notification\n                    key={notification._id}\n                    notification={notification}\n                  />\n                ))}\n\n              <LoadingSpin loading={loading} />\n              <FetchChecker\n                loading={loading}\n                payload={notifications}\n                fetchedDone={fetchedDone}\n                allLoadedMessage='All Notification Loaded'\n                noItemMessage='No Notification...'\n                handleFetchMore={handleFetchMore}\n              />\n            </Card>\n\n          </Content>\n          <Footer />\n        </Layout>\n      </Layout>\n    </div>\n  );\n};\n","import { LoadingOutlined, UserOutlined } from '@ant-design/icons';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Avatar, Button, Card, Form, Input, Layout, message } from 'antd';\nimport React, { useContext, useState } from 'react';\nimport {\n  Footer,\n  Greeting,\n  Navbar,\n  PageTitleBreadcrumb,\n} from '../../../components/common/sharedLayout';\nimport { AuthContext } from '../../../context';\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { EDIT_PROFILE_MUTATION } from '../../../graphql/mutation';\nimport './Profile.css';\n\nconst { Content } = Layout;\n\nexport default () => {\n  const { user, avatarColor, editProfile } = useContext(AuthContext);\n\n  const [previewSource, setPreviewSource] = useState(null);\n  const [editProfileMutation, { loading }] = useMutation(\n    EDIT_PROFILE_MUTATION,\n    {\n      update(_, { data }) {\n        editProfile(data.editProfile);\n        message.success('Edit Success!');\n      },\n      onError(err) {\n        CheckError(err);\n      },\n    }\n  );\n\n  function submitCallback(values) {\n    editProfileMutation({\n      variables: { ...values, profilePicture: previewSource },\n    });\n  }\n\n  const previewFile = (file) => {\n    if (!file) return;\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  return (\n    <div className='addCourse'>\n      <Layout className=' layout'>\n        <Navbar />\n        <Layout>\n          <Greeting />\n          <PageTitleBreadcrumb\n            titleList={[{ name: 'Profile', link: '/profile' }]}\n          />\n          <Content className='profile__content'>\n            <Card className='profile__card'>\n              <div className='profile__picture__container'>\n                <Avatar\n                  src={previewSource ? previewSource : user.profilePictureURL}\n                  size={200}\n                  className='profile__picture'\n                  style={!user.profilePictureURL && { ...avatarColor, fontSize: \"100px\" }}\n                >\n                  {user.firstName[0]}\n                </Avatar>\n                <label className='profile__picture__label' htmlFor='files'>\n                  Change Profile Picture\n                </label>\n                <input\n                  className='profile__picture__input'\n                  type='file'\n                  id='files'\n                  onChange={(e) => {\n                    const file = e.target.files[0];\n                    previewFile(file);\n                  }}\n                  accept='image/x-png,image/gif,image/jpeg'\n                />\n              </div>\n\n              <Form\n                className='profile__form'\n                name='basic'\n                onFinish={submitCallback}\n                initialValues={{\n                  firstName: user.firstName,\n                  lastName: user.lastName,\n                  cardID: user.cardID,\n                }}\n              >\n                <Form.Item label='Email' name='email'>\n                  <Input name='email' defaultValue={user.email} disabled />\n                </Form.Item>\n\n                <Form.Item label='Role' name='Role'>\n                  <Input\n                    name='role'\n                    defaultValue={`${user.userLevel === 0 ? 'Student' : 'Lecturer'\n                      }`}\n                    disabled\n                  />\n                </Form.Item>\n\n                <Form.Item\n                  label='First Name'\n                  name='firstName'\n                  rules={[\n                    { required: true, message: 'Please input first name!' },\n                  ]}\n                >\n                  <Input name='firstName' placeholder='Enter your first name' />\n                </Form.Item>\n\n                <Form.Item\n                  label='Last Name'\n                  name='lastName'\n                  rules={[\n                    { required: true, message: 'Please enter your last name!' },\n                  ]}\n                >\n                  <Input name='lastName' placeholder='Enter your last name' />\n                </Form.Item>\n\n                <Form.Item\n                  label={user.userLevel === 0 ? 'Matric Number' : 'Staff ID'}\n                  name='cardID'\n                  rules={[\n                    {\n                      required: true,\n                      message: `Please your ${user.userLevel === 0 ? 'Matric Number' : 'Staff ID'\n                        }!`,\n                    },\n                  ]}\n                >\n                  <Input\n                    name='cardID'\n                    placeholder={`Enter your ${user.userLevel === 0 ? 'Matric Number' : 'Staff ID'\n                      }`}\n                  />\n                </Form.Item>\n\n                <Form.Item>\n                  <Button className='btn' type='primary' htmlType='submit' disabled={loading}>\n                    Submit {loading ? <LoadingOutlined /> : null}\n                  </Button>\n                </Form.Item>\n              </Form>\n            </Card>\n          </Content>\n          <Footer />\n        </Layout>\n      </Layout>\n    </div>\n  );\n};\n","import {\n  DeleteFilled,\n  ProfileOutlined,\n  RedoOutlined,\n  RightCircleFilled,\n  ClockCircleFilled,\n  StopOutlined,\n} from \"@ant-design/icons\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport {\n  Button,\n  Card,\n  Divider,\n  Layout,\n  message,\n  Skeleton,\n  Space,\n  Table,\n  Tag,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport moment from \"moment\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../../../components/common/customModal\";\nimport {\n  Footer,\n  Greeting,\n  Navbar,\n  PageTitleBreadcrumb,\n} from \"../../../components/common/sharedLayout\";\nimport { AuthContext } from \"../../../context\";\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { FETCH_ATTENDANCE_LIMIT, modalItems } from \"../../../globalData\";\nimport { DELETE_ATTENDANCE_MUTATION } from \"../../../graphql/mutation\";\nimport {\n  FETCH_ATTENDANCE_LIST_COUNT_IN_COURSE_QUERY,\n  FETCH_ATTENDANCE_LIST_IN_COURSE_QUERY,\n} from \"../../../graphql/query\";\n\nconst { Title } = Typography;\nconst { Content } = Layout;\n\nexport default (props) => {\n  const { user } = useContext(AuthContext);\n  const [attendanceList, setAttendanceList] = useState([]);\n\n  const columns = [\n    {\n      title: <strong>Bil</strong>,\n      dataIndex: \"bil\",\n      key: \"bil\",\n      render: (text) => <Skeleton loading={loading}>{text}</Skeleton>,\n      sorter: {\n        compare: (a, b) => a.bil - b.bil,\n        multiple: 2,\n      },\n    },\n    {\n      key: \"room\",\n      title: <strong>Attendance Room ID</strong>,\n      dataIndex: \"room\",\n      align: \"center\",\n      render: (text) => (\n        <Skeleton active loading={loading}>\n          {text}\n        </Skeleton>\n      ),\n      sorter: (a, b) => a.mode.localeCompare(b.mode),\n    },\n    {\n      key: \"date\",\n      title: <strong>Date</strong>,\n      dataIndex: \"date\",\n      align: \"center\",\n      render: (text) => (\n        <Skeleton active loading={loading}>\n          {text}\n        </Skeleton>\n      ),\n      sorter: (a, b) => a.date.localeCompare(b.date),\n    },\n    {\n      key: \"time\",\n      title: <strong>Time</strong>,\n      dataIndex: \"time\",\n      align: \"center\",\n      render: (text) => (\n        <Skeleton active loading={loading}>\n          {text}\n        </Skeleton>\n      ),\n      sorter: (a, b) => a.time.localeCompare(b.time),\n    },\n    {\n      key: \"mode\",\n      title: <strong>Mode</strong>,\n      dataIndex: \"mode\",\n      align: \"center\",\n      render: (text) => (\n        <Skeleton active loading={loading}>\n          {text}\n        </Skeleton>\n      ),\n      sorter: (a, b) => a.mode.localeCompare(b.mode),\n    },\n    {\n      title: <strong>Open</strong>,\n      dataIndex: \"open\",\n      key: \"open\",\n      render: (text) => (\n        <Tag color={text == \"On\" ? \"#0c8\" : \"#f00\"}>\n          {text} {text == \"On\" ? <ClockCircleFilled /> : <StopOutlined />}\n        </Tag>\n      ),\n      align: \"center\",\n      sorter: (a, b) => a.open.localeCompare(b.open),\n    },\n    {\n      title: <strong>{\"Action\"}</strong>,\n      dataIndex: user.userLevel === 1 ? \"action\" : \"status\",\n      render: (_, record) => (\n        <Skeleton loading={loading} active>\n          <Tooltip placement=\"topLeft\" title=\"Go to Room\">\n            <Button\n              onClick={() => handleAccessRoom(record)}\n              style={{ margin: \"10px\" }}\n              icon={<RightCircleFilled />}\n            ></Button>\n          </Tooltip>\n\n          <Tooltip placement=\"topLeft\" title=\"History Record\">\n            <Button\n              onClick={() => handleAccessHistory(record)}\n              style={{ margin: \"10px\" }}\n              icon={<ProfileOutlined />}\n            ></Button>\n          </Tooltip>\n\n          {user.userLevel == 1 && (\n            <Tooltip placement=\"topLeft\" title=\"Delete Record\">\n              <Button\n                onClick={() => handleDelete(record)}\n                loading={\n                  selectedAttendance.key == record.key &&\n                  deleteAttendanceListtatus.loading\n                }\n                disabled={\n                  selectedAttendance.key == record.key &&\n                  deleteAttendanceListtatus.loading\n                }\n                style={{ margin: \"10px\" }}\n                type=\"danger\"\n                icon={<DeleteFilled />}\n              ></Button>\n            </Tooltip>\n          )}\n        </Skeleton>\n      ),\n      align: \"center\",\n    },\n  ];\n\n  //modal visible boolean\n  const [visible, SetVisible] = useState(false);\n\n  const [tablePagination, setTablePagination] = useState({\n    pageSize: FETCH_ATTENDANCE_LIMIT,\n    current: 1,\n    total: 0,\n  });\n\n  //get total attendanceList count query\n  const [selectedAttendance, setSelectedAttendance] = useState({});\n  const totalAttendanceListCountInCourse = useQuery(\n    FETCH_ATTENDANCE_LIST_COUNT_IN_COURSE_QUERY,\n    {\n      onCompleted(data) {\n        totalAttendanceListCountInCourse.refetch();\n        setTablePagination({\n          ...tablePagination,\n          total: data.getAttendanceListCountInCourse,\n        });\n      },\n      variables: {\n        courseID: props.match.params.id,\n      },\n      onError(err) {\n        CheckError(err);\n      },\n    }\n  );\n  const { data, loading, error, refetch } = useQuery(\n    FETCH_ATTENDANCE_LIST_IN_COURSE_QUERY,\n    {\n      onCompleted(data) {\n        setTablePagination({\n          ...tablePagination,\n          total:\n            totalAttendanceListCountInCourse.data\n              ?.getAttendanceListCountInCourse,\n        });\n        if (\n          totalAttendanceListCountInCourse.data\n            ?.getAttendanceListCountInCourse -\n          (tablePagination.current - 1) * tablePagination.pageSize <=\n          0 &&\n          tablePagination.current !== 1\n        ) {\n          setTablePagination((prevState) => {\n            return {\n              ...prevState,\n              current: prevState.current - 1,\n            };\n          });\n        }\n      },\n      onError(err) {\n        CheckError(err);\n      },\n      variables: {\n        courseID: props.match.params.id,\n        currPage: tablePagination.current,\n        pageSize: tablePagination.pageSize,\n      },\n      notifyOnNetworkStatusChange: true,\n    }\n  );\n\n  const [deleteAttendanceCallback, deleteAttendanceListtatus] = useMutation(\n    DELETE_ATTENDANCE_MUTATION,\n    {\n      onCompleted(data) {\n        SetVisible(false);\n        message.success(\"Delete Success\");\n        totalAttendanceListCountInCourse.refetch();\n        refetch();\n      },\n      onError(err) {\n        CheckError(err);\n      },\n      variables: {\n        attendanceID: selectedAttendance.key,\n      },\n    }\n  );\n\n  useEffect(() => {\n    setAttendanceList(data?.getAttendanceListInCourse.attendanceList || []);\n  }, [data]);\n\n  const handleAccessHistory = (attendance) => {\n    props.history.push(\n      `/course/${props.match.params.id}/attendanceList/${attendance.key}`\n    );\n  };\n\n  const handleAccessRoom = (attendance) => {\n    props.history.push(\n      `/course/${props.match.params.id}/attendanceRoom/${attendance.key}`\n    );\n  };\n\n  const handleDelete = (attendance) => {\n    setSelectedAttendance(attendance);\n    SetVisible(true);\n  };\n  const handleOk = (e) => {\n    deleteAttendanceCallback();\n  };\n\n  const handleCancel = (e) => {\n    SetVisible(false);\n  };\n\n  const parseAttendanceData = (attendanceList) => {\n    let parsedData = [];\n    attendanceList.map((att, index) => {\n      console.log(att);\n      const tmp = {\n        key: att._id,\n        bil:\n          !loading &&\n          tablePagination.pageSize * (tablePagination.current - 1) + index + 1,\n        date: moment(att.date).format(\"DD/MM/YYYY\"),\n        time: moment(att.time).format(\"HH:mm\"),\n        room: att._id,\n        mode: att.mode,\n        open: att.isOn ? \"On\" : \"Off\",\n      };\n      parsedData.push(tmp);\n    });\n\n    return parsedData;\n  };\n\n  const handleTableChange = (value) => {\n    setTablePagination(value);\n  };\n\n  return (\n    <Layout className=\"layout\">\n      <Navbar />\n      <Layout>\n        <Greeting />\n        <PageTitleBreadcrumb\n          titleList={[\n            { name: \"Home\", link: \"/dashboard\" },\n            {\n              name: `Course: ${props.match.params.id}`,\n              link: `/course/${props.match.params.id}`,\n            },\n            {\n              name: \"Attendance List\",\n              link: `/course/${props.match.params.id}/attendanceList`,\n            },\n          ]}\n        />\n        <Content>\n          <Card>\n            <Space direction=\"vertical\" className=\"width100\">\n              {data && (\n                <Title level={4}>\n                  Course:{\" \"}\n                  {`${data.getAttendanceListInCourse.course.code} ${data.getAttendanceListInCourse.course.name} (${data.getAttendanceListInCourse.course.session})`}\n                </Title>\n              )}\n              <Divider />\n              <h1>\n                Total Attendance:{\" \"}\n                {totalAttendanceListCountInCourse.data\n                  ?.getAttendanceListCountInCourse || 0}\n              </h1>\n              {user.userLevel === 1 && (\n                <Button style={{ float: \"right\" }} type=\"primary\" className='btn'>\n                  <Link\n                    to={`/course/${props.match.params.id}/attendanceForm`}\n                  >\n                    Create Attendance\n                  </Link>\n                </Button>\n              )}\n              <Button\n                style={{ float: \"right\" }}\n                icon={<RedoOutlined />}\n                disabled={loading}\n                loading={loading}\n                onClick={() => refetch()}\n              >\n                Refresh Table\n              </Button>\n              <Table\n                scroll={{ x: \"max-content\" }}\n                loading={loading}\n                pagination={tablePagination}\n                dataSource={parseAttendanceData(attendanceList)}\n                onChange={handleTableChange}\n                columns={columns}\n              />\n\n              {/*modal backdrop*/}\n              <Modal\n                title=\"Delete Attendance\"\n                action={modalItems.attendance.action.delete}\n                itemType={modalItems.attendance.name}\n                visible={visible}\n                loading={deleteAttendanceListtatus.loading}\n                handleOk={handleOk}\n                handleCancel={handleCancel}\n                payload={selectedAttendance}\n              />\n            </Space>\n          </Card>\n        </Content>\n\n        <Footer />\n      </Layout>\n    </Layout>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\n\nexport default ({ attendeesLength, absenteesLength }) => {\n  const [data, setData] = useState([\n    { name: \"Attendees\", value: attendeesLength },\n    { name: \"Absentees\", value: absenteesLength },\n  ]);\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const [pieSize, setPieSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  const PIECOLORS = [\"#00C49F\", \"#ee8888\"];\n\n  const onPieEnter = (data, index) => {\n    setActiveIndex(index);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setPieSize({ width: window.innerWidth, height: window.innerHeight });\n    });\n  }, []);\n\n  useEffect(() => {\n    setData([\n      { name: \"Attendees\", value: attendeesLength },\n      { name: \"Absentees\", value: absenteesLength },\n    ]);\n  }, [attendeesLength, absenteesLength]);\n\n  const renderActiveShape = (props) => {\n    const RADIAN = Math.PI / 180;\n    const {\n      cx,\n      cy,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      startAngle,\n      endAngle,\n      fill,\n      payload,\n      percent,\n      value,\n    } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n    return (\n      <g>\n        <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n          {payload.name}\n        </text>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        <Sector\n          cx={cx}\n          cy={cy}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          innerRadius={outerRadius + 6}\n          outerRadius={outerRadius + 10}\n          fill={fill}\n        />\n        <path\n          d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n          stroke={fill}\n          fill=\"none\"\n        />\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          textAnchor={textAnchor}\n          fill=\"#333\"\n        >{`${value}`}</text>\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          dy={18}\n          textAnchor={textAnchor}\n          fill=\"#999\"\n        >\n          {`(${(percent * 100).toFixed(2)}%)`}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <PieChart width={pieSize.width} height={pieSize.height / 2}>\n      <Pie\n        activeIndex={activeIndex}\n        activeShape={renderActiveShape}\n        data={data}\n        dataKey=\"value\"\n        cx={(pieSize.width * 3) / 7}\n        cy={200}\n        innerRadius={70}\n        outerRadius={100}\n        fill=\"#8884d8\"\n        onMouseEnter={onPieEnter}\n      >\n        {data.map((entry, index) => (\n          <Cell\n            key={`cell-${index}`}\n            fill={PIECOLORS[index % PIECOLORS.length]}\n          />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n};\n","import { UserOutlined, RedoOutlined } from \"@ant-design/icons\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {\n  Avatar,\n  Card,\n  Divider,\n  Layout,\n  Space,\n  Table,\n  Tag,\n  Button,\n  Typography,\n} from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Footer,\n  Greeting,\n  Navbar,\n  PageTitleBreadcrumb,\n} from \"../../../components/common/sharedLayout\";\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport {\n  FETCH_ATTENDANCE_QUERY,\n  FETCH_PARTICIPANTS_QUERY,\n  FETCH_TRX_LIST_IN_ATTENDANCE,\n} from \"../../../graphql/query\";\nimport HistoryViz from \"./HistoryViz\";\nimport { LoadingSpin } from \"../../../utils/LoadingSpin\";\nimport moment from \"moment\";\n\nconst { Title } = Typography;\nconst { Content } = Layout;\n\nexport default (props) => {\n  const columns = [\n    {\n      title: <strong>Avatar</strong>,\n      dataIndex: \"avatar\",\n      key: \"avatar\",\n      align: \"center\",\n      width: \"5%\",\n    },\n    {\n      key: \"cardID\",\n      title: <strong>Matric Number</strong>,\n      dataIndex: \"cardID\",\n      align: \"center\",\n      sorter: (a, b) => a.cardID.localeCompare(b.cardID),\n    },\n    {\n      key: \"name\",\n      title: <strong>Name</strong>,\n      dataIndex: \"name\",\n      align: \"center\",\n      sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n      title: <strong>Status</strong>,\n      dataIndex: \"status\",\n      render: (_, record) => (\n        <Tag color={record.status === \"Absent\" ? \"volcano\" : \"green\"}>\n          {record.status}\n        </Tag>\n      ),\n      align: \"center\",\n      sorter: (a, b) => a.status.localeCompare(b.status),\n    },\n    {\n      title: <strong>Check In Date</strong>,\n      dataIndex: \"checkin_date\",\n      render: (_, record) => record.checkin_date,\n      align: \"center\",\n      sorter: (a, b) => a.checkin_date.localeCompare(b.checkin_date),\n    },\n    {\n      title: <strong>Check In Time</strong>,\n      dataIndex: \"checkin_time\",\n      render: (_, record) => record.checkin_time,\n      align: \"center\",\n      sorter: (a, b) => a.checkin_time.localeCompare(b.checkin_time),\n    },\n  ];\n\n  const [participants, setParticipants] = useState([]);\n  const [attendees, setAttendees] = useState([]);\n  const [absentees, setAbsentees] = useState([]);\n  const [trx, setTrx] = useState([]);\n\n  const [stats, setStats] = useState(\"\");\n\n  const attendanceGQLQuery = useQuery(FETCH_ATTENDANCE_QUERY, {\n    onError(err) {\n      props.history.push(\n        `/course/${props.match.params.courseID}/attendanceList`\n      );\n\n      CheckError(err);\n    },\n    variables: {\n      attendanceID: props.match.params.attendanceID,\n    },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const courseAndParticipantsGQLQuery = useQuery(\n    FETCH_PARTICIPANTS_QUERY,\n    {\n      onError(err) {\n        props.history.push(`/dashboard`);\n\n        CheckError(err);\n      },\n      variables: {\n        id: props.match.params.courseID,\n      },\n      notifyOnNetworkStatusChange: true,\n    }\n  );\n\n  const trxListInAttendanceGQLQuery = useQuery(FETCH_TRX_LIST_IN_ATTENDANCE, {\n    onError(err) {\n      CheckError(err);\n    },\n    variables: {\n      attendanceID: props.match.params.attendanceID,\n    },\n    notifyOnNetworkStatusChange: true,\n  });\n  \n  useEffect(() => {\n    if (courseAndParticipantsGQLQuery.data) {\n      setParticipants(\n        courseAndParticipantsGQLQuery.data.getParticipants\n      );\n    }\n  }, [courseAndParticipantsGQLQuery.data]);\n\n  useEffect(() => {\n    if (trxListInAttendanceGQLQuery.data) {\n      const currAbsentees = participants.filter((participant) => {\n        delete participant.attend_at;\n\n        const result = trxListInAttendanceGQLQuery.data.getTrxListInAttendance.filter(\n          (attendee) => participant._id == attendee.studentID\n        );\n\n        return result.length == 0; //count as absentee if no found\n      });\n\n\n      const currAttendees = participants.filter((participant) => {\n        const result = trxListInAttendanceGQLQuery.data.getTrxListInAttendance.filter(\n          (attendee) => participant._id == attendee.studentID\n        );\n          console.log(\"result\", result);\n        if (result.length >= 1) {\n          Object.assign(participant, { attend_at: result[0].createdAt });\n        }\n        return result.length >= 1; //count as attendee if found\n      });\n\n      setAbsentees(currAbsentees);\n      setAttendees(currAttendees);\n    }\n    return ()=>{\n      \n      setAbsentees([]);\n      setAttendees([]);\n    }\n  }, [participants, trxListInAttendanceGQLQuery.data]);\n\n  useEffect(() => {\n    setStats(`${attendees.length}/${participants.length}`);\n    return ()=>{\n      setStats(\"\");\n    }\n  }, [attendees, absentees, participants]);\n\n  const parseParticipantData = (participants, absentees) => {\n    let parsedData = [];\n    console.log(absentees)\n    participants.map((participant, index) => {\n      const tmp = {\n        key: participant._id,\n        avatar: (\n          <Avatar\n            src={participant.profilePictureURL}\n            style={{\n              backgroundColor: `rgb(${Math.random() * 150 + 30}, ${\n                Math.random() * 150 + 30\n              }, ${Math.random() * 150 + 30})`,\n            }}\n          >\n            {/* Set the avatar to participant's first name */}\n            {participant.firstName[0]}\n          </Avatar>\n        ),\n        cardID: participant.cardID,\n        name: participant.firstName + \" \" + participant.lastName,\n\n        status: absentees.find((abs) => abs._id == participant._id)\n          ? \"Absent\"\n          : \"Attend\",\n        checkin_date: participant.attend_at\n          ? moment(participant.attend_at).format(\"DD/MM/YYYY\")\n          : \"-\",\n        checkin_time: participant.attend_at\n          ? moment(participant.attend_at).format(\"h:mm:ss a\")\n          : \"-\",\n      };\n      parsedData.push(tmp);\n    });\n\n    return parsedData;\n  };\n\n  return (\n    <Layout className=\"layout\">\n      <Navbar />\n      <Layout>\n        <Greeting />\n        <PageTitleBreadcrumb\n          titleList={[\n            { name: \"Home\", link: \"/dashboard\" },\n            {\n              name: `Course: ${props.match.params.courseID}`,\n              link: `/course/${props.match.params.courseID}`,\n            },\n            {\n              name: `Attendance List`,\n              link: `/course/${props.match.params.courseID}/attendanceList`,\n            },\n            {\n              name: `Attendance Record: ${props.match.params.attendanceID}`,\n              link: `/course/${props.match.params.courseID}/attendanceList/${props.match.params.attendanceID}`,\n            },\n          ]}\n        />\n        <Content>\n          <Card>\n            <Space direction=\"vertical\" className=\"width100\">\n              {attendanceGQLQuery.data && (\n                <Card>\n                  <Title\n                    level={4}\n                  >{`Course: ${attendanceGQLQuery.data.getAttendance.course.shortID} - ${attendanceGQLQuery.data.getAttendance.course.code} - ${attendanceGQLQuery.data.getAttendance.course.name} - ${attendanceGQLQuery.data.getAttendance.course.session}`}</Title>\n\n                  <p>\n                    Date:{\" \"}\n                    <strong>\n                      {moment(\n                        attendanceGQLQuery.data.getAttendance.date\n                      ).format(\"DD/MM/YYYY\")}\n                    </strong>\n                  </p>\n                  <p>\n                    Time:{\" \"}\n                    <strong>\n                      {moment(\n                        attendanceGQLQuery.data.getAttendance.time\n                      ).format(\"h:mm a\")}\n                    </strong>\n                  </p>\n                </Card>\n              )}\n              <Divider />\n\n              <Card style={{ display: \"flex\", justifyContent: \"center\" }}>\n                {\" \"}\n                <p>\n                  <strong>Attendance Transaction:</strong> {stats || \"-\"}\n                </p>\n                <br />\n              </Card>\n              {courseAndParticipantsGQLQuery.data ? (\n                <HistoryViz\n                  attendeesLength={attendees.length}\n                  absenteesLength={absentees.length}\n                />\n              ) : (\n                <LoadingSpin loading={courseAndParticipantsGQLQuery.loading} />\n              )}\n              <Button\n                style={{ float: \"right\" }}\n                icon={<RedoOutlined />}\n                disabled={attendanceGQLQuery.loading}\n                loading={attendanceGQLQuery.loading}\n                onClick={() => attendanceGQLQuery.refetch()}\n              >\n                Refresh Table\n              </Button>\n              <Table\n                scroll={{ x: \"max-content\" }}\n                loading={courseAndParticipantsGQLQuery.loading}\n                pagination={{ pageSize: 5 }}\n                dataSource={\n                  courseAndParticipantsGQLQuery.data\n                    ? parseParticipantData(participants, absentees)\n                    : []\n                }\n                columns={columns}\n              />\n            </Space>\n          </Card>\n        </Content>\n\n        <Footer />\n      </Layout>\n    </Layout>\n  );\n};\n","import * as faceapi from 'face-api.js';\n\nexport async function loadModels(\n  setLoadingMessage,\n  setLoadingMessageError\n) {\n  const MODEL_URL = process.env.PUBLIC_URL + '/models';\n\n  try {\n    setLoadingMessage('Loading Face Detector');\n    await faceapi.loadSsdMobilenetv1Model(MODEL_URL);\n\n    setLoadingMessage('Loading 68 Facial Landmark Detector');\n    await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\n\n    setLoadingMessage('Loading Feature Extractor');\n    await faceapi.loadFaceRecognitionModel(MODEL_URL);\n  } catch (err) {\n    setLoadingMessageError(\n      'Model loading failed. Please contact me about the bug:attendlytical@gmail.com'\n    );\n  }\n}\n\nexport async function getFullFaceDescription(blob, inputSize = 512) {\n  // tiny_face_detector options\n  let scoreThreshold = 0.8;\n  const OPTION = new faceapi.SsdMobilenetv1Options({\n    inputSize,\n    scoreThreshold,\n  });\n  const useTinyModel = true;\n\n  // fetch image to api\n  let img = await faceapi.fetchImage(blob);\n\n  // detect all faces and generate full description from image\n  // including landmark and descriptor of each face\n  let fullDesc = await faceapi\n    .detectAllFaces(img, OPTION)\n    .withFaceLandmarks(useTinyModel)\n    .withFaceDescriptors();\n  return fullDesc;\n}\n\nexport async function createMatcher(faceProfile, maxDescriptorDistance) {\n  // Create labeled descriptors of member from profile\n  let labeledDescriptors = faceProfile.map(\n    (profile) =>\n      new faceapi.LabeledFaceDescriptors(\n        profile.student._id,\n        profile.facePhotos.map(\n          (photo) => new Float32Array(photo.faceDescriptor.match(/-?\\d+(?:\\.\\d+)?/g).map(Number))\n        )\n      )\n  );\n\n  // Create face matcher (maximum descriptor distance is 0.5)\n  let faceMatcher = new faceapi.FaceMatcher(\n    labeledDescriptors,\n    maxDescriptorDistance\n  );\n\n  return faceMatcher;\n}\n\nexport function isFaceDetectionModelLoaded() {\n  return !!faceapi.nets.ssdMobilenetv1.params;\n}\n\nexport function isFeatureExtractionModelLoaded() {\n  return !!faceapi.nets.faceRecognitionNet.params;\n}\n\nexport function isFacialLandmarkDetectionModelLoaded() {\n  return !!faceapi.nets.faceLandmark68TinyNet.params;\n}","import { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport React from 'react';\n\nexport default ({loadingMessage}) => (\n  <Spin\n    tip={loadingMessage}\n    style={{\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minHeight: '150px',\n    }}\n    indicator={\n      <div style={{ marginRight: '50px' }}>\n        <LoadingOutlined style={{ fontSize: '32px' }} />\n      </div>\n    }\n  />\n);\n","import { Card } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport React from 'react';\nimport {\n  isFaceDetectionModelLoaded,\n  isFeatureExtractionModelLoaded,\n  isFacialLandmarkDetectionModelLoaded,\n} from '../faceUtil';\nexport default ({ errorMessage }) => (\n  <Card style={{ opacity: 0.8 }}>\n    <p>\n      Face Detector:{' '}\n      {isFaceDetectionModelLoaded() ? (\n        <strong>Loaded</strong>\n      ) :\n        errorMessage && errorMessage.length > 0 ?\n          (\n            <span style={{ color: 'red', fontWeight: 'bold' }}>\n              ERROR\n            </span>\n          ) :\n          (\n            <>\n              <strong>Loading</strong> <LoadingOutlined />\n            </>)}\n    </p>\n    <p>\n      Facial Landmark Detector:{' '}\n      {isFacialLandmarkDetectionModelLoaded() ? (\n        <strong>Loaded</strong>\n      ) :\n        errorMessage && errorMessage.length > 0 ?\n          (\n            <span style={{ color: 'red', fontWeight: 'bold' }}>\n              ERROR\n            </span>\n          ) : (\n            <>\n              <strong>Loading</strong> <LoadingOutlined />\n            </>)}\n    </p>\n    <p>\n      Feature Extractor:{' '}\n      {isFeatureExtractionModelLoaded() ? (\n        <strong>Loaded</strong>\n      ) :\n        errorMessage && errorMessage.length > 0 ?\n          (\n            <span style={{ color: 'red', fontWeight: 'bold' }}>\n              ERROR\n            </span>\n          ) : (\n            <>\n              <strong>Loading</strong> <LoadingOutlined />\n            </>)}\n    </p>\n  </Card>\n);\n","import { useMutation } from \"@apollo/react-hooks\";\nimport { Card, Form, Layout, message, Row, Select, Typography } from \"antd\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { FaceThresholdDistanceContext } from \"../../../context\";\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport {\n  getFullFaceDescription,\n  isFaceDetectionModelLoaded,\n  isFacialLandmarkDetectionModelLoaded,\n  isFeatureExtractionModelLoaded,\n  loadModels,\n} from \"../../../faceUtil\";\nimport {\n  DEFAULT_WEBCAM_RESOLUTION,\n  inputSize,\n  webcamResolutionType,\n} from \"../../../globalData\";\nimport { CREATE_TRX_MUTATION } from \"../../../graphql/mutation\";\nimport { drawRectAndLabelFace } from \"../../../utils/drawRectAndLabelFace\";\nimport ModelLoading from \"../../../utils/ModelLoading\";\nimport ModelLoadStatus from \"../../../utils/ModelLoadStatus\";\n\nconst { Title } = Typography;\nconst { Content } = Layout;\nconst { Option } = Select;\n\nexport default (props) => {\n  const { participants, faceMatcher, facePhotos } = props;\n\n  const { threshold } = useContext(FaceThresholdDistanceContext);\n\n  const webcamRef = useRef();\n  const canvasRef = useRef();\n\n  const [selectedWebcam, setSelectedWebcam] = useState();\n\n  const [inputDevices, setInputDevices] = useState([]);\n  const [camWidth, setCamWidth] = useState(DEFAULT_WEBCAM_RESOLUTION.width);\n  const [camHeight, setCamHeight] = useState(DEFAULT_WEBCAM_RESOLUTION.height);\n\n  const [isAllModelLoaded, setIsAllModelLoaded] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState(\"\");\n  const [loadingMessageError, setLoadingMessageError] = useState(\"\");\n  const [fullDesc, setFullDesc] = useState(null);\n  const [waitText, setWaitText] = useState(\"\");\n\n  const [ createTrxCallback ] = useMutation(\n    CREATE_TRX_MUTATION,\n    {\n      update(_, { data }) {\n        if (data.createTrx != \"\") message.success(data.createTrx);\n      },\n      onError(err) {\n        CheckError(err);\n      },\n    }\n  );\n\n  useEffect(() => {\n    async function loadingtheModel() {\n      await loadModels(setLoadingMessage, setLoadingMessageError);\n      setIsAllModelLoaded(true);\n    }\n    if (\n      !!isFaceDetectionModelLoaded() &&\n      !!isFacialLandmarkDetectionModelLoaded() &&\n      !!isFeatureExtractionModelLoaded()\n    ) {\n      setIsAllModelLoaded(true);\n      return;\n    }\n    loadingtheModel();\n  }, [isAllModelLoaded]);\n\n  useEffect(() => {\n    navigator.mediaDevices.enumerateDevices().then(async (devices) => {\n      let inputDevice = await devices.filter(\n        (device) => device.kind === \"videoinput\"\n      );\n      setInputDevices({ ...inputDevices, inputDevice });\n    });\n  }, []);\n\n  useEffect(() => {\n    function capture() {\n      if (\n        typeof webcamRef.current !== \"undefined\" &&\n        webcamRef.current !== null &&\n        webcamRef.current.video.readyState === 4\n      ) {\n        const videoWidth = webcamRef.current.video.videoWidth;\n        const videoHeight = webcamRef.current.video.videoHeight;\n\n        // Set canvas height and width\n        canvasRef.current.width = videoWidth;\n        canvasRef.current.height = videoHeight;\n\n        // 4. TODO - Make Detections\n        // e.g. const obj = await net.detect(video);\n\n        // Draw mesh\n        getFullFaceDescription(webcamRef.current.getScreenshot(), inputSize)\n          .then((data) => {\n            setFullDesc(data);\n            setWaitText(\"\");\n          })\n          .catch((err) => {\n            setWaitText(\n              \"Preparing face matcher and device setup, please wait...\"\n            );\n          });\n        const ctx = canvasRef.current.getContext(\"2d\");\n\n        drawRectAndLabelFace(fullDesc, faceMatcher, participants, ctx);\n\n        if (!!fullDesc) {\n          console.log(\"Now got full desc\");\n          fullDesc.map((desc) => {\n            const bestMatch = faceMatcher.findBestMatch(desc.descriptor);\n            console.log(bestMatch);\n            if (bestMatch._label != \"unknown\") {\n              createTrxCallback({\n                variables: {\n                  attendanceID: props.match.params.attendanceID,\n                  studentID: bestMatch._label,\n                },\n              });\n              console.log(\"Saving in db now\");\n            }\n          });\n        }\n      }\n    }\n\n    let interval = setInterval(() => {\n      capture();\n    }, 700);\n\n    return () => clearInterval(interval);\n  });\n\n  const handleSelectWebcam = (value) => {\n    setSelectedWebcam(value);\n  };\n\n  const handleWebcamResolution = (value) => {\n    webcamResolutionType.map((type) => {\n      if (value === type.label) {\n        setCamWidth(type.width);\n        setCamHeight(type.height);\n      }\n    });\n  };\n\n  return (\n    <Content>\n      <Card>\n        <Form>\n          <Form.Item label=\"Webcam\">\n            <Select\n              defaultValue=\"Select Webcam\"\n              style={{ width: 500 }}\n              onChange={handleSelectWebcam}\n            >\n              {inputDevices?.inputDevice?.map((device) => (\n                <Option key={device.deviceId} value={device.deviceId}>\n                  {device.label}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Webcam Size\">\n            <Select\n              defaultValue={DEFAULT_WEBCAM_RESOLUTION.label}\n              style={{ width: 200 }}\n              onChange={handleWebcamResolution}\n            >\n              {webcamResolutionType.map((type) => (\n                <Option key={type.label} value={type.label}>\n                  {type.label}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Form>\n\n        <Card>\n          <Row>Face Descriptor Matcher: {facePhotos.length}</Row>\n          <Row>Threshold Distance: {threshold}</Row>\n        </Card>\n\n        {facePhotos.length === 0 && (\n          <p className=\"alert\">No have any face matcher.</p>\n        )}\n        <ModelLoadStatus errorMessage={loadingMessageError} />\n\n        {!isAllModelLoaded ? (\n          <ModelLoading loadingMessage={loadingMessage} />\n        ) : loadingMessageError ? (\n          <div className=\"error\">{loadingMessageError}</div>\n        ) : (\n          <div></div>\n        )}\n\n        {isAllModelLoaded && loadingMessageError.length == 0 && (\n          <Card className=\"takeAttendance__card__webcam\">\n            <>\n              <p>{waitText}</p>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Webcam\n                  muted={true}\n                  ref={webcamRef}\n                  audio={false}\n                  width={camWidth}\n                  height={camHeight}\n                  screenshotFormat=\"image/jpeg\"\n                  videoConstraints={{\n                    deviceId: selectedWebcam,\n                  }}\n                  mirrored\n                />\n                <canvas\n                  ref={canvasRef}\n                  style={{\n                    position: \"absolute\",\n                    textAlign: \"center\",\n                    zindex: 8,\n                    width: camWidth,\n                    height: camHeight,\n                  }}\n                />\n              </div>\n            </>\n          </Card>\n        )}\n      </Card>\n    </Content>\n  );\n};\n","export const drawRectAndLabelFace = (descriptions, faceDB, participants, ctx) => {\n  // Loop through each desc\n  descriptions &&\n    descriptions.forEach((desc) => {\n      // Extract boxes and classes\n      const { x, y, width, height } = desc.detection.box;\n      const landmarksPoint=desc.landmarks._positions;\n\nconsole.log(landmarksPoint)\n      // const text = desc['class'];\n      const bestMatch = faceDB.findBestMatch(desc.descriptor);\n      // Set styling\n      if (bestMatch._label != \"unknown\") {\n        let filterParticipants = participants.filter(\n          (participant) => participant.student._id == bestMatch._label\n        );\n        console.log(filterParticipants);\n        bestMatch._label = filterParticipants[0].student.firstName +\" \"+ filterParticipants[0].student.lastName + \" (\" + filterParticipants[0].student.cardID + \")\";\n      }\n\n      ctx.font = \"normal 18px Gotham, Helvetica Neue, sans-serif\";\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = bestMatch._label == \"unknown\" ? \"#E00\" : \"#0E0\";\n\n      //draw 68 points\n      landmarksPoint.map(point=>{\n        ctx.beginPath();\n        ctx.fillText(bestMatch._label, x, y + height + 20);\n        ctx.fillStyle = bestMatch._label == \"unknown\" ? \"#E00\" : \"#0E0\";\n        ctx.arc(point._x, point._y, 3, 0, 2 * Math.PI);\n        ctx.closePath();\n\n        ctx.fill();\n      })\n    \n\n      // Draw rectangles and text\n      ctx.beginPath();\n      ctx.fillStyle = bestMatch._label == \"unknown\" ? \"#E00\" : \"#0E0\";\n      ctx.rect(x, y, width, height);\n\n      ctx.fillText(bestMatch._label, x, y + height + 20);\n      ctx.fillText(`L2: ${bestMatch.distance.toFixed(2)}`, x, y);\n\n      ctx.stroke();\n    });\n};\n","import { UserOutlined } from \"@ant-design/icons\";\nimport { Avatar, Button, List } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\n\nexport default ({ studentList }) => {\n  const [isPhotoVisible, setIsPhotoVisible] = useState({});\n\n  /*const handleDoubleClick = (item) => {\n    if (studentList.some(absentee=>absentee.student._id!=item.student._id)){\n    setstudentList((prevState) =>\n      prevState.filter((absentee) => absentee !== item)\n    );\n    }\n    else\n    setstudentList(prevState=>[item, ...prevState])\n\n    console.log(\"target\", item)\n    console.log(\"studentList\",studentList)\n  };*/\n\n  useEffect(() => {\n    studentList.map((studentList) => {\n      setIsPhotoVisible({\n        ...isPhotoVisible,\n        [studentList.student._id]: false,\n      });\n    });\n  }, []);\n\n  const handleShowPhoto = (id) => {\n    setIsPhotoVisible({ ...isPhotoVisible, [id]: !isPhotoVisible[id] });\n  };\n\n  return (\n    <List\n      pagination={{\n        pageSize: 10,\n      }}\n      itemLayout=\"horizontal\"\n      dataSource={studentList}\n      renderItem={(item) => (\n        <List.Item\n          key={item.student._id}\n          style={{ display: \"flex\", justifyContent: \"center\" }}\n        >\n          <List.Item.Meta\n            avatar={\n              <Avatar\n                src={item.student.profilePictureURL}\n                icon={<UserOutlined />}\n              />\n            }\n            title={\n              <span style={{ cursor: \"pointer\" }}>\n                {item.student.firstName} {item.student.lastName} (\n                {item.student.cardID}){\"  \"}\n              </span>\n            }\n            description={\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <div>\n                  <p>Check in: {item.attend_at? moment(item.attend_at).format(\"DD/MM/YYYY h:mm:ss a\"): \"-\"}</p>\n                </div>\n                <div>\n                  Number of sample photo:{\" \"}\n                  {item.facePhotos?.length === 0 ? (\n                    <span\n                      style={{\n                        color: \"red\",\n                        fontWeight: 900,\n                        fontSize: \"20px\",\n                      }}\n                    >\n                      0\n                    </span>\n                  ) : (\n                    item.facePhotos?.length || (\n                      <span\n                        style={{\n                          color: \"red\",\n                          fontWeight: 900,\n                          fontSize: \"20px\",\n                        }}\n                      >\n                        0\n                      </span>\n                    )\n                  )}\n                </div>\n\n                {item.facePhotos?.length > 0 && (\n                  <>\n                    <div>\n                      <Button onClick={() => handleShowPhoto(item.student._id)}>\n                        {!isPhotoVisible[item.student._id]\n                          ? \"Show Photo\"\n                          : \"Hide Photo\"}\n                      </Button>\n                    </div>\n                    {isPhotoVisible[item.student._id] && (\n                      <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"flex-start\",\n                          alignItems: \"space-between\",\n                          flexWrap: \"wrap\",\n                        }}\n                      >\n                        {item.facePhotos?.map((photo) => (\n                          <div key={photo._id}>\n                            <img\n                              style={{\n                                width: \"100px\",\n                                height: \"100px\",\n                                margin: \"10px\",\n                              }}\n                              data-src={photo.photoURL}\n                              className=\"lazyload\"\n                              src={`${process.env.PUBLIC_URL}/img/loader.gif`}\n                              alt={item.firstName}\n                            />\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </>\n                )}\n              </div>\n            }\n          />\n        </List.Item>\n      )}\n    />\n  );\n};\n","import { useQuery } from \"@apollo/react-hooks\";\nimport { Card, Col, Row, Spin } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { FETCH_TRX_LIST_IN_ATTENDANCE } from \"../../../graphql/query\";\nimport ListView from \"./ListView\";\n\nexport default (props) => {\n  const { participants } = props;\n  const trxGQLQuery = useQuery(FETCH_TRX_LIST_IN_ATTENDANCE, {\n    onError(err) {\n      CheckError(err);\n    },\n    pollInterval: 2000,\n\n    variables: {\n      attendanceID: props.match.params.attendanceID,\n    },\n  });\n\n  const [attendees, setAttendees] = useState([]);\n  const [absentees, setAbsentees] = useState([]);\n  \n  useEffect(() => {\n    console.log(participants);\n    if (trxGQLQuery.data) {\n      const currAbsentees = participants.filter((participant) => {\n        const result = trxGQLQuery.data.getTrxListInAttendance.filter(\n          (attendee) => participant.student._id == attendee.studentID\n        );\n\n        return result.length == 0; //count as absentee if no found\n      });\n\n      console.log(currAbsentees);\n\n      const currAttendees = participants.filter((participant) => {\n        const result = trxGQLQuery.data.getTrxListInAttendance.filter(\n          (attendee) => participant.student._id == attendee.studentID\n        );\n\n        if (result.length >= 1) {\n          Object.assign(participant, { attend_at: result[0].createdAt });\n        }\n        return result.length >= 1; //count as attendee if found\n      });\n\n      currAttendees.sort(\n        (a, b) => new Date(b.attend_at) - new Date(a.attend_at)\n      );\n\n      setAbsentees(currAbsentees);\n      setAttendees(currAttendees);\n    }\n  }, [participants, trxGQLQuery.data]);\n  return (\n    <Card>\n      \n      <p\n          style={{\n            textAlign: \"center\",\n            fontWeight: 900,\n            fontSize: \"20px\",\n          }}\n        >\n          Attendance Transaction: {attendees.length}/{participants.length}\n        </p>\n    <Row>\n     \n      <Col span={12}>\n        <Card>\n          <>\n            <p\n              style={{\n                fontWeight: 900,\n                fontSize: \"15px\",\n              }}\n            >\n              Absentee: {absentees.length}\n            </p>\n            {trxGQLQuery.loading ? (\n              <Spin tip=\"Fetching Absentees...\" />\n            ) : (\n              <ListView studentList={absentees} />\n            )}\n          </>\n        </Card>\n      </Col>\n      <Col span={12}>\n        <Card>\n          <>\n            <p\n              style={{\n                fontWeight: 900,\n                fontSize: \"15px\",\n              }}\n            >\n              Attendee: {attendees.length}\n            </p>\n            {trxGQLQuery.loading ? (\n              <Spin tip=\"Fetching Attendees...\" />\n            ) :\n            <ListView studentList={attendees} />\n            }</>\n        </Card>\n      </Col>\n    </Row>\n    </Card>\n  );\n};\n","import { LoadingOutlined } from \"@ant-design/icons\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { Card, Form, Layout, message, Select, Switch, Typography } from \"antd\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Footer,\n  Greeting,\n  Navbar,\n  PageTitleBreadcrumb,\n} from \"../../../components/common/sharedLayout\";\nimport { AuthContext, FaceThresholdDistanceContext } from \"../../../context\";\nimport { createMatcher } from \"../../../faceUtil\";\nimport { attendanceMode, DEFAULT_ATTENDANCE_MODE } from \"../../../globalData\";\nimport {\n  EDIT_ATTENDANCE_MODE_MUTATION,\n  EDIT_ATTENDANCE_ON_OFF_MUTATION,\n} from \"../../../graphql/mutation\";\nimport {\n  FETCH_ATTENDANCE_QUERY,\n  FETCH_FACE_MATCHER_IN_COURSE_QUERY,\n} from \"../../../graphql/query\";\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { LoadingSpin } from \"../../../utils/LoadingSpin\";\nimport ProcessFaceRecognition from \"./ProcessFaceRecognition\";\nimport TrxDashboard from \"./TrxDashboard\";\n\nconst { Option } = Select;\nconst { Title } = Typography;\nexport default (props) => {\n  const { user } = useContext(AuthContext);\n  const { threshold, setFaceThresholdDistance } = useContext(\n    FaceThresholdDistanceContext\n  );\n  const [mode, setMode] = useState(DEFAULT_ATTENDANCE_MODE);\n  const [isOn, setIsOn] = useState(true);\n\n  const [participants, setParticipants] = useState([]);\n  const [facePhotos, setFacePhotos] = useState([]);\n  const [faceMatcher, setFaceMatcher] = useState(null);\n\n  const [absentees, setAbsentees] = useState([]);\n  const [course, setCourse] = useState({});\n\n  const { data, loading, error } = useQuery(\n    FETCH_FACE_MATCHER_IN_COURSE_QUERY,\n    {\n      onError(err) {\n        console.log(err);\n        // props.history.push(\"/dashboard\");\n        CheckError(err);\n      },\n      variables: {\n        courseID: props.match.params.courseID,\n      },\n    }\n  );\n\n  useEffect(() => {\n    if (data) {\n      setCourse(data.getFaceMatcherInCourse.course);\n      setParticipants(data.getFaceMatcherInCourse.matcher);\n      setAbsentees(data.getFaceMatcherInCourse.matcher);\n      data.getFaceMatcherInCourse.matcher.map((item) => {\n        item.facePhotos.map((photo) =>\n          setFacePhotos((prevState) => [...prevState, photo])\n        );\n      });\n\n      if (data.getFaceMatcherInCourse.matcher.length === 0) {\n        message.info(\"Course do not have any participant yet!\");\n      }\n    }\n  }, [data, participants]);\n  const attendanceGQLQuery = useQuery(FETCH_ATTENDANCE_QUERY, {\n    onError(err) {\n      props.history.push(\n        `/course/${props.match.params.courseID}/attendanceList`\n      );\n      CheckError(err);\n    },\n    pollInterval: 2000,\n\n    variables: {\n      attendanceID: props.match.params.attendanceID,\n    },\n  });\n\n  useEffect(() => {\n    if (attendanceGQLQuery.data) {\n      setMode(attendanceGQLQuery.data.getAttendance.mode);\n      message.info(\n        \"Attendance Mode: \" + attendanceGQLQuery.data.getAttendance.mode\n      );\n      setIsOn(attendanceGQLQuery.data.getAttendance.isOn);\n      if (attendanceGQLQuery.data.getAttendance.isOn)\n        message.info(\"Attendance is currently opened\");\n      else {\n        if (user.userLevel == 0)\n          message.info(\"Attendance had been closed by the host.\");\n        else {\n          message.info(\n            \"You closed the attendance, no transaction will be recorded\"\n          );\n        }\n      }\n    }\n  }, [attendanceGQLQuery.data]);\n\n  useEffect(() => {\n    async function matcher() {\n      //check there should be at least one matcher\n      if (\n        data.getFaceMatcherInCourse.matcher.length > 0 &&\n        facePhotos.length > 0\n      ) {\n        const validMatcher = data.getFaceMatcherInCourse.matcher.filter(\n          (m) => m.facePhotos.length > 0\n        );\n        const profileList = await createMatcher(validMatcher, threshold);\n        setFaceMatcher(profileList);\n      }\n    }\n    if (!!data) {\n      matcher();\n    }\n  }, [data, facePhotos, threshold]);\n\n  const [editAttendanceModeCallback, editAttendanceModeStatus] = useMutation(\n    EDIT_ATTENDANCE_MODE_MUTATION,\n    {\n      onCompleted: async (data) => {\n        setMode(data.editAttendanceMode.mode);\n        message.success(`Set Mode To ${data.editAttendanceMode.mode}`);\n      },\n      onError(err) {\n        CheckError(err);\n      },\n    }\n  );\n\n  const [editAttendanceOnOffCallback, editAttendanceOnOffStatus] = useMutation(\n    EDIT_ATTENDANCE_ON_OFF_MUTATION,\n    {\n      onCompleted: async (data) => {\n        setIsOn(data.editAttendanceOnOff.isOn);\n        message.success(\n          `Attendance is ${data.editAttendanceOnOff.isOn == 1 ? \" on\" : \" off\"}`\n        );\n      },\n      onError(err) {\n        CheckError(err);\n      },\n    }\n  );\n\n  const handleModeChange = (value) => {\n    editAttendanceModeCallback({\n      variables: {\n        attendanceID: props.match.params.attendanceID,\n        mode: value,\n      },\n    });\n  };\n\n  const handleIsOnChange = (value) => {\n    editAttendanceOnOffCallback({\n      variables: {\n        attendanceID: props.match.params.attendanceID,\n        isOn: value,\n      },\n    });\n  };\n\n  const titleList = [\n    { name: \"Home\", link: \"/dashboard\" },\n    {\n      name: `Course: ${props.match.params.courseID}`,\n      link: `/course/${props.match.params.courseID}`,\n    },\n    {\n      name: `Attendance List`,\n      link: `/course/${props.match.params.courseID}/attendanceList`,\n    },\n    {\n      name: `Attendance Room: ${props.match.params.attendanceID}`,\n      link: `/course/${props.match.params.courseID}/attendanceRoom/${props.match.params.attendanceID}`,\n    },\n  ];\n  const { Content } = Layout;\n\n  return (\n    <Layout className=\"layout\">\n      <Navbar />\n      <Layout>\n        <Greeting />\n        <PageTitleBreadcrumb titleList={titleList} />\n        <Content>\n          <Card\n            title={\n              mode == \"F2F\" ? (\n                <Title level={4}>F2F Attendance</Title>\n              ) : (\n                <Title level={4}>Remote Attendance</Title>\n              )\n            }\n          >\n            {data && (\n              <Title level={4}>\n                Course:{\" \"}\n                {course.code + \"-\" + course.name + \"(\" + course.session + \")\"}\n              </Title>\n            )}\n          </Card>\n\n          {user.userLevel == 1 && (\n            <Card title={<Title level={4}>Attendance Setting</Title>}>\n              <Form>\n                <Form.Item label=\"Mode\">\n                  {editAttendanceModeStatus.loading ? (\n                    <LoadingOutlined\n                      style={{ fontSize: \"25px\", color: \"blue\" }}\n                    />\n                  ) : (\n                    <Select value={mode} onChange={handleModeChange}>\n                      {attendanceMode.map((mode) => (\n                        <Option key={mode} value={mode}>\n                          {mode}\n                        </Option>\n                      ))}\n                    </Select>\n                  )}\n                </Form.Item>\n                <Form.Item label=\"Open\">\n                  {editAttendanceOnOffStatus.loading ? (\n                    <LoadingOutlined\n                      style={{ fontSize: \"25px\", color: \"blue\" }}\n                    />\n                  ) : (\n                    <>\n                      <Switch onChange={handleIsOnChange} checked={isOn} />\n                      {isOn\n                        ? \" (Attendance transaction activate)\"\n                        : \" (Attendance transaction deactivate)\"}\n                    </>\n                  )}\n                </Form.Item>\n              </Form>\n            </Card>\n          )}\n\n          {/* For F2F, use Lecturer PC For FR */}\n          {attendanceGQLQuery.data &&\n            isOn &&\n            mode == \"F2F\" &&\n            user.userLevel == 1 && (\n              <ProcessFaceRecognition\n                {...props}\n                faceMatcher={faceMatcher}\n                facePhotos={facePhotos}\n                participants={participants}\n              />\n            )}\n          {/* For Remote, use Student PC For FR */}\n\n          {attendanceGQLQuery.data &&\n            isOn &&\n            mode == \"Remote\" &&\n            user.userLevel == 0 && (\n              <ProcessFaceRecognition\n                {...props}\n                faceMatcher={faceMatcher}\n                facePhotos={facePhotos}\n                participants={participants}\n              />\n            )}\n\n          {!isOn && user.userLevel == 0 && (\n            <Card>\n              <p>The host has closed the attendance</p>\n            </Card>\n          )}\n\n          <LoadingSpin loading={attendanceGQLQuery.loading} />\n          <TrxDashboard {...props} participants={participants} />\n        </Content>\n\n        <Footer />\n      </Layout>\n    </Layout>\n  );\n};\n","import { useMutation } from \"@apollo/react-hooks\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  Checkbox,\n  Divider,\n  Form,\n  Input,\n  Layout,\n  Radio,\n  Space,\n  Typography,\n} from \"antd\";\nimport React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { APP_LOGO_URL } from \"../../../assets\";\nimport Footer from \"../../../components/common/sharedLayout/Footer\";\nimport { AuthContext } from \"../../../context\";\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { EDIT_CARDID_AND_ROLE_MUTATION } from \"../../../graphql/mutation\";\nimport { useForm } from \"../../../utils/hooks\";\n\nconst { Content } = Layout;\n\nconst { Title } = Typography;\n\nexport default (props) => {\n  const { user, login, logout } = useContext(AuthContext);\n  const { onChange, onSubmit, values } = useForm(editCardIDAndRole, {\n    userLevel: 0,\n    cardID: \"\",\n  });\n\n  const [editCardIDAndRoleCallback, editCardIDAndRoleStatus] = useMutation(\n    EDIT_CARDID_AND_ROLE_MUTATION,\n    {\n      update(_, { data: { editCardIDAndUserLevel: userData } }) {\n        //reset login stuff\n        login(userData);\n        props.history.push(\"/dashboard\");\n      },\n      variables: values,\n      onError(err) {\n        CheckError(err);\n      },\n    }\n  );\n  const [isAgreementChecked, setIsAgreementChecked] = useState(false);\n\n  function editCardIDAndRole() {\n    editCardIDAndRoleCallback();\n  }\n\n  return (\n    <Layout className=\"layout\">\n      <Content\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Card\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Avatar\n            className=\"avatar\"\n            size=\"large\"\n            alt=\"Face In\"\n            src={APP_LOGO_URL.link}\n            onError={(err) => {\n              console.log(err);\n            }}\n          />\n          &nbsp; &nbsp;\n          <Space>\n            <Title level={3}>Just a few seconds...</Title>\n          </Space>\n          <Divider />\n          <Title level={4}>\n            Dear {user.firstName} {user.lastName}, tell us more about you!\n          </Title>\n          <Form\n            name=\"basic\"\n            initialValues={{ userLevel: values.role, cardID: values.cardID }}\n            onFinish={onSubmit}\n          >\n            <Form.Item\n              label=\"Staff ID/Matrix No\"\n              name=\"cardID\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your staff ID/Matrix No!\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Enter your staff ID/Matrix No\"\n                name=\"cardID\"\n                onChange={onChange}\n              />\n            </Form.Item>\n            <Form.Item label=\"Role\" name=\"userLevel\" valuePropName=\"checked\">\n              <Radio.Group\n                name=\"userLevel\"\n                value={values.userLevel}\n                onChange={onChange}\n              >\n                <Radio value={0}>Student</Radio>\n                <Radio value={1}>Lecturer</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Divider />\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                loading={editCardIDAndRoleStatus.loading}\n              >\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n          <Button\n            type=\"danger\"\n            htmlType=\"submit\"\n            disabled={editCardIDAndRoleStatus.loading}\n            onClick={() => logout()}\n          >\n            Logout\n          </Button>\n        </Card>\n      </Content>\n      <Footer />\n    </Layout>\n  );\n};\n","import { Card, Layout, Typography } from 'antd';\nimport React from 'react';\nimport { HeaderNavbar } from '../../../components/common/mainMenu';\nimport { Footer } from '../../../components/common/sharedLayout';\nconst { Content } = Layout;\nconst { Title } = Typography;\n\nexport default () => {\n    return (\n        <Layout className='home layout'>\n            <HeaderNavbar />\n            <Content>\n                <Card>\n                </Card>\n            </Content>\n            <Footer />\n        </Layout>\n    );\n}\n","import { Card, Layout, Typography } from \"antd\";\nimport { HeaderNavbar } from \"../../../components/common/mainMenu\";\nimport { Footer } from \"../../../components/common/sharedLayout\";\nimport React from \"react\";\nconst { Content } = Layout;\nconst { Title } = Typography;\n\nexport default () => {\n  return (\n    <Layout className=\"home layout\">\n      <HeaderNavbar />\n      <Content>\n        <Card>\n\n        </Card>\n      </Content>\n      <Footer />\n    </Layout>\n  );\n};\n","import { Button, Card, Col, Layout, Row, Avatar, Divider, Typography } from 'antd';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { HeaderNavbar } from '../../../components/common/mainMenu';\nimport { Footer } from '../../../components/common/sharedLayout';\nimport 'rc-texty/assets/index.css';\nconst { Content } = Layout;\nconst { Title } = Typography;\nexport default () => {\n    return (\n        <Layout className='home layout'>\n            <HeaderNavbar />\n            <Content>\n                <Card>\n                    <Row>\n                        <Title level={2}>User Guidelines 🧾</Title>\n                    </Row>\n                    <Row>\n                        There are 2 user roles which are \"Student\" and \"Professor\"\n                    </Row>\n\n                </Card>\n                <Divider />\n                <Card>\n                    <Row>\n                        Instructions For Professor:\n                    </Row>\n                    <Row>\n                        1. Register an account.\n                    </Row>\n                    <Row>\n                        2. Create a course.\n                    </Row>\n                    <Row>\n                        3. Give the course unique ID to your students.\n                    </Row>\n                    <Row>\n                        4. Students need to send the request to enrol, approve the enrolment.\n                    </Row>\n                    <Row>\n                        5. You do not need upload student's face photo, which will be done by students.\n                    </Row>\n                    <Row>\n                        6. After all student enrolled, select a course and take the attendance.\n                    </Row>\n                    <Row>\n                        7. You can see how many face photo of all the enrolled students have uploaded.\n                    </Row>\n                    <Row>\n                        8. Ensure that the students upload their face photo, otherwise there is no facial data of that student for reference.\n                    </Row>\n                    <Row>\n                        9. Only those enrol in the particular course will be counted into dataset for facial classification.\n                    </Row>\n                    <Row>\n                        10. Inside attendance taking form, select the time, date and camera.\n                    </Row>\n                    <Row>\n                        11. Wait for all the models being loaded.\n                    </Row>\n                    <Row>\n                        12. Set the approriate threshold distance as you wish.\n                    </Row>\n                    <Row>\n                        13. Submit the attendance form if finished.\n                    </Row>\n                    <Row>\n                        14. Visualize the attendance data in \"Attendance History\", or you can enter a particular course and click \"View Attendance History\".\n                    </Row>\n                    <Row>\n                        15. You can \"Warn\" or \"Kick\" the student out of a course.\n                    </Row>\n                    <Row>\n                        16. The face photo of the student who is kicked out will not be counted next time taking the attendance.\n                    </Row>\n                </Card>\n                <Divider />\n                <Card>\n                    <Row>\n                        Instructions For Student:\n                    </Row>\n                    <Row>\n                        1. Register an account.\n                    </Row>\n                    <Row>\n                        2. Enrol a course.\n                    </Row>\n                    <Row>\n                        3. Wait for approval from the lecturer.\n                    </Row>\n                    <Row>\n                        4. Upload your face photo in \"Face Gallery\", best to have at least 2 face photo.\n                    </Row>\n                    <Row>\n                        5. Wait for all models being loaded.\n                    </Row>\n                    <Row>\n                        6. The system will perform face detection, ensuring only a single face exist and rejecting photo with empty face or multiple faces.\n                    </Row>\n                    <Row>\n                        7. The photo will be uploaded to the image storage.\n                    </Row>\n                    <Row>\n                        8. When your lecturer take the attendance of a particular course, all your uploaded facial data will be counted into the dataset for facial comparison.\n                    </Row>\n                    <Row>\n                        9. Visualize the attendance data in \"Attendance History\", or you can enter a particular course and click \"View Attendance History\".\n                    </Row>\n\n                </Card>\n                <Divider />\n                <Card>\n                    <Row style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                        The website use API provided by: <a href=\"https://github.com/justadudewhohacks/face-api.js\" target=\"_blank\">face-api.js</a>\n                    </Row>\n                    <Row style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                        Credit to author: <a href=\"https://github.com/justadudewhohacks\" target=\"_blank\">justadudewhohacks</a>\n                    </Row>\n                </Card>\n            </Content>\n            <Footer />\n        </Layout>\n    )\n}\n","import { LoadingOutlined } from \"@ant-design/icons\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport {\n  Button,\n  Card,\n  DatePicker,\n  Form,\n  Layout,\n  message,\n  Select,\n  TimePicker,\n} from \"antd\";\nimport moment from \"moment\";\nimport React, { useContext, useState } from \"react\";\nimport {\n  Footer,\n  Greeting,\n  Navbar,\n  PageTitleBreadcrumb,\n} from \"../../../components/common/sharedLayout\";\nimport { AttendanceContext } from \"../../../context\";\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { CREATE_ATTENDANCE_MUTATION } from \"../../../graphql/mutation\";\nimport { FETCH_COURSE_QUERY } from \"../../../graphql/query\";\nconst { Content } = Layout;\nconst { Option } = Select;\nexport default (props) => {\n  const titleList = [\n    { name: \"Home\", link: \"/dashboard\" },\n    {\n      name: `Course: ${props.match.params.id}`,\n      link: `/course/${props.match.params.id}`,\n    },\n    { name: \"Take Attendance\", link: \"takeAttendance\" },\n  ];\n\n  const [selectedDate, setSelectedDate] = useState(moment().toISOString());\n  const [selectedTime, setSelectedTime] = useState(moment().toISOString());\n\n  const courseGQLQuery = useQuery(FETCH_COURSE_QUERY, {\n    onError(err) {\n      props.history.push(\"/dashboard\");\n      CheckError(err);\n    },\n    variables: {\n      id: props.match.params.id,\n    },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const [submitAttendanceCallback, submitAttendanceStatus] = useMutation(\n    CREATE_ATTENDANCE_MUTATION,\n    {\n      update(_, { data }) {\n        message.success(\"Success Submit.\");\n        props.history.push(`/course/${props.match.params.id}/attendanceRoom/${data.createAttendance._id}`);\n      },\n      onError(err) {\n        CheckError(err);\n      },\n    }\n  );\n\n  //form\n  const handleDateChange = (value) => {\n    setSelectedDate(value?._d.toISOString());\n  };\n\n  const handleTimeChange = (value) => {\n    setSelectedTime(value?._d.toISOString());\n  };\n\n  const handleSubmit = () => {\n    if (courseGQLQuery.data)\n      submitAttendanceCallback({\n        variables: {\n          date: selectedDate,\n          time: selectedTime,\n          courseID: props.match.params.id,\n        },\n      });\n  };\n  return (\n    <Layout className=\"layout\">\n      <Navbar />\n      <Layout>\n        <Greeting />\n        <PageTitleBreadcrumb titleList={titleList} />\n        <Content>\n          <Card title=\"Attendance Form\" className=\"addCourse__card\">\n            <Form onFinish={handleSubmit}>\n              <Form.Item label=\"Course\">\n                {courseGQLQuery.data && (\n                  <span>\n                    {courseGQLQuery.data.getCourse.code} -\n                    {courseGQLQuery.data.getCourse.name} (\n                    {courseGQLQuery.data.getCourse.session})\n                  </span>\n                )}\n                {courseGQLQuery.loading && (\n                  <>\n                    Fetching Course Detail... <LoadingOutlined />\n                  </>\n                )}\n              </Form.Item>\n              <Form.Item label=\"Date\">\n                <DatePicker\n                  defaultValue={moment()}\n                  format=\"YYYY/MM/DD\"\n                  onChange={handleDateChange}\n                />\n              </Form.Item>\n              <Form.Item label=\"Time\">\n                {\" \"}\n                <TimePicker\n                  defaultValue={moment()}\n                  format=\"HH:mm\"\n                  onChange={handleTimeChange}\n                />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  className='btn'\n                  disabled={courseGQLQuery.loading}\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  loading={submitAttendanceStatus.loading}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </Card>\n        </Content>\n        <Footer />\n      </Layout>\n    </Layout>\n  );\n};\n","import { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Col, message, Modal, Row, Upload } from \"antd\";\nimport React, { useState } from \"react\";\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { getFullFaceDescription } from \"../../../faceUtil\";\nimport { inputSize } from \"../../../globalData\";\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n}\n\nexport const UploadFromDisk = ({\n  addFacePhotoCallback,\n  galleryRefetch,\n  countRefetch,\n  loading,\n}) => {\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [fullDesc, setFullDesc] = useState([]);\n  const [faceDescriptor, setFaceDescriptor] = useState([]);\n  const [previewImage, setPreviewImage] = useState(\"\");\n  const [previewTitle, setPreviewTitle] = useState(\"\");\n  const [isRunningFaceDetector, setIsRunningFaceDetector] = useState(false);\n  const [detectionCount, setDetectionCount] = useState(0);\n\n  const [fileList, setFileList] = useState([]);\n  const handleCancel = () => setPreviewVisible(false);\n\n  const handlePreview = async (file) => {\n    setPreviewVisible(true);\n    setPreviewTitle(\n      file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\n    );\n  };\n\n  const handleChange = async ({ fileList }) => {\n    if (fileList.length === 0) {\n      setFaceDescriptor([]);\n      setDetectionCount(0);\n      setFileList([]);\n      return;\n    }\n\n    if (!fileList[0].url && !fileList[0].preview) {\n      if (/\\.(jpe?g|png)$/i.test(fileList[0].name) === false) {\n        alert(\"Not an image file (only JPG/JEPG/PNG accepted)!\");\n        return;\n      }\n      fileList[0].preview = await getBase64(fileList[0].originFileObj);\n    }\n    setPreviewImage(fileList[0].url || fileList[0].preview);\n    setFileList(fileList);\n\n    if (fileList[0].preview.length > 0) {\n      setIsRunningFaceDetector(true);\n      await getFullFaceDescription(fileList[0].preview, inputSize).then(\n        (data) => {\n          setFullDesc(data);\n          setDetectionCount(data.length);\n          setFaceDescriptor(data[0]?.descriptor);\n          setIsRunningFaceDetector(false);\n        }\n      );\n    }\n  };\n\n  const handleSubmit = () => {\n    if (previewImage.length > 0 && faceDescriptor.length === 128)\n      addFacePhotoCallback({\n        update(_, data) {\n          galleryRefetch();\n          countRefetch();\n          message.success(\"Add Face Photo Success!\");\n        },\n        onError(err) {\n          CheckError(err);\n        },\n        variables: {\n          photoData: previewImage,\n          faceDescriptor: faceDescriptor.toString(),\n        },\n      });\n  };\n  return (\n    <>\n      <Row style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Col>\n          <Upload\n            beforeUpload={() => false}\n            multiple={false}\n            listType=\"picture-card\"\n            onPreview={handlePreview}\n            onChange={handleChange}\n            accept=\"image/x-png,image/jpeg\"\n            progress\n            fileList={fileList}\n          >\n            {fileList.length >= 1 ? null : (\n              <div>\n                <PlusOutlined />\n                <div style={{ marginTop: 8 }}>Upload</div>\n              </div>\n            )}\n          </Upload>\n        </Col>\n        <Col>\n          {\" \"}\n          <Button\n            className='btn'\n            type=\"primary\"\n            loading={loading}\n            disabled={\n              previewImage.length === 0 ||\n              loading ||\n              detectionCount !== 1 ||\n              faceDescriptor.length !== 128\n            }\n            onClick={handleSubmit}\n          >\n            Save\n          </Button>\n        </Col>\n      </Row>\n      <Row>\n        <div>\n          {detectionCount > 1 && (\n            <span className=\"alert\">Only single face allowed</span>\n          )}\n          {detectionCount === 0 && (\n            <span className=\"alert\">No face detected</span>\n          )}\n          <p>\n            Number of detection:{\" \"}\n            {isRunningFaceDetector ? (\n              <>\n                Detecting face... <LoadingOutlined />\n              </>\n            ) : (\n              detectionCount\n            )}\n          </p>\n          Face Descriptor:{\" \"}\n          {detectionCount === 0 && !isRunningFaceDetector && <span>Empty</span>}\n          {isRunningFaceDetector && (\n            <>\n              Generating 128 measurements... <LoadingOutlined />\n            </>\n          )}\n          <br />\n          {fullDesc.map((desc, index) => (\n            <div\n              key={index}\n              style={{\n                wordBreak: \"break-all\",\n                marginBottom: \"10px\",\n                backgroundColor: \"lightblue\",\n              }}\n            >\n              <p style={{ color: \"red\", fontSize: \"20px\", fontWeight: 900 }}>\n                Face #{index + 1}:{\" \"}\n              </p>{\" \"}\n              {desc.descriptor.toString()}\n            </div>\n          ))}\n        </div>\n      </Row>\n\n      <Modal\n        visible={previewVisible}\n        title={previewTitle}\n        footer={null}\n        onCancel={handleCancel}\n      >\n        <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\n      </Modal>\n    </>\n  );\n};\n","import { Button, Card, Form, Col, message, Select } from \"antd\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { getFullFaceDescription } from \"../../../faceUtil\";\nimport {\n  DEFAULT_WEBCAM_RESOLUTION,\n  inputSize,\n  webcamResolutionType,\n} from \"../../../globalData\";\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { drawFaceRect } from \"../../../utils/drawFaceRect\";\n\nconst { Option } = Select;\n\nexport const UploadFromWebcam = ({\n  addFacePhotoCallback,\n  galleryRefetch,\n  countRefetch,\n  loading,\n}) => {\n  const [camWidth, setCamWidth] = useState(DEFAULT_WEBCAM_RESOLUTION.width);\n  const [camHeight, setCamHeight] = useState(DEFAULT_WEBCAM_RESOLUTION.height);\n  const [inputDevices, setInputDevices] = useState([]);\n  const [selectedWebcam, setSelectedWebcam] = useState();\n\n  const [fullDesc, setFullDesc] = useState(null);\n\n  const [faceDescriptor, setFaceDescriptor] = useState([]);\n\n  const [detectionCount, setDetectionCount] = useState(0);\n  const [previewImage, setPreviewImage] = useState(\"\");\n\n  const [waitText, setWaitText] = useState(\"\");\n\n  const webcamRef = useRef();\n  const canvasRef = useRef();\n\n  const handleSelectWebcam = (value) => {\n    setSelectedWebcam(value);\n  };\n  const handleWebcamResolution = (value) => {\n    webcamResolutionType.map((type) => {\n      if (value === type.label) {\n        setCamWidth(type.width);\n        setCamHeight(type.height);\n      }\n    });\n  };\n\n  useEffect(() => {\n    navigator.mediaDevices.enumerateDevices().then(async (devices) => {\n      let inputDevice = await devices.filter(\n        (device) => device.kind === \"videoinput\"\n      );\n      setInputDevices({ ...inputDevices, inputDevice });\n    });\n  }, []);\n\n  useEffect(() => {\n    function capture() {\n      if (\n        typeof webcamRef.current !== \"undefined\" &&\n        webcamRef.current !== null &&\n        webcamRef.current.video.readyState === 4\n      ) {\n        setPreviewImage(webcamRef.current.getScreenshot());\n\n        const videoWidth = webcamRef.current.video.videoWidth;\n        const videoHeight = webcamRef.current.video.videoHeight;\n\n        // Set canvas height and width\n        canvasRef.current.width = videoWidth;\n        canvasRef.current.height = videoHeight;\n\n        // 4. TODO - Make Detections\n        // e.g. const obj = await net.detect(video);\n\n        // Draw mesh\n        getFullFaceDescription(webcamRef.current.getScreenshot(), inputSize)\n          .then((data) => {\n            setFullDesc(data);\n            setFaceDescriptor(data[0]?.descriptor);\n            setWaitText(\"\");\n          })\n          .catch((err) => {\n            setWaitText(\n              \"Preparing face matcher and device setup, please wait...\"\n            );\n          });\n        const ctx = canvasRef.current.getContext(\"2d\");\n\n        drawFaceRect(fullDesc, ctx);\n      }\n    }\n\n    let interval = setInterval(() => {\n      capture();\n    }, 700);\n\n    return () => clearInterval(interval);\n  });\n\n  const handleSubmit = () => {\n    addFacePhotoCallback({\n      update() {\n        galleryRefetch();\n        countRefetch();\n        message.success(\"Add Face Photo Success!\");\n      },\n      onError(err) {\n        CheckError(err);\n      },\n      variables: {\n        photoData: previewImage,\n        faceDescriptor: faceDescriptor.toString(),\n      },\n    });\n  };\n\n  return (\n    <Card>\n      <Form>\n        <Form.Item label=\"Webcam\">\n          <Select\n            defaultValue=\"Select Webcam\"\n            style={{ width: 500 }}\n            onChange={handleSelectWebcam}\n          >\n            {inputDevices?.inputDevice?.map((device) => (\n              <Option key={device.deviceId} value={device.deviceId}>\n                {device.label}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Webcam Size\">\n          <Select\n            defaultValue={DEFAULT_WEBCAM_RESOLUTION.label}\n            style={{ width: 200 }}\n            onChange={handleWebcamResolution}\n          >\n            {webcamResolutionType.map((type) => (\n              <Option key={type.label} value={type.label}>\n                {type.label}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n      </Form>\n      <p style={{ fontSize: \"18px\" }}>{waitText}</p>\n\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Webcam\n          muted={true}\n          ref={webcamRef}\n          audio={false}\n          width={camWidth}\n          height={camHeight}\n          screenshotFormat=\"image/jpeg\"\n          videoConstraints={{\n            deviceId: selectedWebcam,\n          }}\n          mirrored\n        />\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            textAlign: \"center\",\n            zindex: 8,\n            width: camWidth,\n            height: camHeight,\n          }}\n        />\n      </div>\n      {previewImage && (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <h3>Previous Capture: </h3>\n          <img\n            src={previewImage}\n            alt=\"Capture\"\n            style={{ width: \"200px\", height: \"200px\" }}\n          />\n          <div style={{ marginTop: \"10px\" }}>\n            <Button\n              className='btn'\n              type=\"primary\"\n              onClick={handleSubmit}\n              disabled={\n                loading ||\n                (fullDesc && fullDesc.length !== 1) ||\n                (faceDescriptor && faceDescriptor.length !== 128)\n              }\n              loading={loading}\n            >\n              Save\n            </Button>\n          </div>\n        </div>\n      )}\n\n      <div>\n        <p>\n          Number of detection: {fullDesc ? fullDesc.length : 0}{\" \"}\n          {fullDesc && fullDesc.length > 1 && (\n            <span className=\"alert\">Cannot more than 2</span>\n          )}\n        </p>\n        Face Descriptors:{\" \"}\n        {fullDesc &&\n          fullDesc.map((desc, index) => (\n            <div\n              key={index}\n              style={{\n                wordBreak: \"break-all\",\n                marginBottom: \"10px\",\n                backgroundColor: \"lightblue\",\n              }}\n            >\n              <strong style={{ fontSize: \"20px\", color: \"red\" }}>\n                Face #{index}:{\" \"}\n              </strong>\n              {desc.descriptor.toString()}\n            </div>\n          ))}\n      </div>\n    </Card>\n  );\n};\n","export const drawFaceRect = (descriptions, ctx) => {\n  // Loop through each desc\n  descriptions &&\n    descriptions.forEach((desc) => {\n      // Extract boxes and classes\n      const { x, y, width, height } = desc.detection.box;\n      const landmarksPoint=desc.landmarks._positions;\n\n      ctx.font = \"normal 18px Gotham, Helvetica Neue, sans-serif\";\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = \"#08E\";\n\n      //draw 68 points\n      landmarksPoint.map(point=>{\n        ctx.beginPath();\n        ctx.fillStyle = \"#08E\";\n        ctx.arc(point._x, point._y, 3, 0, 2 * Math.PI);\n        ctx.closePath();\n\n        ctx.fill();\n      })\n    \n      // Draw rectangles and text\n      ctx.beginPath();\n      ctx.rect(x, y, width, height);\n      ctx.stroke();\n    });\n};\n","import { useMutation } from \"@apollo/react-hooks\";\nimport { Card, Col, Form, Row, Select } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport {\n  isFaceDetectionModelLoaded,\n  isFacialLandmarkDetectionModelLoaded,\n  isFeatureExtractionModelLoaded,\n  loadModels,\n} from \"../../../faceUtil\";\nimport { DEFAULT_UPLOAD_OPTION, UPLOAD_OPTION } from \"../../../globalData\";\nimport { ADD_FACE_PHOTO_MUTATION } from \"../../../graphql/mutation\";\nimport ModelLoadStatus from \"../../../utils/ModelLoadStatus\";\nimport ModelLoading from \"../../../utils/ModelLoading\";\nimport { UploadFromDisk } from \"./UploadFromDisk\";\nimport { UploadFromWebcam } from \"./UploadFromWebcam\";\n\nconst { Option } = Select;\n\nexport default ({ galleryRefetch, countRefetch }) => {\n  const [selectedUploadOption, setSelectedUploadOption] = useState(\n    DEFAULT_UPLOAD_OPTION\n  );\n\n  const [isAllModelLoaded, setIsAllModelLoaded] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState(\"\");\n  const [loadingMessageError, setLoadingMessageError] = useState(\"\");\n\n  const [addFacePhotoCallback, { loading }] = useMutation(\n    ADD_FACE_PHOTO_MUTATION,\n    {\n      onError(err) {\n        CheckError(err);\n      },\n    }\n  );\n\n  const handleSelectUploadOption = (value) => {\n    setSelectedUploadOption(value);\n  };\n\n  useEffect(() => {\n    async function loadingtheModel() {\n      await loadModels(setLoadingMessage, setLoadingMessageError);\n      setIsAllModelLoaded(true);\n    }\n    if (\n      !!isFaceDetectionModelLoaded() &&\n      !!isFacialLandmarkDetectionModelLoaded() &&\n      !!isFeatureExtractionModelLoaded()) {\n      setIsAllModelLoaded(true);\n      return;\n    }\n\n    loadingtheModel();\n  }, [isAllModelLoaded]);\n\n  return (\n    <Card>\n      <Card title=\"Model Load\">\n        <ModelLoadStatus errorMessage={loadingMessageError} />\n      </Card>\n      <br />\n      {!isAllModelLoaded ? (\n        <ModelLoading loadingMessage={loadingMessage} />\n      ) : loadingMessageError ? (\n        <div className=\"error\">{loadingMessageError}</div>\n      ) : (\n        isAllModelLoaded &&\n        loadingMessageError.length === 0 && (\n          <div>\n              <Form>\n                <Form.Item label=\"Upload Option\">\n                  <Select\n                    defaultValue={DEFAULT_UPLOAD_OPTION}\n                    style={{ width: 200 }}\n                    onChange={handleSelectUploadOption}\n                  >\n                    {UPLOAD_OPTION.map((op) => (\n                      <Option key={op} value={op}>\n                        {op}\n                      </Option>\n                    ))}\n                  </Select>\n                </Form.Item>\n              </Form>\n\n                {selectedUploadOption === \"From Disk\" ? (\n                  <UploadFromDisk\n                    addFacePhotoCallback={addFacePhotoCallback}\n                    galleryRefetch={galleryRefetch}\n                    countRefetch={countRefetch}\n                    loading={loading}\n                  />\n                ) : (\n                  <UploadFromWebcam\n                    addFacePhotoCallback={addFacePhotoCallback}\n                    galleryRefetch={galleryRefetch}\n                    countRefetch={countRefetch}\n                    loading={loading}\n                  />\n                )}\n\n        \n        </div>))}\n    </Card>\n  );\n};\n","import { LoadingOutlined } from \"@ant-design/icons\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { Button, Card, Layout, message, Switch } from \"antd\";\nimport moment from \"moment\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Modal from \"../../../components/common/customModal\";\nimport {\n  Footer,\n  Greeting,\n  Navbar,\n  PageTitleBreadcrumb,\n} from \"../../../components/common/sharedLayout\";\nimport { FacePhotoContext } from \"../../../context\";\nimport { CheckError } from \"../../../utils/ErrorHandling\";\nimport { FETCH_FACE_PHOTOS_LIMIT, modalItems } from \"../../../globalData\";\nimport {\n  DELETE_FACE_PHOTO_MUTATION,\n  TOGGLE_PHOTO_PRIVACY_MUTATION,\n} from \"../../../graphql/mutation\";\nimport {\n  FETCH_FACE_PHOTOS_COUNT_QUERY,\n  FETCH_FACE_PHOTOS_QUERY,\n} from \"../../../graphql/query\";\nimport { FetchChecker } from \"../../../utils/FetchChecker\";\nimport { LoadingSpin } from \"../../../utils/LoadingSpin\";\nimport AddFacePhoto from \"./addFacePhoto\";\n\nconst { Content } = Layout;\nexport default () => {\n  const {\n    facePhotos,\n    fetchedDone,\n    loadFacePhotos,\n    setFetchedDone,\n  } = useContext(FacePhotoContext);\n\n  const [isDescriptorVisible, setIsDescriptorVisible] = useState({});\n\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n  const [selectedPhoto, setSelectedPhoto] = useState();\n\n  const { data, loading, refetch, fetchMore } = useQuery(\n    FETCH_FACE_PHOTOS_QUERY,\n    {\n      onCompleted(data) {\n        data.getFacePhotos.facePhotos.map((photo) => {\n          setIsDescriptorVisible({\n            ...isDescriptorVisible,\n            [photo._id]: false,\n          });\n        });\n      },\n      onError(err) {\n        CheckError(err);\n      },\n      variables: {\n        limit: FETCH_FACE_PHOTOS_LIMIT,\n      },\n      notifyOnNetworkStatusChange: true,\n    }\n  );\n\n  const facePhotosCountQuery = useQuery(FETCH_FACE_PHOTOS_COUNT_QUERY, {\n    onError(err) {\n      CheckError(err);\n    },\n  });\n\n\n  const [deleteFacePhotoCallback, deleteFacePhotoStatus] = useMutation(\n    DELETE_FACE_PHOTO_MUTATION,\n    {\n      onError(err) {\n        CheckError(err);\n      },\n    }\n  );\n\n  useEffect(() => {\n    loadFacePhotos(data?.getFacePhotos.facePhotos || []);\n    if (data) {\n      if (!data.getFacePhotos.hasNextPage) setFetchedDone(true);\n      else setFetchedDone(false);\n    }\n  }, [data]);\n\n  const handleDescriptorVisible = (id) => {\n    setIsDescriptorVisible({\n      ...isDescriptorVisible,\n      [id]: !isDescriptorVisible[id],\n    });\n  };\n\n  const handleDelete = () => {\n    deleteFacePhotoCallback({\n      update(_, { data }) {\n        message.success(data.deleteFacePhoto);\n        setSelectedPhoto(null);\n        setIsDeleteModalVisible(false);\n        refetch();\n        facePhotosCountQuery.refetch();\n      },\n      variables: {\n        photoID: selectedPhoto._id,\n      },\n    });\n  };\n\n  const handleCancel = () => {\n    setIsDeleteModalVisible(false);\n  };\n\n  const handleFetchMore = () => {\n    fetchMore({\n      variables: {\n        limit: FETCH_FACE_PHOTOS_LIMIT,\n        cursor: facePhotos[facePhotos.length - 1]._id,\n      },\n      onError(err) {\n        CheckError(err);\n      },\n      updateQuery: (pv, { fetchMoreResult }) => {\n        return {\n          getFacePhotos: {\n            __typename: \"FacePhotos\",\n            facePhotos: [\n              ...pv.getFacePhotos.facePhotos,\n              ...fetchMoreResult.getFacePhotos.facePhotos,\n            ],\n            hasNextPage: fetchMoreResult.getFacePhotos.hasNextPage,\n          },\n        };\n      },\n    });\n  };\n  return (\n    <Layout className=\"layout\">\n      <Navbar />\n      <Layout>\n        <Greeting />\n        <PageTitleBreadcrumb\n          titleList={[{ name: \"Face Gallery\", link: \"/facegallery\" }]}\n        />\n\n        <Content>\n          <Card>\n            <AddFacePhoto\n              galleryRefetch={refetch}\n              countRefetch={facePhotosCountQuery.refetch}\n            />\n            <Card\n              title={\n                <strong>\n                  Your Gallery:{\" \"}\n                  {facePhotosCountQuery.data?.getFacePhotosCount || 0}\n                </strong>\n              }\n            >\n              {facePhotos.map((photo, index) => (\n                <Card key={photo._id}>\n                  <Card>\n                    <img\n                      height={150}\n                      width={120}\n                      data-src={photo.photoURL}\n                      src={`${process.env.PUBLIC_URL}/img/loader.gif`}\n                      className=\"lazyload\"\n                      alt={\"Face Photo: \" + index}\n                    />\n                    <br /> <br />\n                  </Card>\n                  &nbsp;\n                  <strong>Face Descriptor: </strong>\n                  <Button onClick={() => handleDescriptorVisible(photo._id)}>\n                    {!isDescriptorVisible[photo._id] ? \"Show\" : \"Hide\"}\n                  </Button>\n                  {isDescriptorVisible[photo._id] && (\n                    <p\n                      style={{\n                        wordBreak: \"break-all\",\n                        marginBottom: \"10px\",\n                        backgroundColor: \"lightblue\",\n                      }}\n                    >\n                      {photo.faceDescriptor}\n                    </p>\n                  )}\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      alignItems: \"flex-end\",\n                    }}\n                  >\n                    <p>Uploaded at: {moment(photo.createdAt).format(\"LLL\")}</p>\n                  </div>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      alignItems: \"flex-end\",\n                    }}\n                  >\n                    <Button\n                      className='btndng'\n                      type=\"danger\"\n                      onClick={() => {\n                        setIsDeleteModalVisible(true);\n                        setSelectedPhoto(photo);\n                      }}\n                    >\n                      Delete Photo\n                    </Button>\n                  </div>\n                </Card>\n              ))}\n              <LoadingSpin loading={loading} />\n              {/*give text of fetch result*/}\n              <FetchChecker\n                loading={loading}\n                payload={facePhotos}\n                fetchedDone={fetchedDone}\n                allLoadedMessage=\"All Face Photo Loaded\"\n                noItemMessage=\"No Face Photo Added...\"\n                handleFetchMore={handleFetchMore}\n              />\n\n              {/*modal backdrop*/}\n              <Modal\n                title=\"Delete Photo\"\n                action={modalItems.facePhoto.action.delete}\n                itemType={modalItems.facePhoto.name}\n                visible={isDeleteModalVisible}\n                loading={deleteFacePhotoStatus.loading}\n                handleOk={handleDelete}\n                handleCancel={handleCancel}\n                payload={selectedPhoto}\n              />\n            </Card>\n          </Card>\n        </Content>\n        <Footer />\n      </Layout>\n    </Layout>\n  );\n};\n","import { useQuery } from \"@apollo/react-hooks\";\nimport { notification } from \"antd\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { AuthContext } from \"../context/auth\";\nimport { CheckError } from \"../utils/ErrorHandling\";\nimport { FETCH_FACE_PHOTOS_COUNT_QUERY } from \"../graphql/query\";\n\nfunction AuthRoute({ component: Component, ...rest }) {\n  const { user } = useContext(AuthContext);\n\n  //get uploaded photos query\n  const facePhotosCountQuery = useQuery(FETCH_FACE_PHOTOS_COUNT_QUERY, {\n    onError(err) {\n      CheckError(err);\n    },\n  });\n\n  //check amount of uploaded photo to notify student\n  useEffect(() => {\n    if (user && user.userLevel === 0)\n      if (facePhotosCountQuery.data)\n        if (facePhotosCountQuery.data.getFacePhotosCount < 2) {\n          notification[\"info\"]({\n            message: (\n              <strong>\n                Please add your face photograph for at least 2<br />\n                <br />\n              </strong>\n            ),\n            description: `Number of face photograph uploaded: ${facePhotosCountQuery.data.getFacePhotosCount}`,\n          });\n          if (\n            window.location.pathname != \"/notification\" &&\n            window.location.pathname != \"/facegallery\"\n          )\n            window.location.href = \"/facegallery\";\n        }\n  }, [facePhotosCountQuery]);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user && (user.userLevel === 0 || user.userLevel === 1) ? (\n          <Component {...props} />\n        ) : user && user.userLevel === -1 ? (\n          <Redirect to=\"/aboutYourself\" />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n}\n\nexport default AuthRoute;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { AuthContext } from \"../context/auth\";\n\nfunction LecturerRoute({ component: Component, ...rest }) {\n  const { user } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user && user.userLevel === 1 ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n}\n\nexport default LecturerRoute;\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { AuthContext } from '../context/auth';\n\nfunction ProtectedRoute({ component: Component, ...rest }) {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? <Redirect to='/dashboard' /> : <Component {...props} />\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;\n","import { useQuery } from \"@apollo/react-hooks\";\nimport { notification } from \"antd\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { AuthContext } from \"../context/auth\";\nimport { CheckError } from \"../utils/ErrorHandling\";\nimport { FETCH_FACE_PHOTOS_COUNT_QUERY } from \"../graphql/query\";\n\nfunction StudentRoute({ component: Component, ...rest }) {\n  const { user } = useContext(AuthContext);\n\n  //get uploaded photos query\n  const facePhotosCountQuery = useQuery(FETCH_FACE_PHOTOS_COUNT_QUERY, {\n    onError(err) {\n      CheckError(err);\n    },\n  });\n\n  //check amount of uploaded photo to notify student\n  useEffect(() => {\n    if (user && user.userLevel === 0)\n      if (facePhotosCountQuery.data)\n        if (facePhotosCountQuery.data.getFacePhotosCount < 2) {\n          notification[\"info\"]({\n            message: (\n              <strong>\n                Please add your face photograph for at least 2<br />\n                <br />\n              </strong>\n            ),\n            description: `Number of face photograph uploaded: ${facePhotosCountQuery.data.getFacePhotosCount}`,\n          });\n          if (window.location.pathname != \"/notification\" && window.location.pathname != \"/facegallery\")\n            window.location.href = \"/facegallery\";\n        }\n  }, [facePhotosCountQuery]);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user && user.userLevel === 0 ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n}\n\nexport default StudentRoute;\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { AuthContext } from '../context/auth';\n\nexport default ({ component: Component, ...rest }) => {\n  const { user } = useContext(AuthContext);\n  console.log(rest)\n  return (    \n    <Route\n      render={(props) =>\n        user && user.userLevel==-1 ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to='/' />\n        )\n      }\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport { Button, Input, message } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nexport default () => {\n  const [courseID, SetCourseID] = useState('');\n  const [createNotificationCallback, createNotificationStatus] = useMutation(\n    CREATE_NOTIFICATION_MUTATION,\n    {\n      onError: (err) => {\n        message.error(err.message);\n      },\n    }\n  );\n  const [\n    deleteAllNotificationCallback,\n    deleteAllNotificationStatus,\n  ] = useMutation(DELETE_ALL_NOTIFICATION_MUTATION, {\n    onError: (err) => {\n      message.error(err.message);\n    },\n  });\n  const [createCourseCallback, createCourseStatus] = useMutation(\n    CREATE_COURSE_MUTATION,\n    {\n      onError: (err) => {\n        message.error(err.message);\n      },\n    }\n  );\n  const [deleteAllCourseCallback, deleteAllCourseStatus] = useMutation(\n    DELETE_ALL_COURSE_MUTATION,\n    {\n      onError: (err) => {\n        message.error(err.message);\n      },\n    }\n  );\n  const [registerStudentCallback, registerStudentStatus] = useMutation(\n    REGISTER_STUDENT_MUTATION,\n    {\n      onError: (err) => {\n        message.error(err.message);\n      },\n      variables: {\n        courseID: courseID,\n      },\n    }\n  );\n  return (\n    <div>\n      <h1>Testing</h1>\n      <Button\n        onClick={() => createNotificationCallback()}\n        disabled={createNotificationStatus.loading}\n      >\n        Create 50 notification{' '}\n        {createNotificationStatus.loading && <LoadingOutlined />}\n      </Button>\n      <Button\n        onClick={() => deleteAllNotificationCallback()}\n        disabled={deleteAllNotificationStatus.loading}\n      >\n        Delete All notification{' '}\n        {deleteAllNotificationStatus.loading && <LoadingOutlined />}\n      </Button>\n      <Button\n        onClick={() => createCourseCallback()}\n        disabled={createCourseStatus.loading}\n      >\n        Create 50 courses {createCourseStatus.loading && <LoadingOutlined />}\n      </Button>\n      <Button\n        onClick={() => deleteAllCourseCallback()}\n        disabled={deleteAllCourseStatus.loading}\n      >\n        Delete All courses{' '}\n        {deleteAllCourseStatus.loading && <LoadingOutlined />}\n      </Button>\n      <Button\n        onClick={() => registerStudentCallback()}\n        disabled={registerStudentStatus.loading}\n      >\n        Register 10 student and enrol to course{' '}\n        {registerStudentStatus.loading && <LoadingOutlined />}\n      </Button>\n      <input\n        type='text'\n        name='courseID'\n        onChange={(e) => SetCourseID(e.target.value)}\n      ></input>\n    </div>\n  );\n};\n\nconst CREATE_NOTIFICATION_MUTATION = gql`\n  mutation createNotification {\n    createNotification\n  }\n`;\n\nconst DELETE_ALL_NOTIFICATION_MUTATION = gql`\n  mutation deleteAllNotification {\n    deleteAllNotification\n  }\n`;\n\nconst CREATE_COURSE_MUTATION = gql`\n  mutation testingCreateCourse {\n    testingCreateCourse\n  }\n`;\n\nconst DELETE_ALL_COURSE_MUTATION = gql`\n  mutation testingDeleteAllCourse {\n    testingDeleteAllCourse\n  }\n`;\n\nconst REGISTER_STUDENT_MUTATION = gql`\n  mutation testingRegisterStudent($courseID: String!) {\n    testingRegisterStudent(courseID: $courseID)\n  }\n`;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport {\n  AttendanceProvider,\n  AuthProvider,\n  CourseProvider,\n  EnrolmentProvider,\n  FacePhotoProvider,\n  FaceThresholdDistanceProvider,\n  NavbarProvider,\n  NotificationProvider,\n} from \"./context\";\nimport {\n  CourseDetails,\n  Dashboard,\n  MainMenu,\n  NoFound,\n  Notifications,\n  Profile,\n  SignIn,\n  SignUp,\n  InCourseAttendanceHistory,\n  SingleAttendanceHistory,\n  AttendanceRoom,\n  UndefinedCardIDAndRole,\n  PrivacyPolicy,\n  TermCondition,\n  UserGuidelines,\n} from \"./pages/common\";\nimport {\n  AttendanceForm,\n} from \"./pages/lecturerPage\";\nimport { FaceGallery } from \"./pages/studentPage\";\nimport {\n  AuthRoute,\n  LecturerRoute,\n  ProtectedRoute,\n  StudentRoute,\n  UndefinedCardIDAndRoleRoute,\n} from \"./routes\";\nimport Testing from \"./Testing\";\nimport \"lazysizes\";\n\nfunction App() {\n  return (\n    <NavbarProvider>\n      <AuthProvider>\n        <NotificationProvider>\n          <AttendanceProvider>\n            <CourseProvider>\n              <EnrolmentProvider>\n                <FacePhotoProvider>\n                  <FaceThresholdDistanceProvider>\n                    <Router>\n                      <Switch>\n                        <ProtectedRoute exact path=\"/\" component={MainMenu} />\n                        <ProtectedRoute\n                          exact\n                          path=\"/signin\"\n                          component={SignIn}\n                        />\n                        <ProtectedRoute\n                          exact\n                          path=\"/signup\"\n                          component={SignUp}\n                        />\n\n                        <UndefinedCardIDAndRoleRoute\n                          exact\n                          path=\"/aboutYourself\"\n                          component={UndefinedCardIDAndRole}\n                        />\n                        <AuthRoute\n                          exact\n                          path=\"/dashboard\"\n                          component={Dashboard}\n                        />\n                        <AuthRoute exact path=\"/profile\" component={Profile} />\n                        <AuthRoute\n                          exact\n                          path=\"/notification\"\n                          component={Notifications}\n                        />\n                        <AuthRoute\n                          exact\n                          path=\"/course/:id\"\n                          component={CourseDetails}\n                        />\n                        {/* <AuthRoute exact path='/testing' component={Testing} /> */}\n                        <LecturerRoute\n                          exact\n                          path=\"/course/:id/attendanceForm\"\n                          component={AttendanceForm}\n                        />\n                        <AuthRoute\n                          exact\n                          path=\"/course/:courseID/attendanceRoom/:attendanceID\"\n                          component={AttendanceRoom}\n                        />\n\n                        <AuthRoute\n                          exact\n                          path=\"/course/:id/attendanceList\"\n                          component={InCourseAttendanceHistory}\n                        />\n\n                        <AuthRoute\n                          exact\n                          path=\"/course/:courseID/attendanceList/:attendanceID\"\n                          component={SingleAttendanceHistory}\n                        />\n\n                        <StudentRoute\n                          exact\n                          path=\"/facegallery\"\n                          component={FaceGallery}\n                        />\n                        <Route\n                          exact\n                          path=\"/termandcondition\"\n                          component={TermCondition}\n                        />\n                        <Route\n                          exact\n                          path=\"/privacypolicy\"\n                          component={PrivacyPolicy}\n                        />\n                        <Route\n                          exact\n                          path=\"/userguidelines\"\n                          component={UserGuidelines}\n                        />\n                        <AuthRoute component={NoFound} />\n                      </Switch>\n                    </Router>\n                  </FaceThresholdDistanceProvider>\n                </FacePhotoProvider>\n              </EnrolmentProvider>\n            </CourseProvider>\n          </AttendanceProvider>\n        </NotificationProvider>\n      </AuthProvider>\n    </NavbarProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport App from \"./App\";\nimport ApolloClient from \"apollo-client\";\nimport { defaultDataIdFromObject, InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { setContext } from \"apollo-link-context\";\n\nconst httpLink = createHttpLink({\n  uri:\n    !process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\n      ? \"http://localhost:4000/\"\n      : \"https://api-attendlytical.herokuapp.com\",\n});\n\nconst authLink = setContext(() => {\n  const token = localStorage.getItem(\"jwtToken\");\n  return {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache({\n    dataIdFromObject(responseObject) {\n      return defaultDataIdFromObject(responseObject);\n    },\n  }),\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport ApolloProvider from './ApolloProvider';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(ApolloProvider, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workerzs: https:s//bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}